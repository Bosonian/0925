import{D as b,A as n,l as h,b as w}from"./index-DIpsYUXh.js";class g extends Error{constructor(r,e,t){super(r),this.name="APIError",this.status=e,this.url=t;}}class l extends g{constructor(r,e,t){super(r,e,t),this.name="MedicalAPIError";}}function P(o,r){if(!o||typeof o!="object")return null;const e=[],t=[];return Object.entries(o).forEach(([i,s])=>{typeof s=="number"&&(s>0?e.push({label:i,weight:s}):s<0&&t.push({label:i,weight:Math.abs(s)}));}),e.sort((i,s)=>s.weight-i.weight),t.sort((i,s)=>s.weight-i.weight),{kind:"flat_dictionary",units:"logit",positive:e,negative:t,meta:{}};}const u={safeParseFloat:(o,r=0)=>{const e=parseFloat(o);return isNaN(e)?r:e;},normalizeBooleans:o=>{const r={...o};return Object.keys(r).forEach(e=>{r[e]==="true"||r[e]===!0?r[e]=1:(r[e]==="false"||r[e]===!1)&&(r[e]=0);}),r;},async makeApiCall(o,r,e="unknown"){console.log(`[API] Making ${e} request to:`,o),console.log("[API] Payload:",r);try{const t=new AbortController,i=o.includes("full_stroke")?15e3:8e3,s=setTimeout(()=>t.abort(),i),d=this.normalizeBooleans(r),c=await fetch(o,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(d),signal:t.signal,mode:"cors"});if(clearTimeout(s),!c.ok){const f=await c.text().catch(()=>"Network error");throw new l(`API request failed: ${c.status} ${c.statusText} - ${f}`,c.status,o);}const a=await c.json();return console.log(`[API] ${e} response:`,a),console.log(`[API] ${e} response keys:`,Object.keys(a)),console.log(`[API] ${e} first key:`,Object.keys(a)[0]),console.log(`[API] ${e} first value:`,a[Object.keys(a)[0]]),console.log(`[API] ${e} probability:`,a.probability),console.log(`[API] ${e} ich_probability:`,a.ich_probability),!a.probability&&a.ich_probability!==void 0&&(a.probability=a.ich_probability,console.log(`[API] ${e} normalized probability from ich_probability:`,a.probability)),a;}catch(t){throw t.name==="AbortError"?(console.warn(`[API] ${e} request timeout`),new l(`Request timeout after ${timeout/1e3}s`,408,o)):t instanceof l?t:(console.error(`[API] ${e} request failed:`,t),new l(`Network error: ${t.message}`,0,o));}},getRequestStats:()=>({requests:0,errors:0,avgResponseTime:0}),cancelAllRequests:()=>console.log("Cancel requests - not implemented"),async predict(o,r){const t={coma_ich:n.COMA_ICH,limited_ich:n.LDM_ICH,full_stroke:n.FULL_STROKE,lvo:n.LVO_PREDICTION}[o];if(!t)throw new l(`Unknown module type: ${o}`,400,"unknown");return await this.makeApiCall(t,r,o);}};async function _(){console.log("Warming up Cloud Functions...");const r=[n.FULL_STROKE,n.LVO_PREDICTION,n.COMA_ICH,n.LDM_ICH,n.AUTHENTICATE].map(async(e,t)=>{await new Promise(i=>setTimeout(i,t*200));try{const i=new AbortController,s=e.includes("full_stroke")?8e3:3e3,d=setTimeout(()=>i.abort(),s);await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({}),signal:i.signal,mode:"cors"}),clearTimeout(d),console.log(`‚úì Warmed up: ${e.split("/").pop()}`);}catch(i){console.log(`‚úì Warm-up attempt for ${e.split("/").pop()} completed`);}});Promise.all(r).then(()=>{console.log("‚úÖ Cloud Functions warm-up complete");}).catch(()=>{});}async function F(o){try{return await u.predict("coma_ich",o);}catch(r){if(r instanceof l){const e=new Error(r.message);throw e.name="APIError",e.status=r.status,e.url=r.url,e;}throw r;}}async function y(o){try{return await u.predict("limited_ich",o);}catch(r){if(r instanceof l){const e=new Error(r.message);throw e.name="APIError",e.status=r.status,e.url=r.url,e;}throw r;}}async function p(o,r=0){if(console.log("[API] predictLVO called with payload:",o),!o.gfap_value||!o.fast_ed_score)throw new l("Missing required parameters: gfap_value and fast_ed_score",400,n.LVO_PREDICTION);console.log("[API] LVO payload preparation...");try{console.log("üå©Ô∏è Using LVO Cloud Function (primary)");const e=await u.predict("lvo",o);return console.log("[API] LVO Cloud Function response:",e),e;}catch(e){console.warn("‚ö†Ô∏è LVO Cloud Function failed, falling back to local model:",e.message),console.log("üè† Using New LVO Model (fallback)");try{const t=parseFloat(o.gfap_value),i=parseInt(o.fast_ed_score);if(isNaN(t)||isNaN(i))throw new Error("Invalid GFAP or FAST-ED values");const s=h(t,i),d=w(t,i),c={kind:"new_model_fallback",units:"normalized_contribution",positive:[{label:"GFAP Biomarker",weight:t>100?.6:.3},{label:"FAST-ED Score",weight:i*.1}].sort((a,f)=>Math.abs(f.weight)-Math.abs(a.weight)),negative:[],meta:{riskLevel:s>.7?"high":s>.4?"moderate":"low",interpretation:`${(s*100).toFixed(1)}% LVO probability (${d===1?"Positive":"Negative"})`}};return{probability:s,drivers:c,confidence:s>.7?.9:s>.4?.7:.5,module:"New LVO Model (Scientifically Calibrated)",interpretation:`${(s*100).toFixed(1)}% LVO probability based on GFAP=${t} and FAST-ED=${i}`};}catch(t){throw console.warn("‚ö†Ô∏è New LVO Model fallback failed:",t.message),new l(`LVO prediction failed: ${e.message}`,e.status||500,n.LVO_PREDICTION);}}}async function I(o,r=0){console.log("[API] predictFullStroke called with payload:",o),console.log("[API] isLocalPreview():",m());try{const e=await u.predict("full_stroke",o);console.log("[API] Full stroke raw response:",e);const t=e.ich_prediction||{};console.log("[API] Extracted ICH data:",t);let i=null;try{console.log("üîÑ Using dedicated LVO prediction (cloud function + fallback)"),i=await p(o),console.log("‚úÖ LVO prediction successful via dedicated function");}catch(s){console.warn("‚ö†Ô∏è Dedicated LVO prediction failed:",s),t.lvo_prediction?i={probability:t.lvo_prediction.probability||0,drivers:t.lvo_prediction.drivers||null,confidence:t.lvo_prediction.confidence||.8,module:"Full Stroke (API Fallback)"}:i=await p(o);}return{ich:{probability:t.probability,drivers:t.drivers?P(t.drivers,"ICH"):t.drivers,confidence:t.confidence,module:t.module},lvo:i};}catch(e){if(console.error("Full Stroke prediction failed:",e),e.status===408&&r<1)return console.log("‚è±Ô∏è Retrying Full Stroke API (cold start detected)..."),I(o,r+1);if(m()){const t=b.mockApiResponses.full_stroke,i=t.ich_prediction||{},s=t.lvo_prediction||{};return{ich:{probability:u.safeParseFloat(i.probability,0),drivers:i.drivers||null,confidence:u.safeParseFloat(i.confidence,.85),module:"Full Stroke (Mock)"},lvo:{probability:u.safeParseFloat(s.probability,0),drivers:s.drivers||null,confidence:u.safeParseFloat(s.confidence,.85),module:"Full Stroke (Mock)"}};}throw new l(`Failed to get stroke predictions: ${e.message}`,e.status,n.FULL_STROKE);}}function m(){return["localhost","127.0.0.1","0.0.0.0"].includes(window.location.hostname);}function k(o){try{const r=Math.max(0,10**(.0192+.4533*Math.log10(Math.max(1,Math.min(o,1e4)))));return Number.isFinite(r)?r:0;}catch(r){return 0;}}function O(o){return!Number.isFinite(o)||o<=0?"5-10%":o>=60?"91-100%":o>=50?"44-91%":o>=30?"19-44%":o>=10?"10-19%":"5-10%";}function v(o){return o<1?"<1 ml":o<10?`${o.toFixed(1)} ml`:`${Math.round(o)} ml`;}export{g as A,y as a,F as b,O as c,k as e,v as f,I as p,_ as w};
//# sourceMappingURL=prediction-models-D4Bj5_qH.js.map
