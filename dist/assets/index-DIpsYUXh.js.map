{"version":3,"mappings":"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","names":["isDevelopment","__vite_import_meta_env__","MOCK_AUTH_SUCCESS","MOCK_API_RESPONSES","API_URLS","DEV_CONFIG","CRITICAL_THRESHOLDS","GFAP_RANGES","APP_CONFIG","VALIDATION_RULES","value","formData","diastolic","systolic","LAMBDA","B0","B_GFAP","B_FAST","MU_G","SIG_G","MU_F","SIG_F","A_PLATT","B_PLATT","FINAL_THRESHOLD","NUMERIC_EPS","MIN_FAST_ED","MAX_FAST_ED","yeoJohnson","x","lambda","standardize","mean","std","logistic","validateInputs","gfap","fasted","numGfap","numFasted","lvoProbability","validated","clampedFasted","gfapTransformed","gfapStandardized","fastedStandardized","logit","calibratedLogit","lvoClass","messages","I18n","savedLanguage","language","key","newLanguage","lang","date","locale","i18n","t","getPrerequisites","renderPrerequisitesModal","prerequisites","item","initPrerequisitesModal","modal","closeBtn","cancelBtn","confirmBtn","closeModal","navigate","e","checkboxes","cb","warning","checkbox","allChecked","showPrerequisitesModal","existingModal","modalElement","safeSetInnerHTML","error","fallbackModal","handleTriage1","isComatose","store","handleTriage2","isExaminable","screen","reset","goBack","goHome","handleSubmit","container","form","module","validation","validateForm","showValidationErrors","firstErrorName","el","sr","errorCount","inputs","element","n","button","originalContent","results","predictComaIch","predictLimitedIch","predictFullStroke","_a","_b","storedState","showToast","cs","isLocalPreview","m","ich","lvo","pIch","pLvo","fallbackResults","errorMessage","APIError","showError","e2","message","alert","h4","iconSpan","p","containerDiv","duration","toast","ERROR_SEVERITY","ERROR_CATEGORIES","MedicalError","code","category","severity","context","GlobalErrorHandler","event","errorEntry","globalErrorHandler","safeAsync","asyncFn","options","fallback","timeout","retries","attempt","timeoutPromise","_","reject","resolve","safeAuthOperation","authFn","validatePatientData","data","errors","warnings","validateICHRiskResult","result","isPatientData","isICHRiskResult","TypeChecker","expectedType","fieldName","isValid","actualType","range","min","max","LOG_LEVELS","LOG_CATEGORIES","MedicalLogger","stored","timestamp","random","loggingError","level","safeContext","entry","userId","sanitized","sensitiveFields","removeSensitiveData","obj","cleaned","lowerKey","field","sessionData","navigation","performance","levelInfo","style","serialized","keys","operation","action","success","url","method","status","metric","urlObj","param","filters","allLogs","log","filtered","a","b","minLevel","sinceDate","format","logs","headers","rows","row","medicalLogger","debug","info","warn","critical","medicalCalculation","authentication","userInteraction","networkRequest","auditTrail","AuthenticationManager","password","expectedPassword","getResearchPassword","storageError","isLocalHost","preferMock","response","errorCode","secureRemove","input","hashBuffer","hash","i","char","session","secureRetrieve","storedToken","storedExpiry","expiryDate","timestampNum","events","updateActivity","timeRemaining","hoursRemaining","minutesRemaining","authManager","renderProgressIndicator","currentStep","steps","html","step","index","isActive","isCompleted","renderTriage1","renderTriage2","renderComa","renderLimited","renderFull","renderCriticalAlert","FIELD_LABEL_MAP","PATTERN_REPLACEMENTS","formatDriverName","mappedKey","translated","formatted","pattern","replacement","l","formatSummaryLabel","formatDisplayValue","renderDriversSection","renderEnhancedDriversPanel","drivers","title","type","probability","driversViewModel","positiveDrivers","negativeDrivers","maxWeight","d","totalPositiveWeight","sum","driver","relativeImportance","barWidth","cleanLabel","totalNegativeWeight","COMPREHENSIVE_HOSPITAL_DATABASE","ROUTING_ALGORITHM","patientData","location","state","ichProbability","timeFromOnset","clinicalFactors","detectedState","database","destination","comprehensiveOptions","allThrombolysisCapable","strokeUnitsAndHigher","stateCenters","nearestState","minDistance","center","distance","userLocation","hospitals","hospital","point1","point2","dLat","dLng","deg","calculateDistance","lat1","lng1","lat2","lng2","toRadians","degrees","calculateTravelTime","fromLat","fromLng","toLat","toLng","profile","route","source","calculateEmergencyTravelTime","getRiskLevel","probabilityPercent","thresholds","renderInputSummary","summaryHtml","moduleTitle","itemsHtml","label","displayValue","renderRiskCard","percent","riskLevel","isCritical","isHigh","icons","titles","strokeColor","renderICHVolumeDisplay","gfapValue","getCurrentGfapValue","estVolume","estimateVolumeFromGFAP","renderCircularBrainDisplay","renderResults","startTime","currentModule","getCurrentModuleName","legacyResults","calculateLegacyFromResults","isResearchModeEnabled","safeLogResearchData","getPatientInputs","isLimitedOrComa","isFullModule","resultsHtml","renderICHFocusedResults","renderFullModuleResults","initializeVolumeAnimations","mountIslands","__vitePreload","mountIslands$1","err","criticalAlert","ichPercentLocal","strokeCenterHtml","renderStrokeCenterMap","inputSummaryHtml","researchToggleHtml","renderResearchToggle","researchComparisonHtml","renderModelComparison","alternativeDiagnosesHtml","renderComaAlternativeDiagnoses","strokeDifferentialHtml","renderStrokeDifferentialDiagnoses","renderVolumeCard","renderICHDriversOnly","renderBibliography","ichPercent","lvoPercent","fastEdScore","hasValidLVO","showLVORiskCard","showVolumeCard","ratio","inRatioBand","showDominanceBanner","debugShowTachometer","cardCount","layoutClass","renderTachometerGauge","renderDominanceBanner","dominant","icon","dominantText","subtitle","driversData","renderCompactDriver","percentage","width","ichData","patientInputs","calculateLegacyICH","age","isDE","highProbDiagnoses","lowProbDiagnoses","diagnoses","mortality","estimateMortalityFromVolume","diff","maxP","c","renderLoginScreen","initializeLoginScreen","loginForm","passwordInput","loginError","loginButton","showLoginError","setLoginLoading","hideLoginError","authResult","isLoading","buttonText","loadingSpinner","announceScreenChange","announcement","screenNames","setPageTitle","appName","section","focusMainHeading","heading","FastEdCalculator","score","total","component","applyBtn","totalElement","riskElement","currentScore","onApplyCallback","firstRadio","armWeaknessBoolean","eyeDeviationBoolean","remaining","components","assignToThis","fastEdCalculator","header","footer","render","currentScreen","screenHistory","backButton","appContent","restoreFormData","attachEvents","initializeStrokeCenterMap","initializeResearchMode","group","boolVal","printButton","fastEdInput","currentValue","armPareseField","eyeDeviationField","toggle","targetId","targetContent","arrow","UIManager","isLocal","next","btn","elementId","handler","wrappedHandler","target","helpButton","helpModal","modalClose","languageToggle","currentLang","selector","text","darkModeToggle","isDark","researchModeToggle","shouldShow","researchPanel","isVisible","modalId","yearElement","errorEvent","missingElements","id","ThemeManager","savedTheme","prefersDark","themeToApply","mediaQuery","handleSystemThemeChange","newTheme","theme","metaThemeColor","themeColors","systemTheme","SessionManager","forms","savedCount","numValue","newData","currentData","savedData","CacheStorageType","CachePriority","MedicalCacheTTL","CacheEntry","ttl","priority","metadata","priorityWeight","accessWeight","ageWeight","MedicalCache","storageType","cacheData","parsed","entryData","metricId","medicalPerformanceMonitor","PerformanceMetricType","size","oldEntry","medicalEventObserver","MEDICAL_EVENTS","entriesCleared","lowestScore","keyToEvict","cleanedCount","hitRate","MedicalCacheFactory","cache","__publicField","predictionCache","LoadPriority","LoadState","LazyComponent","name","loader","delay","dependencyPromises","dep","LazyLoader","entries","priorities","targetPriorities","preloadPromises","pri","componentName","pendingComponents","comp","loadPromises","scheduleNext","deadline","normalQueue","lowQueue","stats","totalLoadTime","loadedCount","queue","MedicalComponentLoader","lazyLoader","command","predictionStrategy","validationFactory","clinicalSituation","moduleType","enterpriseComponents","r","AdvancedFeaturesManager","swInitialized","medicalSWManager","syncInitialized","medicalSyncManager","criticalResources","clinicalAuditTrail","clinicalReportingSystem","qualityMetricsTracker","v","_d","_c","_f","_e","AppController","warmUpFunctions","coreInitTasks","failures","createApp","app","API_ENDPOINTS","WARMUP_PAYLOADS","APIWarmupService","background","warmupPromises","errorResult","payload","summary","criticalAPIs","apiName","apiWarmupService","initializeAPIWarmup","criticalOnly","initializeApplication","startupEvent","handleInitializationFailure","handlePageUnload","setupGlobalErrorHandlers","main","regs","reg","getCSSVar","ProbabilityRing","canvasRef","useRef","containerRef","useEffect","canvas","draw","dpr","ctx","height","cx","cy","radius","progressWidth","trackWidth","adjustedRadius","borderColor","stroke","startAngle","endAngle","rafId","ro","React","TachometerGauge","lvoProb","ichProb","raf","currentPos","safeIch","rawRatio","clampedRatio","targetPos","absDiff","maxProb","confidence","rect","cssW","cssH","isMobile","isTablet","baseWidth","padding","maxRHorizontal","maxRVerticalBase","maxRVertical","colors","bezelGradient","segments","angleStep","progress","g","color","majorTicks","minorTicks","val","pos","inner","outer","tickFont","th","labelFont","labelDistance","needleAngle","needleLen","coneSpan","needleColor","now","gradient","tx","ty","pulse","tipRadius","hubOuter","hubInner","hubGradient","innerGradient","ratioFont","ratioY","plateWidth","plateHeight","confY","confWidth","confHeight","confFill","confGradient","node","root","createRoot","MedicalCommand","description","UpdatePatientDataCommand","newValue","previousValue","NavigationCommand","targetScreen","sourceScreen","SubmitFormCommand","ClearDataCommand","dataType","MedicalCommandInvoker","cmd","medicalCommandInvoker","PredictionStrategy","inputData","missingFields","rawResult","ComaPredictionStrategy","processedInput","LimitedDataPredictionStrategy","FullStrokePredictionStrategy","PredictionContext","strategy","strategyName","predictionContext","PREDICTION_STRATEGIES","ValidationRule","required","validator","check","medicalError","NumericValidationRule","BiomarkerValidationRule","biomarkerType","ranges","VitalSignValidationRule","vitalType","AgeValidationRule","ClinicalScaleValidationRule","scaleType","MedicalValidationFactory","rules","validationErrors","rule","VALIDATION_RULE_TYPES","BIOMARKER_TYPES","VITAL_SIGN_TYPES","CLINICAL_SCALE_TYPES"],"ignoreList":[],"sources":["../../src/config.js","../../src/lib/lvoModel.js","../../src/localization/messages.js","../../src/localization/i18n.js","../../src/ui/components/prerequisites-modal.js","../../src/logic/handlers.js","../../src/utils/error-handler.js","../../src/types/medical-types.js","../../src/utils/medical-logger.js","../../src/auth/authentication.js","../../src/ui/components/progress.js","../../src/ui/screens/triage1.js","../../src/ui/screens/triage2.js","../../src/ui/screens/coma.js","../../src/ui/screens/limited.js","../../src/ui/screens/full.js","../../src/ui/components/alerts.js","../../src/utils/label-formatter.js","../../src/ui/components/drivers.js","../../src/data/comprehensive-stroke-centers.js","../../src/data/stroke-centers.js","../../src/logic/formatters.js","../../src/ui/screens/results.js","../../src/ui/screens/login.js","../../src/ui/a11y.js","../../src/ui/components/fastEdModal.js","../../src/ui/components/header.js","../../src/ui/components/footer.js","../../src/ui/render.js","../../src/core/ui-manager.js","../../src/core/theme-manager.js","../../src/core/session-manager.js","../../src/performance/medical-cache.js","../../src/components/lazy-loader.js","../../src/core/advanced-features-manager.js","../../src/core/app-controller.js","../../src/core/api-warmup.js","../../src/main.js","../../src/react/ProbabilityRing.jsx","../../src/react/TachometerGauge.jsx","../../src/react/mountIslands.jsx","../../src/patterns/command.js","../../src/patterns/prediction-strategy.js","../../src/patterns/validation-factory.js"],"sourcesContent":["// Configuration for the Stroke Triage Assistant\r\n\r\n// Development mode detection (prefer Vite flag, fallback to hostname)\r\n// Only treat Vite dev server as development; preview uses production settings\r\nconst isDevelopment = !!(import.meta && import.meta.env && import.meta.env.DEV);\r\n\r\n// Mock authentication for local development\r\nconst MOCK_AUTH_SUCCESS = {\r\n  success: true,\r\n  message: 'Development mode - authentication bypassed',\r\n  session_token: `dev-token-${Date.now()}`,\r\n  expires_at: new Date(Date.now() + 30 * 60 * 1000).toISOString(),\r\n  session_duration: 1800,\r\n};\r\n\r\n// Mock API responses for development (matching real Cloud Function format)\r\nconst MOCK_API_RESPONSES = {\r\n  coma_ich: {\r\n    probability: 25.3,\r\n    ich_probability: 25.3,\r\n    drivers: {\r\n      gfap_value: 0.4721,\r\n      baseline_risk: 0.1456,\r\n    },\r\n    confidence: 0.75,\r\n  },\r\n  limited_ich: {\r\n    probability: 31.7,\r\n    ich_probability: 31.7,\r\n    drivers: {\r\n      age_years: 0.2845,\r\n      systolic_bp: 0.1923,\r\n      gfap_value: 0.4231,\r\n      vigilanzminderung: 0.3456,\r\n    },\r\n    confidence: 0.65,\r\n  },\r\n  full_stroke: {\r\n    ich_prediction: {\r\n      probability: 28.4,\r\n      drivers: {\r\n        age_years: 0.1834,\r\n        gfap_value: 0.3921,\r\n        systolic_bp: 0.2341,\r\n        vigilanzminderung: 0.2876,\r\n      },\r\n      confidence: 0.88,\r\n    },\r\n    lvo_prediction: {\r\n      probability: 45.2,\r\n      drivers: {\r\n        fast_ed_score: 0.7834,\r\n        age_years: 0.2341,\r\n        eye_deviation: 0.1923,\r\n      },\r\n      confidence: 0.82,\r\n    },\r\n  },\r\n  authenticate: {\r\n    success: true,\r\n    message: 'Development mode - authentication bypassed',\r\n    session_token: `dev-token-${Date.now()}`,\r\n    expires_at: new Date(Date.now() + 30 * 60 * 1000).toISOString(),\r\n    session_duration: 1800,\r\n  },\r\n};\r\n\r\nexport const API_URLS = isDevelopment ? {\r\n  // Development mode - use Vite proxy to bypass CORS\r\n  COMA_ICH: '/api/cloud-functions/predict_coma_ich',\r\n  LDM_ICH: '/api/cloud-functions/predict_limited_data_ich',\r\n  FULL_STROKE: '/api/cloud-functions/predict_full_stroke',\r\n  LVO_PREDICTION: '/api/cloud-functions/predict_lvo',\r\n  AUTHENTICATE: '/api/cloud-functions/authenticate-research-access',\r\n} : {\r\n  // Production mode - use direct endpoints\r\n  COMA_ICH: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_coma_ich',\r\n  LDM_ICH: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_limited_data_ich',\r\n  FULL_STROKE: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_full_stroke',\r\n  LVO_PREDICTION: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_lvo',\r\n  AUTHENTICATE: 'https://europe-west3-igfap-452720.cloudfunctions.net/authenticate-research-access',\r\n};\r\n\r\nexport const DEV_CONFIG = {\r\n  isDevelopment,\r\n  mockAuthResponse: MOCK_AUTH_SUCCESS,\r\n  mockApiResponses: MOCK_API_RESPONSES,\r\n};\r\n\r\nexport const CRITICAL_THRESHOLDS = {\r\n  ich: {\r\n    medium: 25,\r\n    high: 50,\r\n  },\r\n  lvo: {\r\n    medium: 25,\r\n    high: 50,\r\n  },\r\n};\r\n\r\nexport const GFAP_RANGES = {\r\n  min: 29,\r\n  max: 10001,\r\n  normal: 100,\r\n  elevated: 500,\r\n  critical: 1000,\r\n};\r\n\r\nexport const APP_CONFIG = {\r\n  autoSaveInterval: 180000, // 3 minutes to reduce irritating screen blinks\r\n  sessionTimeout: 30 * 60 * 1000, // 30 minutes\r\n  requestTimeout: 10000, // 10 seconds (default)\r\n  fullStrokeTimeout: 20000, // 20 seconds for full stroke (handles cold starts)\r\n};\r\n\r\nexport const VALIDATION_RULES = {\r\n  age_years: {\r\n    required: true,\r\n    min: 0,\r\n    max: 120,\r\n    type: 'integer',\r\n    medicalCheck: (value) => (value < 18 ? 'Emergency stroke assessment typically for adults (≥18 years)' : null),\r\n  },\r\n  systolic_bp: {\r\n    required: true,\r\n    min: 60,\r\n    max: 300,\r\n    type: 'number',\r\n    medicalCheck: (value, formData) => {\r\n      const diastolic = formData?.diastolic_bp;\r\n      if (diastolic && value <= diastolic) {\r\n        return 'Systolic BP must be higher than diastolic BP';\r\n      }\r\n      return null;\r\n    },\r\n  },\r\n  diastolic_bp: {\r\n    required: true,\r\n    min: 30,\r\n    max: 200,\r\n    type: 'number',\r\n    medicalCheck: (value, formData) => {\r\n      const systolic = formData?.systolic_bp;\r\n      if (systolic && value >= systolic) {\r\n        return 'Diastolic BP must be lower than systolic BP';\r\n      }\r\n      return null;\r\n    },\r\n  },\r\n  gfap_value: {\r\n    required: true,\r\n    min: GFAP_RANGES.min,\r\n    max: GFAP_RANGES.max,\r\n    type: 'number',\r\n    medicalCheck: (value) => {\r\n      if (value > 8000) {\r\n        return 'Warning: Extremely high GFAP value - please verify lab result (still valid)';\r\n      }\r\n      return null;\r\n    },\r\n  },\r\n  fast_ed_score: {\r\n    required: true,\r\n    min: 0,\r\n    max: 9,\r\n    type: 'integer',\r\n    medicalCheck: (value) => (value >= 4 ? 'High FAST-ED score suggests LVO - consider urgent intervention' : null),\r\n  },\r\n  gcs: {\r\n    required: true,\r\n    min: 3,\r\n    max: 15,\r\n    type: 'integer',\r\n    medicalCheck: (value) => (value < 8 ? 'GCS < 8 indicates severe consciousness impairment - consider coma module' : null),\r\n  },\r\n};\r\n","/**\r\n * Production LVO Model - Scientifically Calibrated (JavaScript Version)\r\n *\r\n * Implementation of GFAP + FAST-ED LVO prediction model with:\r\n * - Yeo-Johnson power transformation for GFAP\r\n * - Z-score normalization\r\n * - Logistic regression with calibrated thresholds\r\n * - Platt scaling for probability calibration\r\n */\r\n\r\n// Model parameters (scientifically calibrated via CalibratedClassifierCV)\r\nconst LAMBDA = -0.825559; // Yeo-Johnson lambda for GFAP transformation\r\nconst B0 = -0.408314; // Logistic regression intercept\r\nconst B_GFAP = -0.826450; // GFAP coefficient (negative = protective when transformed)\r\nconst B_FAST = 1.651521; // FAST-ED coefficient (positive = risk factor)\r\n\r\n// Standardization parameters (from training data statistics)\r\nconst MU_G = -0.000000; // Mean of transformed GFAP\r\nconst SIG_G = 1.000000; // Standard deviation of transformed GFAP\r\nconst MU_F = 3.701422; // Mean of FAST-ED\r\nconst SIG_F = 2.306173; // Standard deviation of FAST-ED\r\n\r\n// Platt scaling parameters (for probability calibration)\r\nconst A_PLATT = 1.117420; // Platt scaling slope\r\nconst B_PLATT = -1.032167; // Platt scaling intercept\r\n\r\n// Decision threshold\r\nconst FINAL_THRESHOLD = 0.333333; // Classification threshold\r\n\r\n// Validation constants\r\nconst NUMERIC_EPS = 1e-15;\r\nconst MAX_GFAP_WARNING = 50000;\r\nconst MIN_FAST_ED = 0;\r\nconst MAX_FAST_ED = 16;\r\n\r\n/**\r\n * Yeo-Johnson power transformation\r\n */\r\nfunction yeoJohnson(x, lambda) {\r\n  if (Math.abs(lambda) < NUMERIC_EPS) {\r\n    return Math.log(x + 1.0);\r\n  }\r\n  return ((x + 1.0) ** lambda - 1.0) / lambda;\r\n}\r\n\r\n/**\r\n * Z-score standardization\r\n */\r\nfunction standardize(value, mean, std) {\r\n  return (value - mean) / std;\r\n}\r\n\r\n/**\r\n * Logistic (sigmoid) function\r\n */\r\nfunction logistic(x) {\r\n  if (x > 500) {\r\n    return 1.0;\r\n  } // Prevent overflow\r\n  if (x < -500) {\r\n    return 0.0;\r\n  } // Prevent underflow\r\n  return 1.0 / (1.0 + Math.exp(-x));\r\n}\r\n\r\n/**\r\n * Input validation\r\n */\r\nfunction validateInputs(gfap, fasted) {\r\n  // Check for null/undefined\r\n  if (gfap == null) {\r\n    throw new Error('gfap is required');\r\n  }\r\n  if (fasted == null) {\r\n    throw new Error('fasted is required');\r\n  }\r\n\r\n  // Convert to numbers\r\n  const numGfap = Number(gfap);\r\n  const numFasted = Number(fasted);\r\n\r\n  // Check for valid numbers\r\n  if (!Number.isFinite(numGfap)) {\r\n    throw new Error('gfap must be a finite number');\r\n  }\r\n  if (!Number.isFinite(numFasted)) {\r\n    throw new Error('fasted must be a finite number');\r\n  }\r\n\r\n  // Check ranges\r\n  if (numGfap < 0) {\r\n    throw new Error('GFAP value must be non-negative');\r\n  }\r\n\r\n  return { gfap: numGfap, fasted: numFasted };\r\n}\r\n\r\n/**\r\n * Calculate LVO probability using scientifically calibrated model\r\n */\r\nexport function lvoProbability(gfap, fasted) {\r\n  const validated = validateInputs(gfap, fasted);\r\n\r\n  // Clamp FAST-ED to valid range\r\n  const clampedFasted = Math.max(MIN_FAST_ED, Math.min(MAX_FAST_ED, validated.fasted));\r\n\r\n  // Apply transformations\r\n  const gfapTransformed = yeoJohnson(validated.gfap, LAMBDA);\r\n  const gfapStandardized = standardize(gfapTransformed, MU_G, SIG_G);\r\n  const fastedStandardized = standardize(clampedFasted, MU_F, SIG_F);\r\n\r\n  // Calculate logit\r\n  const logit = B0 + B_GFAP * gfapStandardized + B_FAST * fastedStandardized;\r\n\r\n  // Apply Platt calibration\r\n  const calibratedLogit = A_PLATT * logit + B_PLATT;\r\n\r\n  // Return probability\r\n  return logistic(calibratedLogit);\r\n}\r\n\r\n/**\r\n * Binary classification using threshold\r\n */\r\nexport function lvoClass(gfap, fasted) {\r\n  const probability = lvoProbability(gfap, fasted);\r\n  return probability >= FINAL_THRESHOLD ? 1 : 0;\r\n}\r\n\r\n/**\r\n * Comprehensive prediction with detailed intermediate values\r\n */\r\nexport function predictLVO(gfap, fasted) {\r\n  const warnings = [];\r\n  let isValid = true;\r\n\r\n  try {\r\n    const validated = validateInputs(gfap, fasted);\r\n    const originalFasted = validated.fasted;\r\n\r\n    // Clamp FAST-ED and warn if out of range\r\n    const clampedFasted = Math.max(MIN_FAST_ED, Math.min(MAX_FAST_ED, validated.fasted));\r\n    if (clampedFasted !== originalFasted) {\r\n      warnings.push(`FAST-ED score clamped from ${originalFasted} to ${clampedFasted} (valid range: ${MIN_FAST_ED}-${MAX_FAST_ED})`);\r\n    }\r\n\r\n    // Warn for very high GFAP values\r\n    if (validated.gfap > MAX_GFAP_WARNING) {\r\n      warnings.push(`GFAP value ${validated.gfap} exceeds typical range (may indicate extreme case)`);\r\n    }\r\n\r\n    // Apply transformations\r\n    const gfapTransformed = yeoJohnson(validated.gfap, LAMBDA);\r\n    const gfapStandardized = standardize(gfapTransformed, MU_G, SIG_G);\r\n    const fastedStandardized = standardize(clampedFasted, MU_F, SIG_F);\r\n\r\n    // Calculate logit\r\n    const logit = B0 + B_GFAP * gfapStandardized + B_FAST * fastedStandardized;\r\n\r\n    // Apply Platt calibration\r\n    const calibratedLogit = A_PLATT * logit + B_PLATT;\r\n\r\n    // Calculate final probability\r\n    const probability = logistic(calibratedLogit);\r\n    const classification = probability >= FINAL_THRESHOLD ? 1 : 0;\r\n\r\n    return {\r\n      probability,\r\n      classification,\r\n      inputs: {\r\n        gfap: validated.gfap,\r\n        fasted: clampedFasted,\r\n      },\r\n      transformedValues: {\r\n        gfapTransformed,\r\n        gfapStandardized,\r\n        fastedStandardized,\r\n        logit,\r\n        calibratedLogit,\r\n      },\r\n      metadata: {\r\n        modelVersion: '2024.09.28-calibrated',\r\n        threshold: FINAL_THRESHOLD,\r\n        isValid,\r\n        warnings,\r\n      },\r\n    };\r\n  } catch (error) {\r\n    warnings.push(error.message);\r\n    isValid = false;\r\n\r\n    return {\r\n      probability: NaN,\r\n      classification: 0,\r\n      inputs: { gfap, fasted },\r\n      transformedValues: {\r\n        gfapTransformed: NaN,\r\n        gfapStandardized: NaN,\r\n        fastedStandardized: NaN,\r\n        logit: NaN,\r\n        calibratedLogit: NaN,\r\n      },\r\n      metadata: {\r\n        modelVersion: '2024.09.28-calibrated',\r\n        threshold: FINAL_THRESHOLD,\r\n        isValid,\r\n        warnings,\r\n      },\r\n    };\r\n  }\r\n}\r\n\r\n// Export constants for external use\r\nexport const MODEL_CONSTANTS = {\r\n  LAMBDA,\r\n  B0,\r\n  B_GFAP,\r\n  B_FAST,\r\n  MU_G,\r\n  SIG_G,\r\n  MU_F,\r\n  SIG_F,\r\n  A_PLATT,\r\n  B_PLATT,\r\n  FINAL_THRESHOLD,\r\n};\r\n","// Localization messages for the Stroke Triage Assistant\r\n\r\nexport const messages = {\r\n  en: {\r\n    // Header\r\n    appTitle: 'iGFAP',\r\n    emergencyBadge: 'Emergency Tool',\r\n    helpButton: 'Help and Instructions',\r\n    darkModeButton: 'Toggle dark mode',\r\n    languageToggle: 'Language',\r\n\r\n    // Progress\r\n    step1: 'Initial Assessment',\r\n    step2: 'Data Collection',\r\n    step3: 'Results',\r\n\r\n    // Module titles\r\n    comaModuleTitle: 'Coma Module',\r\n    limitedDataModuleTitle: 'Limited Data Module',\r\n    fullStrokeModuleTitle: 'Full Stroke Module',\r\n\r\n    // Triage 1\r\n    triage1Title: 'Patient Assessment',\r\n    triage1Question: 'Is the patient comatose?',\r\n    triage1Help: 'Glasgow Coma Scale < 9',\r\n    triage1Yes: 'YES - Comatose',\r\n    triage1No: 'NO - Conscious',\r\n\r\n    // Triage 2\r\n    triage2Title: 'Examination Capability',\r\n    triage2Question: 'Can the patient be reliably examined?',\r\n    triage2Help: 'Patient is not aphasic, confused, or uncooperative',\r\n    triage2Yes: 'YES - Full Exam Possible',\r\n    triage2No: 'NO - Limited Exam Only',\r\n\r\n    // Forms\r\n    ageLabel: 'Age (years)',\r\n    ageHelp: 'Patient age in years',\r\n    systolicLabel: 'Systolic BP (mmHg)',\r\n    systolicHelp: 'Systolic blood pressure',\r\n    diastolicLabel: 'Diastolic BP (mmHg)',\r\n    diastolicHelp: 'Diastolic blood pressure',\r\n    gfapLabel: 'GFAP Value (pg/mL)',\r\n    gfapHelp: 'GFAP biomarker level',\r\n    fastEdLabel: 'FAST-ED Score',\r\n    fastEdHelp: 'FAST-ED assessment score (0-9)',\r\n\r\n    // Checkboxes\r\n    headacheLabel: 'Headache',\r\n    vigilanzLabel: 'Reduced consciousness',\r\n    armPareseLabel: 'Arm weakness',\r\n    beinPareseLabel: 'Leg weakness',\r\n    eyeDeviationLabel: 'Eye deviation',\r\n    atrialFibLabel: 'Atrial fibrillation',\r\n    anticoagLabel: 'Anticoagulated (NOAK)',\r\n    antiplateletsLabel: 'Antiplatelets',\r\n\r\n    // Buttons\r\n    analyzeButton: 'Analyze',\r\n    analyzing: 'Analyzing...',\r\n    printResults: 'Print Results',\r\n    newAssessment: 'Start New Assessment',\r\n    startOver: 'Start Over',\r\n    goBack: 'Go Back',\r\n    goHome: 'Go Home',\r\n\r\n    // Form sections\r\n    basicInformation: 'Basic Information',\r\n    biomarkersScores: 'Biomarkers & Scores',\r\n    clinicalSymptoms: 'Clinical Symptoms',\r\n    medicalHistory: 'Medical History',\r\n\r\n    // Form labels with units\r\n    ageYearsLabel: 'Age (years)',\r\n    systolicBpLabel: 'Systolic BP (mmHg)',\r\n    diastolicBpLabel: 'Diastolic BP (mmHg)',\r\n    gfapValueLabel: 'GFAP Value (pg/mL)',\r\n    fastEdScoreLabel: 'FAST-ED Score',\r\n\r\n    // Help text\r\n    ageYearsHelp: \"Patient's age in years\",\r\n    systolicBpHelp: 'Normal: 90-140 mmHg',\r\n    diastolicBpHelp: 'Normal: 60-90 mmHg',\r\n    gfapTooltip: 'Brain injury biomarker',\r\n    gfapTooltipLong: 'Glial Fibrillary Acidic Protein - Brain injury biomarker',\r\n    gfapRange: 'Range: {min} - {max} pg/mL',\r\n    fastEdTooltip: '0-9 scale for LVO screening',\r\n\r\n    // Module buttons\r\n    analyzeIchRisk: 'Analyze ICH Risk',\r\n    analyzeStrokeRisk: 'Analyze Stroke Risk',\r\n\r\n    // Alert messages\r\n    criticalPatient: 'Critical Patient',\r\n    comaAlert: 'Patient is comatose (GCS < 9). Rapid assessment required.',\r\n    vigilanceReduction: 'Vigilance Reduction (Decreased alertness)',\r\n\r\n    // Additional symptom labels\r\n    armParesis: 'Arm Paresis',\r\n    legParesis: 'Leg Paresis',\r\n    eyeDeviation: 'Eye Deviation',\r\n    atrialFibrillation: 'Atrial Fibrillation',\r\n    onNoacDoac: 'On NOAC/DOAC',\r\n    onAntiplatelets: 'On Antiplatelets',\r\n\r\n    // Results\r\n    resultsTitle: 'Assessment Results',\r\n    bleedingRiskAssessment: 'Bleeding Risk Assessment',\r\n    ichProbability: 'ICH Probability',\r\n    lvoProbability: 'LVO Probability',\r\n    lvoMayBePossible: 'Large vessel occlusion possible - further evaluation recommended',\r\n    riskFactorsTitle: 'Main Risk Factors',\r\n    increasingRisk: 'Increasing Risk',\r\n    decreasingRisk: 'Decreasing Risk',\r\n    noFactors: 'No factors',\r\n    riskLevel: 'Risk Level',\r\n    lowRisk: 'Low Risk',\r\n    mediumRisk: 'Medium Risk',\r\n    highRisk: 'High Risk',\r\n\r\n    // Risk levels\r\n    riskLow: 'Low',\r\n    riskMedium: 'Medium',\r\n    riskHigh: 'High',\r\n\r\n    // Risk Factors Analysis\r\n    riskFactorsAnalysis: 'Risk Factors',\r\n    contributingFactors: 'Contributing factors to the assessment',\r\n    riskFactors: 'Risk Factors',\r\n    increaseRisk: 'INCREASE',\r\n    decreaseRisk: 'DECREASE',\r\n    noPositiveFactors: 'No increasing factors',\r\n    noNegativeFactors: 'No decreasing factors',\r\n    ichRiskFactors: 'ICH Risk Factors',\r\n    lvoRiskFactors: 'LVO Risk Factors',\r\n\r\n    // Critical Alert\r\n    criticalAlertTitle: 'CRITICAL RISK DETECTED',\r\n    criticalAlertMessage: 'High probability of intracerebral hemorrhage detected.',\r\n    immediateActionsRequired: 'Immediate actions required',\r\n    initiateStrokeProtocol: 'Initiate stroke protocol immediately',\r\n    urgentCtImaging: 'Urgent CT imaging required',\r\n    considerBpManagement: 'Consider blood pressure management',\r\n    prepareNeurosurgicalConsult: 'Prepare for potential neurosurgical consultation',\r\n\r\n    // Help Modal\r\n    helpTitle: 'Quick Reference Guide',\r\n    gcsTitle: 'Glasgow Coma Scale (GCS)',\r\n    gcsLow: 'GCS < 9: Comatose patient - use Coma Module',\r\n    gcsMod: 'GCS 8-12: Moderate impairment',\r\n    gcsHigh: 'GCS 13-15: Mild impairment',\r\n    fastEdTitle: 'FAST-ED Score Components',\r\n    fastEdFacial: 'Facial Palsy: 0-1 points',\r\n    fastEdArm: 'Arm Weakness: 0-2 points',\r\n    fastEdSpeech: 'Speech Changes: 0-2 points',\r\n    fastEdTime: 'Time: Critical factor',\r\n    fastEdEye: 'Eye Deviation: 0-2 points',\r\n    fastEdDenial: 'Denial/Neglect: 0-2 points',\r\n    criticalValuesTitle: 'Critical Values',\r\n    criticalBp: 'Systolic BP > 180: Increased ICH risk',\r\n    criticalGfap: 'GFAP > 500 pg/mL: Significant marker',\r\n    criticalFastEd: 'FAST-ED ≥ 4: Consider LVO',\r\n\r\n    // FAST-ED Calculator Modal\r\n    fastEdCalculatorTitle: 'FAST-ED Score Calculator',\r\n    fastEdCalculatorSubtitle: 'Click to calculate FAST-ED score components',\r\n    facialPalsyTitle: 'Facial Palsy',\r\n    facialPalsyNormal: 'Normal (0)',\r\n    facialPalsyMild: 'Present (1)',\r\n    armWeaknessTitle: 'Arm Weakness',\r\n    armWeaknessNormal: 'Normal (0)',\r\n    armWeaknessMild: 'Mild weakness or drift (1)',\r\n    armWeaknessSevere: 'Severe weakness or falls immediately (2)',\r\n    speechChangesTitle: 'Speech Abnormalities',\r\n    speechChangesNormal: 'Normal (0)',\r\n    speechChangesMild: 'Mild dysarthria or aphasia (1)',\r\n    speechChangesSevere: 'Severe dysarthria or aphasia (2)',\r\n    eyeDeviationTitle: 'Eye Deviation',\r\n    eyeDeviationNormal: 'Normal (0)',\r\n    eyeDeviationPartial: 'Partial gaze deviation (1)',\r\n    eyeDeviationForced: 'Forced gaze deviation (2)',\r\n    denialNeglectTitle: 'Denial/Neglect',\r\n    denialNeglectNormal: 'Normal (0)',\r\n    denialNeglectPartial: 'Partial neglect (1)',\r\n    denialNeglectComplete: 'Complete neglect (2)',\r\n    totalScoreTitle: 'Total FAST-ED Score',\r\n    riskLevel: 'Risk Level',\r\n    riskLevelLow: 'LOW (Score <4)',\r\n    riskLevelHigh: 'HIGH (Score ≥4 - Consider LVO)',\r\n    applyScore: 'Apply Score',\r\n    cancel: 'Cancel',\r\n\r\n    // Results Screen Enhancements\r\n    riskAnalysis: 'Risk Analysis',\r\n    riskAnalysisSubtitle: 'Clinical factors in this assessment',\r\n    contributingFactors: 'Contributing factors',\r\n    factorsShown: 'shown',\r\n    positiveFactors: 'Positive factors',\r\n    negativeFactors: 'Negative factors',\r\n    clinicalInformation: 'Clinical Information',\r\n    clinicalRecommendations: 'Clinical Recommendations',\r\n    clinicalRec1: 'Consider immediate imaging if ICH risk is high',\r\n    clinicalRec2: 'Activate stroke team for LVO scores ≥ 50%',\r\n    clinicalRec3: 'Monitor blood pressure closely',\r\n    clinicalRec4: 'Document all findings thoroughly',\r\n    noDriverData: 'No driver data available',\r\n    driverAnalysisUnavailable: 'Driver analysis unavailable',\r\n    driverInfoNotAvailable: 'Driver information not available from this prediction model',\r\n    driverAnalysisNotAvailable: 'Driver analysis not available for this prediction',\r\n    lvoNotPossible: 'LVO assessment not possible with limited data',\r\n    fullExamRequired: 'Full neurological examination required for LVO screening',\r\n    limitedAssessment: 'Limited Assessment',\r\n\r\n    // Disclaimer\r\n    disclaimer: 'Clinical Disclaimer',\r\n    disclaimerText: 'This tool is for clinical decision support only. Always use clinical judgment and follow local protocols. Not a replacement for physician assessment.',\r\n    importantNote: 'Important',\r\n    importantText: 'These results are for clinical decision support only. Always use clinical judgment and follow institutional protocols.',\r\n\r\n    // ICH Volume and Mortality\r\n    predictedMortality: 'Predicted 30-day mortality',\r\n    ichVolumeLabel: 'ICH Volume',\r\n    references: 'References',\r\n\r\n    // Input Summary\r\n    inputSummaryTitle: 'Input Summary',\r\n    inputSummarySubtitle: 'Values used for this analysis',\r\n\r\n    // Footer\r\n    privacyLink: 'Privacy Policy',\r\n    disclaimerLink: 'Medical Disclaimer',\r\n    versionLink: 'Version 2.1.0 - Research Preview',\r\n\r\n    // Privacy and disclaimers\r\n    privacyPolicy: 'Privacy Policy: This tool processes data locally. No patient data is stored or transmitted.',\r\n    medicalDisclaimer: 'Medical Disclaimer: This tool is for clinical decision support only. Always use clinical judgment and follow local protocols.',\r\n\r\n    // Error messages\r\n    networkError: 'Network error - please check your connection and try again',\r\n    requestTimeout: 'Request timeout - please try again',\r\n    apiError: 'Failed to get results',\r\n    validationError: 'Please check your input values',\r\n\r\n    // Session\r\n    sessionTimeout: 'Your session has been idle for 30 minutes. Would you like to continue?',\r\n    unsavedData: 'You have unsaved data. Are you sure you want to leave?',\r\n\r\n    // Stroke Centers\r\n    nearestCentersTitle: 'Nearest Stroke Centers',\r\n    useCurrentLocation: 'Use Current Location',\r\n    enterLocationPlaceholder: 'Enter city or address...',\r\n    enterManually: 'Enter Location Manually',\r\n    search: 'Search',\r\n    yourLocation: 'Your Location',\r\n    recommendedCenters: 'Recommended Centers',\r\n    alternativeCenters: 'Alternative Centers',\r\n    noCentersFound: 'No stroke centers found in this area',\r\n    gettingLocation: 'Getting your location',\r\n    searchingLocation: 'Searching location',\r\n    locationError: 'Unable to get your location',\r\n    locationPermissionDenied: 'Location access denied. Please allow location access and try again.',\r\n    locationUnavailable: 'Location information is unavailable',\r\n    locationTimeout: 'Location request timed out',\r\n    geolocationNotSupported: 'Geolocation is not supported by this browser',\r\n    geocodingNotImplemented: 'Location search not available. Please use GPS or enter coordinates manually.',\r\n    tryManualEntry: 'Try entering your location manually or use GPS.',\r\n    distanceNote: 'Distances are calculated as straight-line distances. Actual travel times may vary.',\r\n    travelTimeNote: 'Travel times calculated for emergency vehicles with sirens and priority routing.',\r\n    calculatingTravelTimes: 'Calculating travel times',\r\n    minutes: 'min',\r\n    poweredByOrs: 'Travel times powered by OpenRoute Service',\r\n\r\n    // Center Types and Services\r\n    comprehensiveCenter: 'Comprehensive Stroke Center',\r\n    primaryCenter: 'Primary Stroke Center',\r\n    telemetryCenter: 'Telemedicine Center',\r\n    thrombectomy: 'Thrombectomy',\r\n    neurosurgery: 'Neurosurgery',\r\n    icu: 'Intensive Care',\r\n    telemedicine: 'Telemedicine',\r\n    stroke_unit: 'Stroke Unit',\r\n\r\n    // Actions\r\n    call: 'Call',\r\n    directions: 'Directions',\r\n    emergency: 'Emergency',\r\n    certified: 'Certified',\r\n\r\n    // Prerequisites Modal\r\n    prerequisitesTitle: 'Prerequisites for Stroke Triage',\r\n    prerequisitesIntro: 'Please confirm that all of the following prerequisites are met:',\r\n    prerequisitesWarning: 'All prerequisites must be met to continue',\r\n    continue: 'Continue',\r\n    acute_deficit: 'Acute (severe) neurological deficit present',\r\n    symptom_onset: 'Symptom onset within 6 hours',\r\n    no_preexisting: 'No pre-existing severe neurological deficits',\r\n    no_trauma: 'No traumatic brain injury present',\r\n\r\n    // Differential Diagnoses for Stroke Modules\r\n    differentialDiagnoses: 'Differential Diagnoses',\r\n    reconfirmTimeWindow: 'Please reconfirm time window!',\r\n    unclearTimeWindow: 'With unclear/extended time window, early demarcated brain infarction is also possible',\r\n    rareDiagnoses: 'Rare diagnoses such as glioblastoma are also possible',\r\n\r\n  },\r\n\r\n  de: {\r\n    // Header\r\n    appTitle: 'iGFAP',\r\n    emergencyBadge: 'Notfall-Tool',\r\n    helpButton: 'Hilfe und Anweisungen',\r\n    darkModeButton: 'Dunklen Modus umschalten',\r\n    languageToggle: 'Sprache',\r\n\r\n    // Progress\r\n    step1: 'Erstbeurteilung',\r\n    step2: 'Datenerhebung',\r\n    step3: 'Ergebnisse',\r\n\r\n    // Module titles\r\n    comaModuleTitle: 'Koma-Modul',\r\n    limitedDataModuleTitle: 'Begrenzte Daten Modul',\r\n    fullStrokeModuleTitle: 'Vollständiges Schlaganfall-Modul',\r\n\r\n    // Triage 1\r\n    triage1Title: 'Patientenbeurteilung',\r\n    triage1Question: 'Ist der Patient komatös?',\r\n    triage1Help: 'Glasgow Coma Scale < 9',\r\n    triage1Yes: 'JA - Komatös',\r\n    triage1No: 'NEIN - Bei Bewusstsein',\r\n\r\n    // Triage 2\r\n    triage2Title: 'Untersuchungsfähigkeit',\r\n    triage2Question: 'Kann der Patient zuverlässig untersucht werden?',\r\n    triage2Help: 'Patient ist nicht aphasisch, verwirrt oder unkooperativ',\r\n    triage2Yes: 'JA - Vollständige Untersuchung möglich',\r\n    triage2No: 'NEIN - Nur begrenzte Untersuchung',\r\n\r\n    // Forms\r\n    ageLabel: 'Alter (Jahre)',\r\n    ageHelp: 'Patientenalter in Jahren',\r\n    systolicLabel: 'Systolischer RR (mmHg)',\r\n    systolicHelp: 'Systolischer Blutdruck',\r\n    diastolicLabel: 'Diastolischer RR (mmHg)',\r\n    diastolicHelp: 'Diastolischer Blutdruck',\r\n    gfapLabel: 'GFAP-Wert (pg/mL)',\r\n    gfapHelp: 'GFAP-Biomarker-Wert',\r\n    fastEdLabel: 'FAST-ED-Score',\r\n    fastEdHelp: 'FAST-ED-Bewertungsscore (0-9)',\r\n\r\n    // Checkboxes\r\n    headacheLabel: 'Kopfschmerzen',\r\n    vigilanzLabel: 'Bewusstseinstrübung',\r\n    armPareseLabel: 'Armschwäche',\r\n    beinPareseLabel: 'Beinschwäche',\r\n    eyeDeviationLabel: 'Blickdeviation',\r\n    atrialFibLabel: 'Vorhofflimmern',\r\n    anticoagLabel: 'Antikoaguliert (NOAK)',\r\n    antiplateletsLabel: 'Thrombozytenaggregationshemmer',\r\n\r\n    // Buttons\r\n    analyzeButton: 'Analysieren',\r\n    analyzing: 'Analysiere...',\r\n    printResults: 'Ergebnisse drucken',\r\n    newAssessment: 'Neue Bewertung starten',\r\n    startOver: 'Von vorn beginnen',\r\n    goBack: 'Zurück',\r\n    goHome: 'Zur Startseite',\r\n\r\n    // Form sections\r\n    basicInformation: 'Grundinformationen',\r\n    biomarkersScores: 'Biomarker & Scores',\r\n    clinicalSymptoms: 'Klinische Symptome',\r\n    medicalHistory: 'Anamnese',\r\n\r\n    // Form labels with units\r\n    ageYearsLabel: 'Alter (Jahre)',\r\n    systolicBpLabel: 'Systolischer RR (mmHg)',\r\n    diastolicBpLabel: 'Diastolischer RR (mmHg)',\r\n    gfapValueLabel: 'GFAP-Wert (pg/mL)',\r\n    fastEdScoreLabel: 'FAST-ED-Score',\r\n\r\n    // Help text\r\n    ageYearsHelp: 'Patientenalter in Jahren',\r\n    systolicBpHelp: 'Normal: 90-140 mmHg',\r\n    diastolicBpHelp: 'Normal: 60-90 mmHg',\r\n    gfapTooltip: 'Hirnverletzungs-Biomarker',\r\n    gfapTooltipLong: 'Glial Fibrillary Acidic Protein - Hirnverletzungs-Biomarker',\r\n    gfapRange: 'Bereich: {min} - {max} pg/mL',\r\n    fastEdTooltip: '0-9 Skala für LVO-Screening',\r\n\r\n    // Module buttons\r\n    analyzeIchRisk: 'ICB-Risiko analysieren',\r\n    analyzeStrokeRisk: 'Schlaganfall-Risiko analysieren',\r\n\r\n    // Alert messages\r\n    criticalPatient: 'Kritischer Patient',\r\n    comaAlert: 'Patient ist komatös (GCS < 9). Schnelle Beurteilung erforderlich.',\r\n    vigilanceReduction: 'Vigilanzminderung (Verminderte Wachheit)',\r\n\r\n    // Additional symptom labels\r\n    armParesis: 'Armparese',\r\n    legParesis: 'Beinparese',\r\n    eyeDeviation: 'Blickdeviation',\r\n    atrialFibrillation: 'Vorhofflimmern',\r\n    onNoacDoac: 'NOAK/DOAK-Therapie',\r\n    onAntiplatelets: 'Thrombozytenaggregationshemmer',\r\n\r\n    // Results\r\n    resultsTitle: 'Bewertungsergebnisse',\r\n    bleedingRiskAssessment: 'Blutungsrisiko-Bewertung',\r\n    ichProbability: 'ICB-Risiko',\r\n    lvoProbability: 'LVO-Risiko',\r\n    lvoMayBePossible: 'Großgefäßverschluss möglich - weitere Abklärung empfohlen',\r\n    riskFactorsTitle: 'Hauptrisikofaktoren',\r\n    increasingRisk: 'Risikoerhöhend',\r\n    decreasingRisk: 'Risikomindernd',\r\n    noFactors: 'Keine Faktoren',\r\n    riskLevel: 'Risikostufe',\r\n    lowRisk: 'Niedriges Risiko',\r\n    mediumRisk: 'Mittleres Risiko',\r\n    highRisk: 'Hohes Risiko',\r\n\r\n    // Risk levels\r\n    riskLow: 'Niedrig',\r\n    riskMedium: 'Mittel',\r\n    riskHigh: 'Hoch',\r\n\r\n    // Risk Factors Analysis\r\n    riskFactorsAnalysis: 'Risikofaktoren',\r\n    contributingFactors: 'Beitragende Faktoren zur Bewertung',\r\n    riskFactors: 'Risikofaktoren',\r\n    increaseRisk: 'ERHÖHEN',\r\n    decreaseRisk: 'VERRINGERN',\r\n    noPositiveFactors: 'Keine erhöhenden Faktoren',\r\n    noNegativeFactors: 'Keine verringernden Faktoren',\r\n    ichRiskFactors: 'ICB-Risikofaktoren',\r\n    lvoRiskFactors: 'LVO-Risikofaktoren',\r\n\r\n    // Critical Alert\r\n    criticalAlertTitle: 'KRITISCHES RISIKO ERKANNT',\r\n    criticalAlertMessage: 'Hohe Wahrscheinlichkeit einer intrazerebralen Blutung erkannt.',\r\n    immediateActionsRequired: 'Sofortige Maßnahmen erforderlich',\r\n    initiateStrokeProtocol: 'Schlaganfall-Protokoll sofort einleiten',\r\n    urgentCtImaging: 'Dringende CT-Bildgebung erforderlich',\r\n    considerBpManagement: 'Blutdruckmanagement erwägen',\r\n    prepareNeurosurgicalConsult: 'Neurochirurgische Konsultation vorbereiten',\r\n\r\n    // Help Modal\r\n    helpTitle: 'Kurzreferenzleitfaden',\r\n    gcsTitle: 'Glasgow Coma Scale (GCS)',\r\n    gcsLow: 'GCS < 9: Komatöser Patient - Koma-Modul verwenden',\r\n    gcsMod: 'GCS 8-12: Mäßige Beeinträchtigung',\r\n    gcsHigh: 'GCS 13-15: Leichte Beeinträchtigung',\r\n    fastEdTitle: 'FAST-ED-Score-Komponenten',\r\n    fastEdFacial: 'Faziale Parese: 0-1 Punkte',\r\n    fastEdArm: 'Armschwäche: 0-2 Punkte',\r\n    fastEdSpeech: 'Sprachveränderungen: 0-2 Punkte',\r\n    fastEdTime: 'Zeit: Kritischer Faktor',\r\n    fastEdEye: 'Blickdeviation: 0-2 Punkte',\r\n    fastEdDenial: 'Verneinung/Neglect: 0-2 Punkte',\r\n    criticalValuesTitle: 'Kritische Werte',\r\n    criticalBp: 'Systolischer RR > 180: Erhöhtes ICB-Risiko',\r\n    criticalGfap: 'GFAP > 500 pg/mL: Signifikanter Marker',\r\n    criticalFastEd: 'FAST-ED ≥ 4: LVO in Betracht ziehen',\r\n\r\n    // FAST-ED Calculator Modal\r\n    fastEdCalculatorTitle: 'FAST-ED-Score-Rechner',\r\n    fastEdCalculatorSubtitle: 'Klicken Sie, um FAST-ED-Score-Komponenten zu berechnen',\r\n    facialPalsyTitle: 'Fazialisparese',\r\n    facialPalsyNormal: 'Normal (0)',\r\n    facialPalsyMild: 'Vorhanden (1)',\r\n    armWeaknessTitle: 'Armschwäche',\r\n    armWeaknessNormal: 'Normal (0)',\r\n    armWeaknessMild: 'Leichte Schwäche oder Absinken (1)',\r\n    armWeaknessSevere: 'Schwere Schwäche oder fällt sofort ab (2)',\r\n    speechChangesTitle: 'Sprachstörungen',\r\n    speechChangesNormal: 'Normal (0)',\r\n    speechChangesMild: 'Leichte Dysarthrie oder Aphasie (1)',\r\n    speechChangesSevere: 'Schwere Dysarthrie oder Aphasie (2)',\r\n    eyeDeviationTitle: 'Blickdeviation',\r\n    eyeDeviationNormal: 'Normal (0)',\r\n    eyeDeviationPartial: 'Partielle Blickdeviation (1)',\r\n    eyeDeviationForced: 'Forcierte Blickdeviation (2)',\r\n    denialNeglectTitle: 'Verneinung/Neglect',\r\n    denialNeglectNormal: 'Normal (0)',\r\n    denialNeglectPartial: 'Partieller Neglect (1)',\r\n    denialNeglectComplete: 'Kompletter Neglect (2)',\r\n    totalScoreTitle: 'Gesamt-FAST-ED-Score',\r\n    riskLevel: 'Risikostufe',\r\n    riskLevelLow: 'NIEDRIG (Score <4)',\r\n    riskLevelHigh: 'HOCH (Score ≥4 - LVO erwägen)',\r\n    applyScore: 'Score Anwenden',\r\n    cancel: 'Abbrechen',\r\n\r\n    // Results Screen Enhancements\r\n    riskAnalysis: 'Risikoanalyse',\r\n    riskAnalysisSubtitle: 'Klinische Faktoren in dieser Bewertung',\r\n    contributingFactors: 'Beitragende Faktoren',\r\n    factorsShown: 'angezeigt',\r\n    positiveFactors: 'Positive Faktoren',\r\n    negativeFactors: 'Negative Faktoren',\r\n    clinicalInformation: 'Klinische Informationen',\r\n    clinicalRecommendations: 'Klinische Empfehlungen',\r\n    clinicalRec1: 'Sofortige Bildgebung erwägen bei hohem ICB-Risiko',\r\n    clinicalRec2: 'Stroke-Team aktivieren bei LVO-Score ≥ 50%',\r\n    clinicalRec3: 'Blutdruck engmaschig überwachen',\r\n    clinicalRec4: 'Alle Befunde gründlich dokumentieren',\r\n    noDriverData: 'Keine Treiberdaten verfügbar',\r\n    driverAnalysisUnavailable: 'Treiberanalyse nicht verfügbar',\r\n    driverInfoNotAvailable: 'Treiberinformationen von diesem Vorhersagemodell nicht verfügbar',\r\n    driverAnalysisNotAvailable: 'Treiberanalyse für diese Vorhersage nicht verfügbar',\r\n    lvoNotPossible: 'LVO-Bewertung mit begrenzten Daten nicht möglich',\r\n    fullExamRequired: 'Vollständige neurologische Untersuchung für LVO-Screening erforderlich',\r\n    limitedAssessment: 'Begrenzte Bewertung',\r\n\r\n    // Disclaimer\r\n    disclaimer: 'Klinischer Haftungsausschluss',\r\n    disclaimerText: 'Dieses Tool dient nur zur klinischen Entscheidungsunterstützung. Verwenden Sie immer klinisches Urteilsvermögen und befolgen Sie lokale Protokolle. Kein Ersatz für ärztliche Beurteilung.',\r\n    importantNote: 'Wichtig',\r\n    importantText: 'Diese Ergebnisse dienen nur zur klinischen Entscheidungsunterstützung. Verwenden Sie immer klinisches Urteilsvermögen und befolgen Sie institutionelle Protokolle.',\r\n\r\n    // ICH Volume and Mortality\r\n    predictedMortality: 'Vorhergesagte 30-Tage-Mortalität',\r\n    ichVolumeLabel: 'ICB-Volumen',\r\n    references: 'Referenzen',\r\n\r\n    // Input Summary\r\n    inputSummaryTitle: 'Eingabezusammenfassung',\r\n    inputSummarySubtitle: 'Für diese Analyse verwendete Werte',\r\n\r\n    // Footer\r\n    privacyLink: 'Datenschutzrichtlinie',\r\n    disclaimerLink: 'Medizinischer Haftungsausschluss',\r\n    versionLink: 'Version 2.1.0 - Research Preview',\r\n\r\n    // Privacy and disclaimers\r\n    privacyPolicy: 'Datenschutzrichtlinie: Dieses Tool verarbeitet Daten lokal. Keine Patientendaten werden gespeichert oder übertragen.',\r\n    medicalDisclaimer: 'Medizinischer Haftungsausschluss: Dieses Tool dient nur zur klinischen Entscheidungsunterstützung. Verwenden Sie immer klinisches Urteilsvermögen und befolgen Sie lokale Protokolle.',\r\n\r\n    // Error messages\r\n    networkError: 'Netzwerkfehler - bitte überprüfen Sie Ihre Verbindung und versuchen Sie es erneut',\r\n    requestTimeout: 'Anfrage-Timeout - bitte versuchen Sie es erneut',\r\n    apiError: 'Ergebnisse konnten nicht abgerufen werden',\r\n    validationError: 'Bitte überprüfen Sie Ihre Eingabewerte',\r\n\r\n    // Session\r\n    sessionTimeout: 'Ihre Sitzung war 30 Minuten lang inaktiv. Möchten Sie fortfahren?',\r\n    unsavedData: 'Sie haben ungespeicherte Daten. Sind Sie sicher, dass Sie verlassen möchten?',\r\n\r\n    // Stroke Centers\r\n    nearestCentersTitle: 'Nächstgelegene Schlaganfall-Zentren',\r\n    useCurrentLocation: 'Aktuellen Standort verwenden',\r\n    enterLocationPlaceholder: 'Stadt oder Adresse eingeben...',\r\n    enterManually: 'Standort manuell eingeben',\r\n    search: 'Suchen',\r\n    yourLocation: 'Ihr Standort',\r\n    recommendedCenters: 'Empfohlene Zentren',\r\n    alternativeCenters: 'Alternative Zentren',\r\n    noCentersFound: 'Keine Schlaganfall-Zentren in diesem Bereich gefunden',\r\n    gettingLocation: 'Standort wird ermittelt',\r\n    searchingLocation: 'Standort wird gesucht',\r\n    locationError: 'Standort konnte nicht ermittelt werden',\r\n    locationPermissionDenied: 'Standortzugriff verweigert. Bitte erlauben Sie Standortzugriff und versuchen Sie es erneut.',\r\n    locationUnavailable: 'Standortinformationen sind nicht verfügbar',\r\n    locationTimeout: 'Standortanfrage ist abgelaufen',\r\n    geolocationNotSupported: 'Geolokalisierung wird von diesem Browser nicht unterstützt',\r\n    geocodingNotImplemented: 'Standortsuche nicht verfügbar. Bitte verwenden Sie GPS oder geben Sie Koordinaten manuell ein.',\r\n    tryManualEntry: 'Versuchen Sie, Ihren Standort manuell einzugeben oder GPS zu verwenden.',\r\n    distanceNote: 'Entfernungen werden als Luftlinie berechnet. Tatsächliche Fahrzeiten können variieren.',\r\n    travelTimeNote: 'Fahrzeiten berechnet für Rettungsfahrzeuge mit Sondersignalen und Vorfahrtsberechtigung.',\r\n    calculatingTravelTimes: 'Fahrzeiten werden berechnet',\r\n    minutes: 'Min',\r\n    poweredByOrs: 'Fahrzeiten bereitgestellt von OpenRoute Service',\r\n\r\n    // Center Types and Services\r\n    comprehensiveCenter: 'Überregionales Schlaganfall-Zentrum',\r\n    primaryCenter: 'Regionales Schlaganfall-Zentrum',\r\n    telemetryCenter: 'Telemedizin-Zentrum',\r\n    thrombectomy: 'Thrombektomie',\r\n    neurosurgery: 'Neurochirurgie',\r\n    icu: 'Intensivstation',\r\n    telemedicine: 'Telemedizin',\r\n    stroke_unit: 'Stroke Unit',\r\n\r\n    // Actions\r\n    call: 'Anrufen',\r\n    directions: 'Wegbeschreibung',\r\n    emergency: 'Notfall',\r\n    certified: 'Zertifiziert',\r\n\r\n    // Prerequisites Modal\r\n    prerequisitesTitle: 'Voraussetzungen für Schlaganfall-Triage',\r\n    prerequisitesIntro: 'Bitte bestätigen Sie, dass alle folgenden Voraussetzungen erfüllt sind:',\r\n    prerequisitesWarning: 'Alle Voraussetzungen müssen erfüllt sein, um fortzufahren',\r\n    continue: 'Weiter',\r\n    acute_deficit: 'Akutes (schweres) neurologisches Defizit vorhanden',\r\n    symptom_onset: 'Symptombeginn innerhalb 6h',\r\n    no_preexisting: 'Keine vorbestehende schwere neurologische Defizite',\r\n    no_trauma: 'Kein Schädelhirntrauma vorhanden',\r\n\r\n    // Differential Diagnoses for Stroke Modules\r\n    differentialDiagnoses: 'Differentialdiagnosen',\r\n    reconfirmTimeWindow: 'Bitte Zeitfenster rekonfirmieren!',\r\n    unclearTimeWindow: 'Bei unklarem/erweitertem Zeitfenster ist auch ein beginnend demarkierter Hirninfarkt möglich',\r\n    rareDiagnoses: 'Seltene Diagnosen wie ein Glioblastom sind auch möglich',\r\n\r\n  },\r\n};\r\n","// Internationalization utilities for the Stroke Triage Assistant\r\n\r\nimport { messages } from './messages.js';\r\n\r\nclass I18n {\r\n  constructor() {\r\n    this.supportedLanguages = ['en', 'de'];\r\n    this.currentLanguage = this.detectLanguage();\r\n  }\r\n\r\n  // Detect browser language and default to appropriate language\r\n  detectLanguage() {\r\n    // Check if language is already set in localStorage\r\n    const savedLanguage = localStorage.getItem('language');\r\n    if (savedLanguage && this.supportedLanguages.includes(savedLanguage)) {\r\n      return savedLanguage;\r\n    }\r\n\r\n    // Detect browser language\r\n    const browserLang = navigator.language || navigator.userLanguage;\r\n    const langCode = browserLang.substring(0, 2).toLowerCase();\r\n\r\n    // Default to German if browser language is German, otherwise English\r\n    return langCode === 'de' ? 'de' : 'en';\r\n  }\r\n\r\n  // Get current language\r\n  getCurrentLanguage() {\r\n    return this.currentLanguage;\r\n  }\r\n\r\n  // Set language and save to localStorage\r\n  setLanguage(language) {\r\n    if (this.supportedLanguages.includes(language)) {\r\n      this.currentLanguage = language;\r\n      localStorage.setItem('language', language);\r\n\r\n      // Dispatch custom event for language change\r\n      window.dispatchEvent(new CustomEvent('languageChanged', {\r\n        detail: { language },\r\n      }));\r\n\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // Get supported languages\r\n  getSupportedLanguages() {\r\n    return [...this.supportedLanguages];\r\n  }\r\n\r\n  // Translate a message key\r\n  t(key) {\r\n    const currentMessages = messages[this.currentLanguage] || messages.en;\r\n    return currentMessages[key] || key;\r\n  }\r\n\r\n  // Toggle between English and German\r\n  toggleLanguage() {\r\n    const newLanguage = this.currentLanguage === 'en' ? 'de' : 'en';\r\n    return this.setLanguage(newLanguage);\r\n  }\r\n\r\n  // Get language display name\r\n  getLanguageDisplayName(lang = null) {\r\n    const language = lang || this.currentLanguage;\r\n    const displayNames = {\r\n      en: 'English',\r\n      de: 'Deutsch',\r\n    };\r\n    return displayNames[language] || language;\r\n  }\r\n\r\n  // Format date/time according to current locale\r\n  formatDateTime(date) {\r\n    const locale = this.currentLanguage === 'de' ? 'de-DE' : 'en-US';\r\n    return new Intl.DateTimeFormat(locale, {\r\n      year: 'numeric',\r\n      month: '2-digit',\r\n      day: '2-digit',\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      second: '2-digit',\r\n    }).format(date);\r\n  }\r\n\r\n  // Format time only according to current locale\r\n  formatTime(date) {\r\n    const locale = this.currentLanguage === 'de' ? 'de-DE' : 'en-US';\r\n    return new Intl.DateTimeFormat(locale, {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      second: '2-digit',\r\n    }).format(date);\r\n  }\r\n}\r\n\r\n// Create singleton instance\r\nconst i18n = new I18n();\r\n\r\n// Export both the instance and the class\r\nexport { i18n, I18n };\r\n\r\n// Export convenience function for translation\r\nexport const t = (key) => i18n.t(key);\r\n","import { t, i18n } from '../../localization/i18n.js';\r\nimport { navigate } from '../../logic/handlers.js';\r\nimport { safeSetInnerHTML } from '../../security/html-sanitizer.js';\r\n\r\n/**\r\n * Prerequisites checklist items\r\n */\r\nconst getPrerequisites = () => [\r\n  { id: 'acute_deficit', checked: false },\r\n  { id: 'symptom_onset', checked: false },\r\n  { id: 'no_preexisting', checked: false },\r\n  { id: 'no_trauma', checked: false },\r\n];\r\n\r\n/**\r\n * Render prerequisites modal\r\n * @returns {string} HTML for prerequisites modal\r\n */\r\nexport function renderPrerequisitesModal() {\r\n  const prerequisites = getPrerequisites();\r\n\r\n  return `\r\n    <div id=\"prerequisitesModal\" class=\"modal prerequisites-modal\" style=\"display: flex;\">\r\n      <div class=\"modal-content prerequisites-content\">\r\n        <div class=\"modal-header\">\r\n          <h2>${t('prerequisitesTitle')}</h2>\r\n          <button class=\"modal-close\" id=\"closePrerequisites\">&times;</button>\r\n        </div>\r\n        \r\n        <div class=\"modal-body\">\r\n          <p class=\"prerequisites-intro\">\r\n            ${t('prerequisitesIntro')}\r\n          </p>\r\n          \r\n          <div class=\"prerequisites-list\">\r\n            ${prerequisites.map((item) => `\r\n              <div class=\"prerequisite-item\" data-id=\"${item.id}\">\r\n                <label class=\"toggle-switch\">\r\n                  <input type=\"checkbox\" id=\"${item.id}\" class=\"toggle-input\">\r\n                  <span class=\"toggle-slider\"></span>\r\n                </label>\r\n                <span class=\"prerequisite-label\">\r\n                  ${t(item.id)}\r\n                </span>\r\n              </div>\r\n            `).join('')}\r\n          </div>\r\n          \r\n          <div class=\"prerequisites-warning\" id=\"prerequisitesWarning\" style=\"display: none;\">\r\n            <span class=\"warning-icon\">⚠️</span>\r\n            <span class=\"warning-text\">\r\n              ${t('prerequisitesWarning')}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"modal-footer\">\r\n          <div class=\"button-group\">\r\n            <button type=\"button\" class=\"secondary\" id=\"cancelPrerequisites\">\r\n              ${t('cancel')}\r\n            </button>\r\n            <button type=\"button\" class=\"primary\" id=\"confirmPrerequisites\">\r\n              ${t('continue')}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n\r\n/**\r\n * Initialize prerequisites modal event handlers\r\n */\r\nexport function initPrerequisitesModal() {\r\n  const modal = document.getElementById('prerequisitesModal');\r\n  if (!modal) {\r\n    // ('Prerequisites modal not found');\r\n    return;\r\n  }\r\n\r\n  // ('Initializing prerequisites modal');\r\n\r\n  // Close button handlers\r\n  const closeBtn = document.getElementById('closePrerequisites');\r\n  const cancelBtn = document.getElementById('cancelPrerequisites');\r\n  const confirmBtn = document.getElementById('confirmPrerequisites');\r\n\r\n  // ('Modal buttons found:', { closeBtn: !!closeBtn, cancelBtn: !!cancelBtn, confirmBtn: !!confirmBtn });\r\n\r\n  const closeModal = () => {\r\n    modal.remove();\r\n    // Navigate back to welcome screen if cancelled\r\n    navigate('welcome');\r\n  };\r\n\r\n  closeBtn?.addEventListener('click', closeModal);\r\n  cancelBtn?.addEventListener('click', closeModal);\r\n\r\n  // Confirm button handler\r\n  confirmBtn?.addEventListener('click', (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    // ('Prerequisites confirm button clicked');\r\n    const checkboxes = modal.querySelectorAll('.toggle-input');\r\n    const allChecked = Array.from(checkboxes).every((cb) => cb.checked);\r\n    // ('All prerequisites checked:', allChecked);\r\n\r\n    if (allChecked) {\r\n      // ('Navigating to triage2');\r\n      modal.remove();\r\n      // Proceed to triage2 (stroke module selection)\r\n      navigate('triage2');\r\n    } else {\r\n      // ('Showing prerequisites warning');\r\n      // Show warning\r\n      const warning = document.getElementById('prerequisitesWarning');\r\n      if (warning) {\r\n        warning.style.display = 'flex';\r\n        // Shake animation\r\n        warning.classList.add('shake');\r\n        setTimeout(() => warning.classList.remove('shake'), 500);\r\n      }\r\n    }\r\n  });\r\n\r\n  // Toggle change handler to hide warning when all checked\r\n  const checkboxes = modal.querySelectorAll('.toggle-input');\r\n  checkboxes.forEach((checkbox) => {\r\n    checkbox.addEventListener('change', () => {\r\n      const allChecked = Array.from(checkboxes).every((cb) => cb.checked);\r\n      const warning = document.getElementById('prerequisitesWarning');\r\n\r\n      if (allChecked && warning) {\r\n        warning.style.display = 'none';\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * Show prerequisites modal\r\n */\r\nexport function showPrerequisitesModal() {\r\n  const existingModal = document.getElementById('prerequisitesModal');\r\n\r\n  // Always remove existing modal and create fresh one to handle language changes\r\n  if (existingModal) {\r\n    existingModal.remove();\r\n  }\r\n\r\n  // Create modal element safely\r\n  const modalElement = document.createElement('div');\r\n  try {\r\n    safeSetInnerHTML(modalElement, renderPrerequisitesModal());\r\n    const modal = modalElement.firstElementChild;\r\n\r\n    if (!modal) {\r\n      throw new Error('Failed to create modal element');\r\n    }\r\n\r\n    // Insert into DOM\r\n    document.body.appendChild(modal);\r\n  } catch (error) {\r\n    console.error('Prerequisites modal sanitization failed:', error);\r\n    // Fallback: create basic modal\r\n    const fallbackModal = document.createElement('div');\r\n    fallbackModal.className = 'modal prerequisites-modal';\r\n    fallbackModal.style.display = 'flex';\r\n    fallbackModal.textContent = 'Prerequisites modal could not be displayed securely. Please refresh the page.';\r\n    document.body.appendChild(fallbackModal);\r\n    return;\r\n  }\r\n\r\n  // Initialize immediately since DOM is ready\r\n  initPrerequisitesModal();\r\n}\r\n","import { store } from '../state/store.js';\r\nimport {\r\n  predictComaIch, predictLimitedIch, predictFullStroke, APIError,\r\n} from '../api/client.js';\r\nimport { t } from '../localization/i18n.js';\r\nimport { showPrerequisitesModal } from '../ui/components/prerequisites-modal.js';\r\nimport { safeSetInnerHTML } from '../security/html-sanitizer.js';\r\nimport { DEV_CONFIG } from '../config.js';\r\n\r\nimport { validateForm, showValidationErrors } from './validate.js';\r\n\r\nexport function handleTriage1(isComatose) {\r\n  store.logEvent('triage1_answer', { comatose: isComatose });\r\n\r\n  if (isComatose) {\r\n    navigate('coma');\r\n  } else {\r\n    // Show prerequisites modal for conscious patients\r\n    showPrerequisitesModal();\r\n  }\r\n}\r\n\r\nexport function handleTriage2(isExaminable) {\r\n  store.logEvent('triage2_answer', { examinable: isExaminable });\r\n  const nextScreen = isExaminable ? 'full' : 'limited';\r\n  navigate(nextScreen);\r\n}\r\n\r\nexport function navigate(screen) {\r\n  store.logEvent('navigate', {\r\n    from: store.getState().currentScreen,\r\n    to: screen,\r\n  });\r\n  store.navigate(screen);\r\n  window.scrollTo(0, 0);\r\n}\r\n\r\nexport function reset() {\r\n  if (store.hasUnsavedData()) {\r\n    if (!confirm('Are you sure you want to start over? All entered data will be lost.')) {\r\n      return;\r\n    }\r\n  }\r\n  store.logEvent('reset');\r\n  store.reset();\r\n}\r\n\r\nexport function goBack() {\r\n  const success = store.goBack();\r\n\r\n  if (success) {\r\n    store.logEvent('navigate_back');\r\n    window.scrollTo(0, 0);\r\n  } else {\r\n    goHome();\r\n  }\r\n}\r\n\r\nexport function goHome() {\r\n  store.logEvent('navigate_home');\r\n  store.goHome();\r\n  window.scrollTo(0, 0);\r\n}\r\n\r\nexport async function handleSubmit(e, container) {\r\n  e.preventDefault();\r\n  const form = e.target;\r\n  const { module } = form.dataset;\r\n\r\n  // Validate form\r\n  const validation = validateForm(form);\r\n  if (!validation.isValid) {\r\n    showValidationErrors(container, validation.validationErrors);\r\n    try {\r\n      // Focus first invalid field and announce summary for screen readers\r\n      const firstErrorName = Object.keys(validation.validationErrors)[0];\r\n      if (firstErrorName && form.elements[firstErrorName]) {\r\n        const el = form.elements[firstErrorName];\r\n        el.focus({ preventScroll: true });\r\n        el.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n      }\r\n      const sr = document.createElement('div');\r\n      sr.className = 'sr-only';\r\n      sr.setAttribute('role', 'status');\r\n      sr.setAttribute('aria-live', 'polite');\r\n      const errorCount = Object.keys(validation.validationErrors).length;\r\n      sr.textContent = `${errorCount} field${errorCount === 1 ? '' : 's'} need attention.`;\r\n      document.body.appendChild(sr);\r\n      setTimeout(() => sr.remove(), 1200);\r\n    } catch {}\r\n    return;\r\n  }\r\n\r\n  // Collect inputs - handle all form elements including unchecked checkboxes\r\n  const inputs = {};\r\n\r\n  // Process all form elements to ensure checkboxes are included\r\n  Array.from(form.elements).forEach((element) => {\r\n    if (element.name) {\r\n      if (element.type === 'checkbox') {\r\n        inputs[element.name] = element.checked;\r\n      } else if (element.type === 'number') {\r\n        const n = parseFloat(element.value);\r\n        inputs[element.name] = isNaN(n) ? 0 : n;\r\n      } else if (element.type === 'hidden') {\r\n        // Handle hidden fields (like armparese from FAST-ED)\r\n        if (element.name === 'armparese') {\r\n          inputs[element.name] = element.value === 'true';\r\n        } else {\r\n          inputs[element.name] = element.value;\r\n        }\r\n      } else {\r\n        inputs[element.name] = element.value;\r\n      }\r\n    }\r\n  });\r\n\r\n  // Store form data\r\n  store.setFormData(module, inputs);\r\n\r\n  // Show loading state\r\n  const button = form.querySelector('button[type=submit]');\r\n  const originalContent = button ? button.innerHTML : '';\r\n  if (button) {\r\n    button.disabled = true;\r\n    try {\r\n      safeSetInnerHTML(button, `<span class=\"loading-spinner\"></span> ${t('analyzing')}`);\r\n    } catch (error) {\r\n      console.error('Button loading state sanitization failed:', error);\r\n      button.textContent = t('analyzing') || 'Analyzing...';\r\n    }\r\n  }\r\n\r\n  try {\r\n    console.log('[Submit] Module:', module);\r\n    console.log('[Submit] Inputs:', inputs);\r\n    // Run models based on module\r\n    let results;\r\n\r\n    switch (module) {\r\n      case 'coma':\r\n        const comaResult = await predictComaIch(inputs);\r\n        results = {\r\n          ich: {\r\n            ...comaResult,\r\n            module: 'Coma',\r\n          },\r\n          lvo: null,\r\n        };\r\n        break;\r\n\r\n      case 'limited':\r\n        const limitedResult = await predictLimitedIch(inputs);\r\n        results = {\r\n          ich: {\r\n            ...limitedResult,\r\n            module: 'Limited',\r\n          },\r\n          lvo: { notPossible: true },\r\n        };\r\n        break;\r\n\r\n      case 'full':\r\n        results = await predictFullStroke(inputs);\r\n        console.log('[Submit] Full results:', {\r\n          ich: !!results?.ich,\r\n          lvo: !!results?.lvo,\r\n          ichP: results?.ich?.probability,\r\n          lvoP: results?.lvo?.probability,\r\n        });\r\n        // Validate results structure\r\n        if (!results || !results.ich) {\r\n          throw new Error('Invalid response structure from Full Stroke API');\r\n        }\r\n        // Fix ICH probability mapping for Full Stroke\r\n        if (results.ich && !results.ich.probability && results.ich.ich_probability !== undefined) {\r\n          results.ich.probability = results.ich.ich_probability;\r\n          console.log('[Submit] Fixed ICH probability for Full Stroke:', results.ich.probability);\r\n        }\r\n        // Ensure module property is set\r\n        if (results.ich && !results.ich.module) {\r\n          results.ich.module = 'Full Stroke';\r\n        }\r\n        if (results.lvo && !results.lvo.module) {\r\n          results.lvo.module = 'Full Stroke';\r\n        }\r\n        break;\r\n\r\n      default:\r\n        throw new Error(`Unknown module: ${module}`);\r\n    }\r\n\r\n    console.log('[Submit] Setting results in store:', results);\r\n    store.setResults(results);\r\n    store.logEvent('models_complete', { module, results });\r\n\r\n    // Verify results were stored\r\n    const storedState = store.getState();\r\n    console.log('[Submit] State after setResults:', {\r\n      hasResults: !!storedState.results,\r\n      currentScreen: storedState.currentScreen,\r\n    });\r\n\r\n    console.log('[Submit] Navigating to results...');\r\n    navigate('results');\r\n    // Visual confirmation that results screen loaded\r\n    showToast('✅ Results loaded', 2000);\r\n    // Double-check navigation and force if needed\r\n    setTimeout(() => {\r\n      try {\r\n        const cs = store.getState().currentScreen;\r\n        console.log('[Submit] currentScreen after navigate:', cs);\r\n        if (cs !== 'results') {\r\n          store.navigate('results');\r\n          showToast('🔁 Forced results view', 1500);\r\n        }\r\n      } catch {}\r\n    }, 0);\r\n  } catch (error) {\r\n    // Error running models - handle gracefully, with Full module fallback in preview\r\n    const isLocalPreview = ['localhost', '127.0.0.1', '0.0.0.0'].includes(window.location.hostname) && !(import.meta && import.meta.env && import.meta.env.DEV);\r\n    if (module === 'full' && isLocalPreview) {\r\n      try {\r\n        const m = DEV_CONFIG.mockApiResponses.full_stroke;\r\n        const ich = m.ich_prediction || {};\r\n        const lvo = m.lvo_prediction || {};\r\n        const pIch = parseFloat(ich.probability) || 0;\r\n        const pLvo = parseFloat(lvo.probability) || 0;\r\n        const fallbackResults = {\r\n          ich: {\r\n            probability: pIch > 1 ? pIch / 100 : pIch,\r\n            drivers: ich.drivers || null,\r\n            confidence: parseFloat(ich.confidence) || 0.85,\r\n            module: 'Full Stroke',\r\n          },\r\n          lvo: {\r\n            probability: pLvo > 1 ? pLvo / 100 : pLvo,\r\n            drivers: lvo.drivers || null,\r\n            confidence: parseFloat(lvo.confidence) || 0.85,\r\n            module: 'Full Stroke',\r\n          },\r\n        };\r\n        store.setResults(fallbackResults);\r\n        store.logEvent('models_complete_fallback', { module, reason: error.message });\r\n        navigate('results');\r\n        return;\r\n      } catch (e) {\r\n        // Continue to show error below\r\n      }\r\n    }\r\n\r\n    let errorMessage = 'An error occurred during analysis. Please try again.';\r\n    if (error instanceof APIError) {\r\n      errorMessage = error.message;\r\n    }\r\n\r\n    showError(container, errorMessage);\r\n\r\n    if (button) {\r\n      button.disabled = false;\r\n      try {\r\n        safeSetInnerHTML(button, originalContent);\r\n      } catch (e2) {\r\n        console.error('Button restore sanitization failed:', e2);\r\n        button.textContent = 'Submit';\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction showError(container, message) {\r\n  // Remove existing error alerts\r\n  container.querySelectorAll('.critical-alert').forEach((alert) => {\r\n    if (alert.querySelector('h4')?.textContent?.includes('Error')) {\r\n      alert.remove();\r\n    }\r\n  });\r\n\r\n  const alert = document.createElement('div');\r\n  alert.className = 'critical-alert';\r\n\r\n  // Create safe DOM structure without innerHTML to prevent XSS\r\n  const h4 = document.createElement('h4');\r\n  const iconSpan = document.createElement('span');\r\n  iconSpan.className = 'alert-icon';\r\n  iconSpan.textContent = '⚠️';\r\n  h4.appendChild(iconSpan);\r\n  h4.appendChild(document.createTextNode(' Error'));\r\n\r\n  const p = document.createElement('p');\r\n  p.textContent = message; // Safe text content only\r\n\r\n  alert.appendChild(h4);\r\n  alert.appendChild(p);\r\n\r\n  const containerDiv = container.querySelector('.container');\r\n  if (containerDiv) {\r\n    containerDiv.prepend(alert);\r\n  } else {\r\n    container.prepend(alert);\r\n  }\r\n\r\n  setTimeout(() => alert.remove(), 10000);\r\n}\r\n\r\n// Lightweight toast helper (overlays at top center)\r\nfunction showToast(message, duration = 2000) {\r\n  try {\r\n    const toast = document.createElement('div');\r\n    toast.textContent = message;\r\n    toast.setAttribute('role', 'status');\r\n    toast.setAttribute('aria-live', 'polite');\r\n    toast.style.cssText = `\r\n      position: fixed;\r\n      top: 16px;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      background: #0066CC;\r\n      color: #fff;\r\n      padding: 10px 14px;\r\n      border-radius: 8px;\r\n      box-shadow: 0 4px 12px rgba(0,0,0,0.2);\r\n      z-index: 10000;\r\n      font-size: 14px;\r\n      pointer-events: none;\r\n      opacity: 0;\r\n      transition: opacity 160ms ease;\r\n    `;\r\n    document.body.appendChild(toast);\r\n    requestAnimationFrame(() => {\r\n      toast.style.opacity = '1';\r\n    });\r\n    setTimeout(() => {\r\n      toast.style.opacity = '0';\r\n      setTimeout(() => toast.remove(), 200);\r\n    }, duration);\r\n  } catch {}\r\n}\r\n","/**\r\n * Comprehensive Error Handling Utilities\r\n * iGFAP Stroke Triage Assistant - Enterprise Error Management\r\n *\r\n * Provides robust error handling for production medical applications\r\n *\r\n * @author iGFAP Project Team\r\n * @contact Deepak Bos <bosdeepak@gmail.com>\r\n */\r\n\r\n/**\r\n * Error severity levels\r\n */\r\nexport const ERROR_SEVERITY = {\r\n  LOW: 'low',\r\n  MEDIUM: 'medium',\r\n  HIGH: 'high',\r\n  CRITICAL: 'critical',\r\n};\r\n\r\n/**\r\n * Error categories for medical applications\r\n */\r\nexport const ERROR_CATEGORIES = {\r\n  NETWORK: 'network',\r\n  VALIDATION: 'validation',\r\n  AUTHENTICATION: 'authentication',\r\n  CALCULATION: 'calculation',\r\n  STORAGE: 'storage',\r\n  RENDERING: 'rendering',\r\n  MEDICAL: 'medical',\r\n  SECURITY: 'security',\r\n};\r\n\r\n/**\r\n * Medical error codes\r\n */\r\nexport const MEDICAL_ERROR_CODES = {\r\n  INVALID_VITAL_SIGNS: 'MED001',\r\n  CALCULATION_FAILED: 'MED002',\r\n  DATA_INCOMPLETE: 'MED003',\r\n  PREDICTION_UNAVAILABLE: 'MED004',\r\n  SAFETY_THRESHOLD_EXCEEDED: 'MED005',\r\n};\r\n\r\n/**\r\n * Enhanced error class for medical applications\r\n */\r\nexport class MedicalError extends Error {\r\n  constructor(message, code, category = ERROR_CATEGORIES.MEDICAL, severity = ERROR_SEVERITY.MEDIUM) {\r\n    super(message);\r\n    this.name = 'MedicalError';\r\n    this.code = code;\r\n    this.category = category;\r\n    this.severity = severity;\r\n    this.timestamp = new Date().toISOString();\r\n    this.context = {};\r\n  }\r\n\r\n  /**\r\n   * Add context to error\r\n   * @param {Object} context - Error context\r\n   * @returns {MedicalError} - This error instance\r\n   */\r\n  withContext(context) {\r\n    this.context = { ...this.context, ...context };\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Get user-friendly error message\r\n   * @returns {string} - User-friendly message\r\n   */\r\n  getUserMessage() {\r\n    switch (this.category) {\r\n      case ERROR_CATEGORIES.NETWORK:\r\n        return 'Network connection issue. Please check your internet connection and try again.';\r\n      case ERROR_CATEGORIES.VALIDATION:\r\n        return 'Please check your input data and try again.';\r\n      case ERROR_CATEGORIES.AUTHENTICATION:\r\n        return 'Authentication failed. Please log in again.';\r\n      case ERROR_CATEGORIES.CALCULATION:\r\n        return 'Unable to complete calculation. Please verify your input data.';\r\n      case ERROR_CATEGORIES.MEDICAL:\r\n        return 'Medical calculation could not be completed. Please verify all clinical data.';\r\n      default:\r\n        return 'An unexpected error occurred. Please try again.';\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Global error handler for unhandled errors\r\n */\r\nclass GlobalErrorHandler {\r\n  constructor() {\r\n    this.errorQueue = [];\r\n    this.maxQueueSize = 100;\r\n    this.setupGlobalHandlers();\r\n  }\r\n\r\n  setupGlobalHandlers() {\r\n    // Handle unhandled promise rejections\r\n    window.addEventListener('unhandledrejection', (event) => {\r\n      this.handleError(event.reason, ERROR_CATEGORIES.NETWORK, ERROR_SEVERITY.HIGH);\r\n      event.preventDefault();\r\n    });\r\n\r\n    // Handle uncaught errors\r\n    window.addEventListener('error', (event) => {\r\n      this.handleError(event.error, ERROR_CATEGORIES.RENDERING, ERROR_SEVERITY.MEDIUM);\r\n    });\r\n  }\r\n\r\n  handleError(error, category = ERROR_CATEGORIES.NETWORK, severity = ERROR_SEVERITY.MEDIUM) {\r\n    const errorEntry = {\r\n      error: error instanceof Error ? error : new Error(String(error)),\r\n      category,\r\n      severity,\r\n      timestamp: new Date().toISOString(),\r\n      userAgent: navigator.userAgent.substring(0, 100),\r\n      url: window.location.href,\r\n    };\r\n\r\n    // Add to queue\r\n    this.errorQueue.push(errorEntry);\r\n    if (this.errorQueue.length > this.maxQueueSize) {\r\n      this.errorQueue.shift();\r\n    }\r\n\r\n    // Handle critical errors immediately\r\n    if (severity === ERROR_SEVERITY.CRITICAL) {\r\n      this.handleCriticalError(errorEntry);\r\n    }\r\n  }\r\n\r\n  handleCriticalError(errorEntry) {\r\n    // For critical medical errors, show immediate user notification\r\n    if (errorEntry.category === ERROR_CATEGORIES.MEDICAL) {\r\n      this.showMedicalAlert(errorEntry.error.message);\r\n    }\r\n  }\r\n\r\n  showMedicalAlert(message) {\r\n    // Create a critical medical alert\r\n    const alert = document.createElement('div');\r\n    alert.className = 'critical-medical-alert';\r\n    alert.style.cssText = `\r\n      position: fixed;\r\n      top: 20px;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      background: #ff4444;\r\n      color: white;\r\n      padding: 15px 20px;\r\n      border-radius: 8px;\r\n      z-index: 10000;\r\n      box-shadow: 0 4px 12px rgba(0,0,0,0.3);\r\n      max-width: 90%;\r\n      text-align: center;\r\n    `;\r\n    alert.textContent = `⚠️ Medical Error: ${message}`;\r\n\r\n    document.body.appendChild(alert);\r\n\r\n    // Auto-remove after 10 seconds\r\n    setTimeout(() => {\r\n      if (document.body.contains(alert)) {\r\n        document.body.removeChild(alert);\r\n      }\r\n    }, 10000);\r\n  }\r\n\r\n  getErrorSummary() {\r\n    return {\r\n      totalErrors: this.errorQueue.length,\r\n      criticalErrors: this.errorQueue.filter((e) => e.severity === ERROR_SEVERITY.CRITICAL).length,\r\n      recentErrors: this.errorQueue.slice(-10),\r\n    };\r\n  }\r\n}\r\n\r\n// Initialize global error handler\r\nconst globalErrorHandler = new GlobalErrorHandler();\r\n\r\n/**\r\n * Wrapper for async operations with comprehensive error handling\r\n * @param {Function} asyncFn - Async function to execute\r\n * @param {Object} options - Error handling options\r\n * @returns {Promise} - Promise with error handling\r\n */\r\nexport async function safeAsync(asyncFn, options = {}) {\r\n  const {\r\n    category = ERROR_CATEGORIES.NETWORK,\r\n    severity = ERROR_SEVERITY.MEDIUM,\r\n    fallback = null,\r\n    timeout = 30000,\r\n    retries = 0,\r\n    context = {},\r\n  } = options;\r\n\r\n  let lastError;\r\n\r\n  for (let attempt = 0; attempt <= retries; attempt++) {\r\n    try {\r\n      // Add timeout wrapper\r\n      const timeoutPromise = new Promise((_, reject) => {\r\n        setTimeout(() => reject(new Error('Operation timeout')), timeout);\r\n      });\r\n\r\n      const result = await Promise.race([asyncFn(), timeoutPromise]);\r\n      return result;\r\n    } catch (error) {\r\n      lastError = error;\r\n\r\n      // Log error\r\n      globalErrorHandler.handleError(error, category, severity);\r\n\r\n      // If we have retries left, wait and retry\r\n      if (attempt < retries) {\r\n        await new Promise((resolve) => setTimeout(resolve, 1000 * (attempt + 1)));\r\n        continue;\r\n      }\r\n\r\n      // Final attempt failed\r\n      if (fallback !== null) {\r\n        return typeof fallback === 'function' ? fallback(error) : fallback;\r\n      }\r\n\r\n      // Throw enhanced error\r\n      const enhancedError = new MedicalError(\r\n        error.message || 'Operation failed',\r\n        error.code || 'UNKNOWN',\r\n        category,\r\n        severity,\r\n      ).withContext(context);\r\n\r\n      throw enhancedError;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Safe wrapper for medical calculations\r\n * @param {Function} calculationFn - Medical calculation function\r\n * @param {Object} inputs - Input data\r\n * @param {Object} options - Calculation options\r\n * @returns {Promise} - Calculation result with error handling\r\n */\r\nexport async function safeMedicalCalculation(calculationFn, inputs, options = {}) {\r\n  return safeAsync(\r\n    () => calculationFn(inputs),\r\n    {\r\n      category: ERROR_CATEGORIES.MEDICAL,\r\n      severity: ERROR_SEVERITY.HIGH,\r\n      fallback: () => ({\r\n        error: true,\r\n        message: 'Medical calculation unavailable',\r\n        fallbackUsed: true,\r\n      }),\r\n      context: {\r\n        operation: 'medical_calculation',\r\n        inputKeys: Object.keys(inputs || {}),\r\n        ...options.context,\r\n      },\r\n      ...options,\r\n    },\r\n  );\r\n}\r\n\r\n/**\r\n * Safe wrapper for network requests\r\n * @param {Function} requestFn - Network request function\r\n * @param {Object} options - Request options\r\n * @returns {Promise} - Request result with error handling\r\n */\r\nexport async function safeNetworkRequest(requestFn, options = {}) {\r\n  return safeAsync(requestFn, {\r\n    category: ERROR_CATEGORIES.NETWORK,\r\n    severity: ERROR_SEVERITY.MEDIUM,\r\n    retries: 2,\r\n    timeout: 10000,\r\n    fallback: () => ({\r\n      error: true,\r\n      message: 'Network request failed',\r\n      offline: true,\r\n    }),\r\n    ...options,\r\n  });\r\n}\r\n\r\n/**\r\n * Safe wrapper for authentication operations\r\n * @param {Function} authFn - Authentication function\r\n * @param {Object} options - Auth options\r\n * @returns {Promise} - Auth result with error handling\r\n */\r\nexport async function safeAuthOperation(authFn, options = {}) {\r\n  return safeAsync(authFn, {\r\n    category: ERROR_CATEGORIES.AUTHENTICATION,\r\n    severity: ERROR_SEVERITY.HIGH,\r\n    timeout: 15000,\r\n    fallback: () => ({\r\n      success: false,\r\n      error: true,\r\n      message: 'Authentication service unavailable',\r\n    }),\r\n    ...options,\r\n  });\r\n}\r\n\r\n/**\r\n * Create error boundary for React-like error handling\r\n * @param {HTMLElement} element - DOM element to wrap\r\n * @param {Function} renderFn - Function to render content\r\n * @param {Function} errorFn - Function to render error state\r\n */\r\nexport function createErrorBoundary(element, renderFn, errorFn) {\r\n  try {\r\n    renderFn();\r\n  } catch (error) {\r\n    globalErrorHandler.handleError(error, ERROR_CATEGORIES.RENDERING, ERROR_SEVERITY.MEDIUM);\r\n\r\n    if (errorFn) {\r\n      errorFn(error);\r\n    } else {\r\n      element.textContent = 'Content could not be displayed due to an error.';\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Validate medical input data\r\n * @param {Object} data - Input data\r\n * @param {Object} schema - Validation schema\r\n * @returns {Object} - Validation result\r\n */\r\nexport function validateMedicalInputs(data, schema) {\r\n  const errors = [];\r\n  const warnings = [];\r\n\r\n  Object.keys(schema).forEach((key) => {\r\n    const rule = schema[key];\r\n    const value = data[key];\r\n\r\n    // Required field check\r\n    if (rule.required && (value === undefined || value === null || value === '')) {\r\n      errors.push({\r\n        field: key,\r\n        code: MEDICAL_ERROR_CODES.DATA_INCOMPLETE,\r\n        message: `${key} is required`,\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Type check\r\n    if (value !== undefined && rule.type) {\r\n      const expectedType = rule.type;\r\n      const actualType = typeof value;\r\n\r\n      if (expectedType === 'number' && (isNaN(value) || actualType !== 'number')) {\r\n        errors.push({\r\n          field: key,\r\n          code: MEDICAL_ERROR_CODES.INVALID_VITAL_SIGNS,\r\n          message: `${key} must be a valid number`,\r\n        });\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Range check for medical values\r\n    if (value !== undefined && typeof value === 'number') {\r\n      if (rule.min !== undefined && value < rule.min) {\r\n        errors.push({\r\n          field: key,\r\n          code: MEDICAL_ERROR_CODES.INVALID_VITAL_SIGNS,\r\n          message: `${key} must be at least ${rule.min}`,\r\n        });\r\n      }\r\n\r\n      if (rule.max !== undefined && value > rule.max) {\r\n        errors.push({\r\n          field: key,\r\n          code: MEDICAL_ERROR_CODES.INVALID_VITAL_SIGNS,\r\n          message: `${key} must not exceed ${rule.max}`,\r\n        });\r\n      }\r\n\r\n      // Medical warning thresholds\r\n      if (rule.warningMin !== undefined && value < rule.warningMin) {\r\n        warnings.push({\r\n          field: key,\r\n          message: `${key} is below typical range (${rule.warningMin})`,\r\n        });\r\n      }\r\n\r\n      if (rule.warningMax !== undefined && value > rule.warningMax) {\r\n        warnings.push({\r\n          field: key,\r\n          message: `${key} is above typical range (${rule.warningMax})`,\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors,\r\n    warnings,\r\n    hasWarnings: warnings.length > 0,\r\n  };\r\n}\r\n\r\n/**\r\n * Get error handler instance for debugging\r\n */\r\nexport function getErrorHandler() {\r\n  return globalErrorHandler;\r\n}\r\n\r\n/**\r\n * Export error classes\r\n */\r\nexport { GlobalErrorHandler };\r\n","/**\r\n * Medical Type Definitions for iGFAP Stroke Triage Assistant\r\n * Provides comprehensive type safety for medical calculations and data\r\n *\r\n * @author iGFAP Project Team\r\n * @contact Deepak Bos <bosdeepak@gmail.com>\r\n */\r\n\r\n/**\r\n * @typedef {Object} PatientData\r\n * @property {number} age - Patient age in years (0-120)\r\n * @property {string} gender - Patient gender ('male' | 'female' | 'other')\r\n * @property {number} gfap - GFAP biomarker level in pg/mL (29-10001)\r\n * @property {number} [nihss] - NIHSS score (0-42)\r\n * @property {number} [gcs] - Glasgow Coma Scale (3-15)\r\n * @property {boolean} [hypertension] - History of hypertension\r\n * @property {boolean} [diabetes] - History of diabetes\r\n * @property {boolean} [smoking] - Smoking status\r\n * @property {number} [sbp] - Systolic blood pressure (mmHg)\r\n * @property {number} [dbp] - Diastolic blood pressure (mmHg)\r\n */\r\n\r\n/**\r\n * @typedef {Object} ICHRiskResult\r\n * @property {number} probability - ICH risk probability (0-1)\r\n * @property {number} percentage - ICH risk percentage (0-100)\r\n * @property {'low'|'moderate'|'high'|'critical'} riskLevel - Risk classification\r\n * @property {string} module - Module used for calculation\r\n * @property {string} timestamp - ISO timestamp of calculation\r\n */\r\n\r\n/**\r\n * @typedef {Object} ICHVolumeResult\r\n * @property {number} volume - Predicted volume in mL\r\n * @property {number} confidence - Confidence level (0-1)\r\n * @property {'small'|'moderate'|'large'|'massive'} volumeCategory - Volume classification\r\n * @property {string} timestamp - ISO timestamp of calculation\r\n */\r\n\r\n/**\r\n * @typedef {Object} ValidationResult\r\n * @property {boolean} isValid - Whether the data is valid\r\n * @property {string[]} errors - Array of validation error messages\r\n * @property {string[]} warnings - Array of validation warnings\r\n */\r\n\r\n/**\r\n * @typedef {Object} PredictionRequest\r\n * @property {PatientData} data - Patient data for prediction\r\n * @property {string} module - Module type ('coma'|'limited'|'full')\r\n * @property {string} timestamp - ISO timestamp of request\r\n * @property {string} sessionId - Session identifier\r\n */\r\n\r\n/**\r\n * @typedef {Object} PredictionResponse\r\n * @property {boolean} success - Whether prediction was successful\r\n * @property {ICHRiskResult} [ichRisk] - ICH risk prediction result\r\n * @property {ICHVolumeResult} [ichVolume] - ICH volume prediction result\r\n * @property {string} [error] - Error message if prediction failed\r\n * @property {number} processingTime - Time taken for prediction (ms)\r\n */\r\n\r\n/**\r\n * @typedef {Object} QualityMetric\r\n * @property {string} name - Metric name\r\n * @property {'count'|'duration'|'percentage'|'average'} type - Metric type\r\n * @property {number} value - Metric value\r\n * @property {string} timestamp - ISO timestamp\r\n * @property {Object} [metadata] - Additional metric metadata\r\n */\r\n\r\n/**\r\n * @typedef {Object} AuditEvent\r\n * @property {string} eventType - Type of event ('data_entry'|'prediction'|'error')\r\n * @property {string} timestamp - ISO timestamp\r\n * @property {string} userId - User identifier\r\n * @property {Object} data - Event-specific data\r\n * @property {string} [sessionId] - Session identifier\r\n */\r\n\r\n/**\r\n * @typedef {Object} SessionInfo\r\n * @property {string} sessionId - Unique session identifier\r\n * @property {string} userId - User identifier\r\n * @property {number} startTime - Session start timestamp\r\n * @property {number} lastActivity - Last activity timestamp\r\n * @property {boolean} isValid - Whether session is still valid\r\n */\r\n\r\n/**\r\n * @typedef {Object} AppStatus\r\n * @property {boolean} isInitialized - Whether app is initialized\r\n * @property {boolean} isAuthenticated - Whether user is authenticated\r\n * @property {string} currentScreen - Current screen name\r\n * @property {Object} features - Feature availability status\r\n * @property {string} version - Application version\r\n */\r\n\r\n/**\r\n * @typedef {Object} ErrorContext\r\n * @property {string} operation - Operation being performed\r\n * @property {string} [component] - Component where error occurred\r\n * @property {Object} [metadata] - Additional error metadata\r\n * @property {string} timestamp - ISO timestamp\r\n */\r\n\r\n/**\r\n * @typedef {Object} SafeOperationOptions\r\n * @property {'AUTHENTICATION'|'NETWORK'|'MEDICAL'|'STORAGE'|'RENDERING'} category - Error category\r\n * @property {'LOW'|'MEDIUM'|'HIGH'|'CRITICAL'} severity - Error severity\r\n * @property {number} [timeout] - Operation timeout in milliseconds\r\n * @property {number} [retries] - Number of retry attempts\r\n * @property {ErrorContext} context - Error context information\r\n */\r\n\r\n/**\r\n * Type validation functions\r\n */\r\n\r\n/**\r\n * Validates patient data structure and ranges\r\n * @param {any} data - Data to validate\r\n * @returns {ValidationResult} Validation result\r\n */\r\nexport function validatePatientData(data) {\r\n  const errors = [];\r\n  const warnings = [];\r\n\r\n  if (!data || typeof data !== 'object') {\r\n    errors.push('Patient data must be an object');\r\n    return { isValid: false, errors, warnings };\r\n  }\r\n\r\n  // Required fields validation\r\n  if (typeof data.age !== 'number' || data.age < 0 || data.age > 120) {\r\n    errors.push('Age must be a number between 0 and 120');\r\n  }\r\n\r\n  if (!['male', 'female', 'other'].includes(data.gender)) {\r\n    errors.push('Gender must be \"male\", \"female\", or \"other\"');\r\n  }\r\n\r\n  if (typeof data.gfap !== 'number' || data.gfap < 29 || data.gfap > 10001) {\r\n    errors.push('GFAP must be a number between 29 and 10001 pg/mL');\r\n  }\r\n\r\n  // Optional fields validation\r\n  if (data.nihss !== undefined && (typeof data.nihss !== 'number' || data.nihss < 0 || data.nihss > 42)) {\r\n    errors.push('NIHSS must be a number between 0 and 42');\r\n  }\r\n\r\n  if (data.gcs !== undefined && (typeof data.gcs !== 'number' || data.gcs < 3 || data.gcs > 15)) {\r\n    errors.push('GCS must be a number between 3 and 15');\r\n  }\r\n\r\n  if (data.sbp !== undefined && (typeof data.sbp !== 'number' || data.sbp < 50 || data.sbp > 300)) {\r\n    warnings.push('Systolic BP should typically be between 50-300 mmHg');\r\n  }\r\n\r\n  if (data.dbp !== undefined && (typeof data.dbp !== 'number' || data.dbp < 30 || data.dbp > 200)) {\r\n    warnings.push('Diastolic BP should typically be between 30-200 mmHg');\r\n  }\r\n\r\n  return { isValid: errors.length === 0, errors, warnings };\r\n}\r\n\r\n/**\r\n * Validates ICH risk result\r\n * @param {any} result - Result to validate\r\n * @returns {ValidationResult} Validation result\r\n */\r\nexport function validateICHRiskResult(result) {\r\n  const errors = [];\r\n  const warnings = [];\r\n\r\n  if (!result || typeof result !== 'object') {\r\n    errors.push('ICH risk result must be an object');\r\n    return { isValid: false, errors, warnings };\r\n  }\r\n\r\n  if (typeof result.probability !== 'number' || result.probability < 0 || result.probability > 1) {\r\n    errors.push('Probability must be a number between 0 and 1');\r\n  }\r\n\r\n  if (typeof result.percentage !== 'number' || result.percentage < 0 || result.percentage > 100) {\r\n    errors.push('Percentage must be a number between 0 and 100');\r\n  }\r\n\r\n  if (!['low', 'moderate', 'high', 'critical'].includes(result.riskLevel)) {\r\n    errors.push('Risk level must be \"low\", \"moderate\", \"high\", or \"critical\"');\r\n  }\r\n\r\n  if (!result.timestamp || !Date.parse(result.timestamp)) {\r\n    errors.push('Timestamp must be a valid ISO date string');\r\n  }\r\n\r\n  return { isValid: errors.length === 0, errors, warnings };\r\n}\r\n\r\n/**\r\n * Type guard functions\r\n */\r\n\r\n/**\r\n * Checks if value is valid patient data\r\n * @param {any} value - Value to check\r\n * @returns {value is PatientData} Type guard result\r\n */\r\nexport function isPatientData(value) {\r\n  const validation = validatePatientData(value);\r\n  return validation.isValid;\r\n}\r\n\r\n/**\r\n * Checks if value is valid ICH risk result\r\n * @param {any} value - Value to check\r\n * @returns {value is ICHRiskResult} Type guard result\r\n */\r\nexport function isICHRiskResult(value) {\r\n  const validation = validateICHRiskResult(value);\r\n  return validation.isValid;\r\n}\r\n\r\n/**\r\n * Medical calculation constants with type safety\r\n */\r\nexport const MEDICAL_CONSTANTS = {\r\n  /** @type {[number, number]} Age range */\r\n  AGE_RANGE: [0, 120],\r\n\r\n  /** @type {[number, number]} GFAP range in pg/mL */\r\n  GFAP_RANGE: [29, 10001],\r\n\r\n  /** @type {[number, number]} NIHSS range */\r\n  NIHSS_RANGE: [0, 42],\r\n\r\n  /** @type {[number, number]} GCS range */\r\n  GCS_RANGE: [3, 15],\r\n\r\n  /** @type {Object.<string, number>} Risk thresholds */\r\n  RISK_THRESHOLDS: {\r\n    LOW: 0.25,\r\n    MODERATE: 0.50,\r\n    HIGH: 0.70,\r\n    CRITICAL: 0.85,\r\n  },\r\n\r\n  /** @type {Object.<string, number>} Volume thresholds in mL */\r\n  VOLUME_THRESHOLDS: {\r\n    SMALL: 10,\r\n    MODERATE: 30,\r\n    LARGE: 60,\r\n    MASSIVE: 100,\r\n  },\r\n};\r\n\r\n/**\r\n * Runtime type checking utility\r\n */\r\nexport class TypeChecker {\r\n  /**\r\n   * Ensures value matches expected type with detailed error\r\n   * @param {any} value - Value to check\r\n   * @param {string} expectedType - Expected type description\r\n   * @param {string} fieldName - Field name for error messages\r\n   * @throws {TypeError} If type check fails\r\n   */\r\n  static ensureType(value, expectedType, fieldName) {\r\n    let isValid = false;\r\n    let actualType = typeof value;\r\n\r\n    switch (expectedType) {\r\n      case 'PatientData':\r\n        isValid = isPatientData(value);\r\n        actualType = 'Invalid PatientData';\r\n        break;\r\n      case 'ICHRiskResult':\r\n        isValid = isICHRiskResult(value);\r\n        actualType = 'Invalid ICHRiskResult';\r\n        break;\r\n      case 'number':\r\n        isValid = typeof value === 'number' && !isNaN(value);\r\n        break;\r\n      case 'string':\r\n        isValid = typeof value === 'string';\r\n        break;\r\n      case 'boolean':\r\n        isValid = typeof value === 'boolean';\r\n        break;\r\n      default:\r\n        isValid = typeof value === expectedType;\r\n    }\r\n\r\n    if (!isValid) {\r\n      throw new TypeError(\r\n        `Type error in ${fieldName}: expected ${expectedType}, got ${actualType}. `\r\n        + 'This is a critical error in medical calculations.',\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validates number is within range\r\n   * @param {number} value - Value to check\r\n   * @param {[number, number]} range - [min, max] range\r\n   * @param {string} fieldName - Field name for error messages\r\n   * @throws {RangeError} If value is out of range\r\n   */\r\n  static ensureRange(value, range, fieldName) {\r\n    this.ensureType(value, 'number', fieldName);\r\n    const [min, max] = range;\r\n\r\n    if (value < min || value > max) {\r\n      throw new RangeError(\r\n        `Range error in ${fieldName}: value ${value} must be between ${min} and ${max}. `\r\n        + 'This is a critical error in medical calculations.',\r\n      );\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Professional Medical Logging System\r\n * iGFAP Stroke Triage Assistant - Enterprise-Grade Logging\r\n *\r\n * Provides structured, secure logging for medical applications with:\r\n * - HIPAA compliance (no PHI in logs)\r\n * - Structured JSON logging\r\n * - Performance monitoring\r\n * - Error tracking\r\n * - Audit trail capabilities\r\n *\r\n * @author iGFAP Project Team\r\n * @contact Deepak Bos <bosdeepak@gmail.com>\r\n */\r\n\r\nimport { safeAsync, ERROR_CATEGORIES } from './error-handler.js';\r\n\r\n/**\r\n * @typedef {Object} LogEntry\r\n * @property {string} timestamp - ISO timestamp\r\n * @property {string} level - Log level\r\n * @property {string} category - Log category\r\n * @property {string} message - Log message\r\n * @property {Object} [context] - Additional context (sanitized)\r\n * @property {string} [sessionId] - Session identifier\r\n * @property {string} [userId] - User identifier (anonymized)\r\n * @property {Object} [performance] - Performance metrics\r\n * @property {string} [stackTrace] - Stack trace for errors\r\n */\r\n\r\n/**\r\n * Log levels with priority ordering\r\n */\r\nexport const LOG_LEVELS = {\r\n  DEBUG: { level: 0, name: 'DEBUG', color: '#6366f1' },\r\n  INFO: { level: 1, name: 'INFO', color: '#10b981' },\r\n  WARN: { level: 2, name: 'WARN', color: '#f59e0b' },\r\n  ERROR: { level: 3, name: 'ERROR', color: '#ef4444' },\r\n  CRITICAL: { level: 4, name: 'CRITICAL', color: '#dc2626' },\r\n};\r\n\r\n/**\r\n * Log categories for medical application\r\n */\r\nexport const LOG_CATEGORIES = {\r\n  AUTHENTICATION: 'AUTH',\r\n  MEDICAL_CALCULATION: 'MEDICAL',\r\n  NETWORK: 'NETWORK',\r\n  PERFORMANCE: 'PERF',\r\n  SECURITY: 'SECURITY',\r\n  USER_INTERACTION: 'UI',\r\n  DATA_VALIDATION: 'VALIDATION',\r\n  AUDIT: 'AUDIT',\r\n  SYSTEM: 'SYSTEM',\r\n  ERROR: 'ERROR',\r\n};\r\n\r\n/**\r\n * Professional Medical Logger Class\r\n */\r\nexport class MedicalLogger {\r\n  constructor() {\r\n    this.logLevel = this.getLogLevel();\r\n    this.sessionId = this.generateSessionId();\r\n    this.logBuffer = [];\r\n    this.maxBufferSize = 1000;\r\n    this.isProduction = window.location.hostname !== 'localhost' && window.location.hostname !== '127.0.0.1';\r\n    this.enableConsole = !this.isProduction;\r\n    this.enableStorage = true;\r\n    this.enableNetwork = false; // Would send to logging service in production\r\n\r\n    this.setupErrorHandlers();\r\n    this.startPeriodicFlush();\r\n  }\r\n\r\n  /**\r\n   * Get configured log level from environment or localStorage\r\n   */\r\n  getLogLevel() {\r\n    try {\r\n      const stored = localStorage.getItem('medicalLogLevel');\r\n      if (stored && LOG_LEVELS[stored.toUpperCase()]) {\r\n        return LOG_LEVELS[stored.toUpperCase()].level;\r\n      }\r\n    } catch (error) {\r\n      // localStorage not available\r\n    }\r\n\r\n    // Default to INFO in production, DEBUG in development\r\n    return this.isProduction ? LOG_LEVELS.INFO.level : LOG_LEVELS.DEBUG.level;\r\n  }\r\n\r\n  /**\r\n   * Generate unique session identifier\r\n   */\r\n  generateSessionId() {\r\n    const timestamp = Date.now().toString(36);\r\n    const random = Math.random().toString(36).substring(2, 8);\r\n    return `sess_${timestamp}_${random}`;\r\n  }\r\n\r\n  /**\r\n   * Setup global error handlers\r\n   */\r\n  setupErrorHandlers() {\r\n    // Capture unhandled errors\r\n    window.addEventListener('error', (event) => {\r\n      try {\r\n        this.critical('Unhandled JavaScript Error', {\r\n          category: LOG_CATEGORIES.ERROR,\r\n          message: event.message,\r\n          filename: event.filename,\r\n          lineno: event.lineno,\r\n          colno: event.colno,\r\n          stack: event.error?.stack,\r\n        });\r\n      } catch (loggingError) {\r\n        // Fallback to console if logging fails\r\n        console.error('Logging failed:', loggingError);\r\n        console.error('Original error:', event.error);\r\n      }\r\n    });\r\n\r\n    // Capture unhandled promise rejections\r\n    window.addEventListener('unhandledrejection', (event) => {\r\n      try {\r\n        this.critical('Unhandled Promise Rejection', {\r\n          category: LOG_CATEGORIES.ERROR,\r\n          reason: event.reason?.message || String(event.reason) || 'Unknown rejection',\r\n          stack: event.reason?.stack,\r\n        });\r\n      } catch (loggingError) {\r\n        // Fallback to console if logging fails\r\n        console.error('Logging failed:', loggingError);\r\n        console.error('Original rejection:', event.reason);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create structured log entry\r\n   */\r\n  createLogEntry(level, message, context = {}) {\r\n    // Ensure context is always an object\r\n    const safeContext = context && typeof context === 'object' ? context : {};\r\n\r\n    const entry = {\r\n      timestamp: new Date().toISOString(),\r\n      level: LOG_LEVELS[level]?.name || level,\r\n      category: safeContext.category || LOG_CATEGORIES.SYSTEM,\r\n      message: this.sanitizeMessage(message),\r\n      sessionId: this.sessionId,\r\n      context: this.sanitizeContext(safeContext),\r\n      performance: this.getPerformanceMetrics(),\r\n    };\r\n\r\n    // Add stack trace for errors\r\n    if (level === 'ERROR' || level === 'CRITICAL') {\r\n      entry.stackTrace = new Error().stack;\r\n    }\r\n\r\n    // Add user ID if available (anonymized)\r\n    const userId = this.getAnonymizedUserId();\r\n    if (userId) {\r\n      entry.userId = userId;\r\n    }\r\n\r\n    return entry;\r\n  }\r\n\r\n  /**\r\n   * Sanitize message to remove PHI\r\n   */\r\n  sanitizeMessage(message) {\r\n    if (typeof message !== 'string') {\r\n      message = String(message);\r\n    }\r\n\r\n    // Remove potential PHI patterns\r\n    const sanitized = message\r\n      .replace(/\\b\\d{3}-\\d{2}-\\d{4}\\b/g, '***-**-****') // SSN\r\n      .replace(/\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/g, '***@***.***') // Email\r\n      .replace(/\\b\\d{10,}\\b/g, '**********') // Phone numbers\r\n      .replace(/\\b[A-Z][a-z]+ [A-Z][a-z]+\\b/g, '[NAME]'); // Names\r\n\r\n    return sanitized;\r\n  }\r\n\r\n  /**\r\n   * Sanitize context object to remove PHI\r\n   */\r\n  sanitizeContext(context) {\r\n    // Handle null or non-object inputs\r\n    if (!context || typeof context !== 'object') {\r\n      return {};\r\n    }\r\n\r\n    const sanitized = { ...context };\r\n\r\n    // Remove sensitive fields\r\n    const sensitiveFields = [\r\n      'password', 'token', 'sessionToken', 'authToken',\r\n      'patientName', 'firstName', 'lastName', 'fullName',\r\n      'email', 'phone', 'ssn', 'mrn', 'dob', 'dateOfBirth',\r\n    ];\r\n\r\n    const removeSensitiveData = (obj) => {\r\n      if (!obj || typeof obj !== 'object') {\r\n        return obj;\r\n      }\r\n\r\n      const cleaned = Array.isArray(obj) ? [] : {};\r\n\r\n      for (const [key, value] of Object.entries(obj)) {\r\n        const lowerKey = key.toLowerCase();\r\n\r\n        if (sensitiveFields.some((field) => lowerKey.includes(field))) {\r\n          cleaned[key] = '[REDACTED]';\r\n        } else if (typeof value === 'object' && value !== null) {\r\n          cleaned[key] = removeSensitiveData(value);\r\n        } else {\r\n          cleaned[key] = value;\r\n        }\r\n      }\r\n\r\n      return cleaned;\r\n    };\r\n\r\n    return removeSensitiveData(sanitized);\r\n  }\r\n\r\n  /**\r\n   * Get anonymized user ID\r\n   */\r\n  getAnonymizedUserId() {\r\n    try {\r\n      // Use a hash of session info, not actual user data\r\n      const sessionData = sessionStorage.getItem('session_hash');\r\n      if (sessionData) {\r\n        return `user_${sessionData.substring(0, 8)}`;\r\n      }\r\n    } catch (error) {\r\n      // Session storage not available\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Get performance metrics\r\n   */\r\n  getPerformanceMetrics() {\r\n    try {\r\n      if ('performance' in window) {\r\n        const navigation = performance.getEntriesByType('navigation')[0];\r\n        return {\r\n          memoryUsed: performance.memory?.usedJSHeapSize || 0,\r\n          loadTime: navigation?.loadEventEnd - navigation?.loadEventStart || 0,\r\n          domReady: navigation?.domContentLoadedEventEnd - navigation?.domContentLoadedEventStart || 0,\r\n        };\r\n      }\r\n    } catch (error) {\r\n      // Performance API not available\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Log message at specified level\r\n   */\r\n  log(level, message, context = {}) {\r\n    return safeAsync(\r\n      async () => {\r\n        // Validate inputs\r\n        if (!level || !message) {\r\n          return; // Skip logging if no level or message\r\n        }\r\n\r\n        const levelInfo = LOG_LEVELS[level.toUpperCase()];\r\n        if (!levelInfo || levelInfo.level < this.logLevel) {\r\n          return; // Below configured log level\r\n        }\r\n\r\n        const entry = this.createLogEntry(level.toUpperCase(), message, context);\r\n\r\n        // Add to buffer\r\n        this.addToBuffer(entry);\r\n\r\n        // Console output in development\r\n        if (this.enableConsole) {\r\n          this.outputToConsole(entry);\r\n        }\r\n\r\n        // Store locally\r\n        if (this.enableStorage) {\r\n          this.storeEntry(entry);\r\n        }\r\n\r\n        // Send to logging service (production)\r\n        if (this.enableNetwork) {\r\n          await this.sendToLoggingService(entry);\r\n        }\r\n      },\r\n      {\r\n        category: ERROR_CATEGORIES.SYSTEM,\r\n        context: { operation: 'logging', level, message: message.substring(0, 100) },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Add entry to buffer\r\n   */\r\n  addToBuffer(entry) {\r\n    this.logBuffer.push(entry);\r\n\r\n    // Maintain buffer size\r\n    if (this.logBuffer.length > this.maxBufferSize) {\r\n      this.logBuffer = this.logBuffer.slice(-this.maxBufferSize);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Output to browser console with styling\r\n   */\r\n  outputToConsole(entry) {\r\n    const levelInfo = LOG_LEVELS[entry.level];\r\n    const color = levelInfo?.color || '#666666';\r\n\r\n    const style = `color: ${color}; font-weight: bold;`;\r\n    const timestamp = new Date(entry.timestamp).toLocaleTimeString();\r\n\r\n    const consoleMethod = entry.level === 'ERROR' || entry.level === 'CRITICAL' ? 'error'\r\n      : entry.level === 'WARN' ? 'warn' : 'log';\r\n\r\n    console.groupCollapsed(\r\n      `%c[${entry.level}] ${timestamp} [${entry.category}] ${entry.message}`,\r\n      style,\r\n    );\r\n\r\n    if (entry.context && Object.keys(entry.context).length > 0) {\r\n      console.log('Context:', entry.context);\r\n    }\r\n\r\n    if (entry.performance) {\r\n      console.log('Performance:', entry.performance);\r\n    }\r\n\r\n    if (entry.stackTrace && (entry.level === 'ERROR' || entry.level === 'CRITICAL')) {\r\n      console.log('Stack Trace:', entry.stackTrace);\r\n    }\r\n\r\n    console.groupEnd();\r\n  }\r\n\r\n  /**\r\n   * Store entry locally\r\n   */\r\n  storeEntry(entry) {\r\n    try {\r\n      const key = `medicalLog_${entry.timestamp}`;\r\n      const serialized = JSON.stringify(entry);\r\n\r\n      // Use sessionStorage for temporary storage\r\n      sessionStorage.setItem(key, serialized);\r\n\r\n      // Clean old entries (keep last 100)\r\n      this.cleanOldEntries();\r\n    } catch (error) {\r\n      // Storage failed - continue silently\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clean old log entries from storage\r\n   */\r\n  cleanOldEntries() {\r\n    try {\r\n      const keys = Object.keys(sessionStorage)\r\n        .filter((key) => key.startsWith('medicalLog_'))\r\n        .sort()\r\n        .reverse();\r\n\r\n      // Keep only the last 100 entries\r\n      if (keys.length > 100) {\r\n        keys.slice(100).forEach((key) => {\r\n          sessionStorage.removeItem(key);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      // Cleanup failed - continue silently\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send to remote logging service\r\n   */\r\n  async sendToLoggingService(entry) {\r\n    // In production, this would send to a logging service like:\r\n    // - Google Cloud Logging\r\n    // - AWS CloudWatch\r\n    // - Elastic Stack\r\n    // - Splunk\r\n\r\n    // For now, just return - would implement actual service call\r\n    return Promise.resolve();\r\n  }\r\n\r\n  /**\r\n   * Start periodic buffer flush\r\n   */\r\n  startPeriodicFlush() {\r\n    setInterval(() => {\r\n      this.flushBuffer();\r\n    }, 30000); // Flush every 30 seconds\r\n  }\r\n\r\n  /**\r\n   * Flush log buffer\r\n   */\r\n  flushBuffer() {\r\n    if (this.logBuffer.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // In production, this would batch-send logs to service\r\n    this.info('Log buffer flushed', {\r\n      category: LOG_CATEGORIES.SYSTEM,\r\n      entriesCount: this.logBuffer.length,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Convenience methods for different log levels\r\n   */\r\n  debug(message, context = {}) {\r\n    return this.log('DEBUG', message, context);\r\n  }\r\n\r\n  info(message, context = {}) {\r\n    return this.log('INFO', message, context);\r\n  }\r\n\r\n  warn(message, context = {}) {\r\n    return this.log('WARN', message, context);\r\n  }\r\n\r\n  error(message, context = {}) {\r\n    return this.log('ERROR', message, context);\r\n  }\r\n\r\n  critical(message, context = {}) {\r\n    return this.log('CRITICAL', message, context);\r\n  }\r\n\r\n  /**\r\n   * Specialized medical logging methods\r\n   */\r\n  medicalCalculation(operation, result, context = {}) {\r\n    return this.info(`Medical calculation: ${operation}`, {\r\n      category: LOG_CATEGORIES.MEDICAL_CALCULATION,\r\n      operation,\r\n      success: !context.error,\r\n      ...context,\r\n    });\r\n  }\r\n\r\n  authentication(action, success, context = {}) {\r\n    return this.info(`Authentication: ${action}`, {\r\n      category: LOG_CATEGORIES.AUTHENTICATION,\r\n      action,\r\n      success,\r\n      ...context,\r\n    });\r\n  }\r\n\r\n  userInteraction(action, context = {}) {\r\n    return this.debug(`User interaction: ${action}`, {\r\n      category: LOG_CATEGORIES.USER_INTERACTION,\r\n      action,\r\n      ...context,\r\n    });\r\n  }\r\n\r\n  networkRequest(url, method, status, context = {}) {\r\n    const level = status >= 400 ? 'ERROR' : status >= 300 ? 'WARN' : 'DEBUG';\r\n    return this.log(level, `Network request: ${method} ${url}`, {\r\n      category: LOG_CATEGORIES.NETWORK,\r\n      method,\r\n      url: this.sanitizeUrl(url),\r\n      status,\r\n      ...context,\r\n    });\r\n  }\r\n\r\n  performance(metric, value, context = {}) {\r\n    return this.debug(`Performance metric: ${metric} = ${value}`, {\r\n      category: LOG_CATEGORIES.PERFORMANCE,\r\n      metric,\r\n      value,\r\n      ...context,\r\n    });\r\n  }\r\n\r\n  auditTrail(event, context = {}) {\r\n    return this.info(`Audit: ${event}`, {\r\n      category: LOG_CATEGORIES.AUDIT,\r\n      event,\r\n      ...context,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sanitize URL to remove sensitive parameters\r\n   */\r\n  sanitizeUrl(url) {\r\n    try {\r\n      const urlObj = new URL(url);\r\n      const sensitiveParams = ['token', 'auth', 'key', 'secret'];\r\n\r\n      sensitiveParams.forEach((param) => {\r\n        if (urlObj.searchParams.has(param)) {\r\n          urlObj.searchParams.set(param, '[REDACTED]');\r\n        }\r\n      });\r\n\r\n      return urlObj.toString();\r\n    } catch (error) {\r\n      return url;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all logs from buffer and storage\r\n   */\r\n  getLogs(filters = {}) {\r\n    const allLogs = [...this.logBuffer];\r\n\r\n    // Add logs from storage\r\n    try {\r\n      const keys = Object.keys(sessionStorage)\r\n        .filter((key) => key.startsWith('medicalLog_'))\r\n        .sort();\r\n\r\n      keys.forEach((key) => {\r\n        try {\r\n          const entry = JSON.parse(sessionStorage.getItem(key));\r\n          if (entry && !allLogs.find((log) => log.timestamp === entry.timestamp)) {\r\n            allLogs.push(entry);\r\n          }\r\n        } catch (error) {\r\n          // Skip corrupted entries\r\n        }\r\n      });\r\n    } catch (error) {\r\n      // Storage access failed\r\n    }\r\n\r\n    // Apply filters\r\n    let filtered = allLogs.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\r\n\r\n    if (filters.level) {\r\n      const minLevel = LOG_LEVELS[filters.level.toUpperCase()]?.level || 0;\r\n      filtered = filtered.filter((log) => {\r\n        const logLevel = LOG_LEVELS[log.level]?.level || 0;\r\n        return logLevel >= minLevel;\r\n      });\r\n    }\r\n\r\n    if (filters.category) {\r\n      filtered = filtered.filter((log) => log.category === filters.category);\r\n    }\r\n\r\n    if (filters.since) {\r\n      const sinceDate = new Date(filters.since);\r\n      filtered = filtered.filter((log) => new Date(log.timestamp) >= sinceDate);\r\n    }\r\n\r\n    if (filters.limit) {\r\n      filtered = filtered.slice(0, filters.limit);\r\n    }\r\n\r\n    return filtered;\r\n  }\r\n\r\n  /**\r\n   * Export logs for debugging or compliance\r\n   */\r\n  exportLogs(format = 'json') {\r\n    const logs = this.getLogs();\r\n\r\n    if (format === 'csv') {\r\n      return this.logsToCSV(logs);\r\n    }\r\n\r\n    return JSON.stringify(logs, null, 2);\r\n  }\r\n\r\n  /**\r\n   * Convert logs to CSV format\r\n   */\r\n  logsToCSV(logs) {\r\n    if (logs.length === 0) {\r\n      return '';\r\n    }\r\n\r\n    const headers = ['timestamp', 'level', 'category', 'message', 'sessionId'];\r\n    const rows = logs.map((log) => [\r\n      log.timestamp,\r\n      log.level,\r\n      log.category,\r\n      `\"${log.message.replace(/\"/g, '\"\"')}\"`,\r\n      log.sessionId,\r\n    ]);\r\n\r\n    return [headers.join(','), ...rows.map((row) => row.join(','))].join('\\n');\r\n  }\r\n\r\n  /**\r\n   * Clear all logs\r\n   */\r\n  clearLogs() {\r\n    this.logBuffer = [];\r\n\r\n    try {\r\n      const keys = Object.keys(sessionStorage)\r\n        .filter((key) => key.startsWith('medicalLog_'));\r\n\r\n      keys.forEach((key) => sessionStorage.removeItem(key));\r\n    } catch (error) {\r\n      // Storage cleanup failed\r\n    }\r\n\r\n    this.info('Log storage cleared', {\r\n      category: LOG_CATEGORIES.SYSTEM,\r\n    });\r\n  }\r\n}\r\n\r\n// Create global logger instance\r\nexport const medicalLogger = new MedicalLogger();\r\n\r\n// Export convenience functions\r\nexport const {\r\n  debug,\r\n  info,\r\n  warn,\r\n  error,\r\n  critical,\r\n  medicalCalculation,\r\n  authentication,\r\n  userInteraction,\r\n  networkRequest,\r\n  performance,\r\n  auditTrail,\r\n} = medicalLogger;\r\n","/**\r\n * Secure Authentication System for iGFAP Stroke Triage Assistant\r\n * Enterprise-grade authentication using Google Cloud Functions\r\n *\r\n * @typedef {import('../types/medical-types.js').SessionInfo} SessionInfo\r\n *\r\n * @author iGFAP Project Team\r\n * @contact Deepak Bos <bosdeepak@gmail.com>\r\n */\r\n\r\nimport { API_URLS, DEV_CONFIG } from '../config.js';\r\nimport { getResearchPassword, isDevelopment, getSecurityConfig } from '../security/environment.js';\r\n\r\n// Bulletproof error handling utilities\r\nimport {\r\n  safeAsync,\r\n  safeAuthOperation,\r\n  MedicalError,\r\n  ERROR_CATEGORIES,\r\n  ERROR_SEVERITY,\r\n  MEDICAL_ERROR_CODES,\r\n} from '../utils/error-handler.js';\r\n\r\n// Type safety utilities\r\nimport { TypeChecker } from '../types/medical-types.js';\r\n\r\n// Professional logging\r\nimport { medicalLogger, LOG_CATEGORIES } from '../utils/medical-logger.js';\r\n\r\n// Encrypted storage\r\nimport { secureStore, secureRetrieve, secureRemove } from '../security/data-encryption.js';\r\n\r\nexport class AuthenticationManager {\r\n  constructor() {\r\n    this.isAuthenticated = false;\r\n    this.sessionToken = null;\r\n    this.sessionExpiry = null;\r\n    this.lastActivity = Date.now();\r\n    this.setupActivityTracking();\r\n  }\r\n\r\n  /**\r\n   * Authenticate user with research access password via secure Cloud Function\r\n   * @param {string} password - Research access password\r\n   * @returns {Promise<{success: boolean, message: string, sessionInfo?: SessionInfo}>} - Authentication result with success status and message\r\n   */\r\n  async authenticate(password) {\r\n    return safeAuthOperation(\r\n      async () => {\r\n        medicalLogger.info('Authentication attempt started', {\r\n          category: LOG_CATEGORIES.AUTHENTICATION,\r\n          hasPassword: !!password && password.length > 0,\r\n          isDevelopment: DEV_CONFIG.isDevelopment,\r\n        });\r\n\r\n        // Type safety validation\r\n        TypeChecker.ensureType(password, 'string', 'authentication password');\r\n\r\n        if (!password || password.trim().length === 0) {\r\n          medicalLogger.warn('Authentication failed: empty password', {\r\n            category: LOG_CATEGORIES.AUTHENTICATION,\r\n          });\r\n          throw new MedicalError(\r\n            'Password is required',\r\n            'EMPTY_PASSWORD',\r\n            ERROR_CATEGORIES.VALIDATION,\r\n            ERROR_SEVERITY.MEDIUM,\r\n          );\r\n        }\r\n\r\n        // Local preview (localhost, vite preview): authenticate locally to avoid CORS\r\n        const isLocalPreview = ['localhost', '127.0.0.1', '0.0.0.0'].includes(window.location.hostname) && !(import.meta && import.meta.env && import.meta.env.DEV);\r\n        if (isLocalPreview || DEV_CONFIG.isDevelopment) {\r\n          medicalLogger.info('Development mode authentication path', {\r\n            category: LOG_CATEGORIES.AUTHENTICATION,\r\n          });\r\n\r\n          // SECURITY: Use environment-based research password\r\n          const expectedPassword = getResearchPassword();\r\n          if (password.trim() !== expectedPassword) {\r\n            await this.delayFailedAttempt();\r\n            return {\r\n              success: false,\r\n              message: 'Invalid credentials',\r\n              errorCode: 'INVALID_CREDENTIALS',\r\n            };\r\n          }\r\n\r\n          await new Promise((resolve) => setTimeout(resolve, 300)); // small UX delay\r\n\r\n          this.isAuthenticated = true;\r\n          this.sessionToken = DEV_CONFIG.mockAuthResponse.session_token;\r\n          this.sessionExpiry = new Date(DEV_CONFIG.mockAuthResponse.expires_at);\r\n          this.lastActivity = Date.now();\r\n\r\n          // Store session\r\n          try {\r\n            this.storeSecureSession();\r\n          } catch (storageError) {\r\n            console.warn('Session storage failed:', storageError.message);\r\n          }\r\n\r\n          return {\r\n            success: true,\r\n            message: 'Authentication successful',\r\n            sessionDuration: DEV_CONFIG.mockAuthResponse.session_duration,\r\n          };\r\n        }\r\n\r\n        // This branch is now unreachable due to isLocalPreview handling above; keep as guard\r\n        const isLocalHost = ['localhost', '127.0.0.1', '0.0.0.0'].includes(window.location.hostname);\r\n        const preferMock = localStorage.getItem('use_mock_api') !== 'false';\r\n        if (isLocalHost && preferMock && !(import.meta && import.meta.env && import.meta.env.DEV)) {\r\n          if (password.trim() !== getResearchPassword()) {\r\n            await this.delayFailedAttempt();\r\n            return {\r\n              success: false,\r\n              message: 'Invalid credentials',\r\n              errorCode: 'INVALID_CREDENTIALS',\r\n            };\r\n          }\r\n\r\n          // Simulate minimal delay for UX\r\n          await new Promise((resolve) => setTimeout(resolve, 200));\r\n\r\n          this.isAuthenticated = true;\r\n          this.sessionToken = `local-preview-token-${Date.now()}`;\r\n          this.sessionExpiry = new Date(Date.now() + 30 * 60 * 1000);\r\n          this.lastActivity = Date.now();\r\n\r\n          try {\r\n            this.storeSecureSession();\r\n          } catch {}\r\n\r\n          return {\r\n            success: true,\r\n            message: 'Authentication successful',\r\n            sessionDuration: 1800,\r\n          };\r\n        }\r\n\r\n        medicalLogger.debug('Sending authentication request', {\r\n          category: LOG_CATEGORIES.AUTHENTICATION,\r\n          url: API_URLS.AUTHENTICATE,\r\n        });\r\n\r\n        const response = await fetch(API_URLS.AUTHENTICATE, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            action: 'login',\r\n            password: password.trim(),\r\n          }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          let errorMessage = 'Authentication failed';\r\n          let errorCode = 'AUTH_FAILED';\r\n\r\n          if (response.status === 429) {\r\n            errorMessage = 'Too many authentication attempts. Please wait and try again.';\r\n            errorCode = 'RATE_LIMITED';\r\n          } else if (response.status >= 500) {\r\n            errorMessage = 'Authentication service temporarily unavailable';\r\n            errorCode = 'SERVICE_ERROR';\r\n          }\r\n\r\n          throw new MedicalError(\r\n            errorMessage,\r\n            errorCode,\r\n            ERROR_CATEGORIES.AUTHENTICATION,\r\n            response.status >= 500 ? ERROR_SEVERITY.HIGH : ERROR_SEVERITY.MEDIUM,\r\n          ).withContext({ statusCode: response.status, url: API_URLS.AUTHENTICATE });\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (!data || typeof data !== 'object') {\r\n          throw new MedicalError(\r\n            'Invalid response from authentication service',\r\n            'INVALID_RESPONSE',\r\n            ERROR_CATEGORIES.AUTHENTICATION,\r\n            ERROR_SEVERITY.HIGH,\r\n          );\r\n        }\r\n\r\n        if (data.success) {\r\n          this.isAuthenticated = true;\r\n          this.sessionToken = data.session_token;\r\n          this.sessionExpiry = data.expires_at ? new Date(data.expires_at) : null;\r\n          this.lastActivity = Date.now();\r\n\r\n          // Safely store session\r\n          try {\r\n            this.storeSecureSession();\r\n          } catch (storageError) {\r\n            // Continue with authentication even if storage fails\r\n            console.warn('Session storage failed:', storageError.message);\r\n          }\r\n\r\n          return {\r\n            success: true,\r\n            message: 'Authentication successful',\r\n            sessionDuration: data.session_duration,\r\n          };\r\n        }\r\n        // Handle authentication failure\r\n        await this.delayFailedAttempt();\r\n\r\n        throw new MedicalError(\r\n          data.message || 'Invalid credentials',\r\n          'INVALID_CREDENTIALS',\r\n          ERROR_CATEGORIES.AUTHENTICATION,\r\n          ERROR_SEVERITY.MEDIUM,\r\n        ).withContext({\r\n          remainingAttempts: data.rate_limit_remaining,\r\n          statusCode: response.status,\r\n        });\r\n      },\r\n      {\r\n        timeout: 15000,\r\n        fallback: (error) => ({\r\n          success: false,\r\n          message: error instanceof MedicalError ? error.getUserMessage() : 'Authentication service unavailable. Please try again.',\r\n          errorCode: error.code || 'NETWORK_ERROR',\r\n          details: error.message,\r\n          remainingAttempts: error.context?.remainingAttempts,\r\n        }),\r\n        context: {\r\n          operation: 'user_authentication',\r\n          endpoint: 'authenticate',\r\n        },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Check if current session is valid\r\n   * @returns {boolean} - Session validity\r\n   */\r\n  isValidSession() {\r\n    if (!this.isAuthenticated) {\r\n      return this.checkStoredSession();\r\n    }\r\n\r\n    // Check session expiry\r\n    if (this.sessionExpiry && new Date() > this.sessionExpiry) {\r\n      this.logout();\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Validate session token with server\r\n   * @returns {boolean} - Server-side session validity\r\n   */\r\n  async validateSessionWithServer() {\r\n    if (!this.sessionToken) {\r\n      return false;\r\n    }\r\n\r\n    return safeAuthOperation(\r\n      async () => {\r\n        // Skip remote validation on local preview to avoid CORS noise\r\n        const isLocalPreview = ['localhost', '127.0.0.1', '0.0.0.0'].includes(window.location.hostname) && !(import.meta && import.meta.env && import.meta.env.DEV);\r\n        if (isLocalPreview) {\r\n          this.updateActivity();\r\n          return true;\r\n        }\r\n\r\n        const response = await fetch(API_URLS.AUTHENTICATE, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            action: 'validate_session',\r\n            session_token: this.sessionToken,\r\n          }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          if (response.status === 401 || response.status === 403) {\r\n            // Session expired or invalid\r\n            this.logout();\r\n            return false;\r\n          }\r\n\r\n          throw new MedicalError(\r\n            'Session validation service error',\r\n            'VALIDATION_ERROR',\r\n            ERROR_CATEGORIES.AUTHENTICATION,\r\n            ERROR_SEVERITY.MEDIUM,\r\n          ).withContext({ statusCode: response.status });\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (!data || typeof data !== 'object') {\r\n          throw new MedicalError(\r\n            'Invalid response from session validation service',\r\n            'INVALID_RESPONSE',\r\n            ERROR_CATEGORIES.AUTHENTICATION,\r\n            ERROR_SEVERITY.MEDIUM,\r\n          );\r\n        }\r\n\r\n        if (data.success) {\r\n          this.updateActivity();\r\n          return true;\r\n        }\r\n        this.logout();\r\n        return false;\r\n      },\r\n      {\r\n        timeout: 10000,\r\n        fallback: (error) => {\r\n          // On network errors, allow local session to continue\r\n          // This prevents logout during temporary network issues\r\n          console.warn('Session validation failed, continuing with local session:', error.message);\r\n          return this.isValidSession();\r\n        },\r\n        context: {\r\n          operation: 'session_validation',\r\n          endpoint: 'validate_session',\r\n        },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update activity timestamp\r\n   */\r\n  updateActivity() {\r\n    this.lastActivity = Date.now();\r\n    this.storeAuthSession();\r\n  }\r\n\r\n  /**\r\n   * Logout and clear session securely\r\n   */\r\n  async logout() {\r\n    medicalLogger.info('User logout initiated', {\r\n      category: LOG_CATEGORIES.AUTHENTICATION,\r\n    });\r\n\r\n    this.isAuthenticated = false;\r\n    this.sessionToken = null;\r\n    this.sessionExpiry = null;\r\n\r\n    // Clear all encrypted session storage securely\r\n    try {\r\n      await secureRemove('auth_session', true);\r\n      await secureRemove('auth_timestamp', true);\r\n      await secureRemove('session_token', true);\r\n      await secureRemove('session_expiry', true);\r\n\r\n      // Clear legacy unencrypted data\r\n      sessionStorage.removeItem('auth_session');\r\n      sessionStorage.removeItem('auth_timestamp');\r\n      sessionStorage.removeItem('session_token');\r\n      sessionStorage.removeItem('session_expiry');\r\n\r\n      medicalLogger.info('Session data cleared during logout', {\r\n        category: LOG_CATEGORIES.SECURITY,\r\n      });\r\n    } catch (error) {\r\n      medicalLogger.warn('Failed to clear some session data during logout', {\r\n        category: LOG_CATEGORIES.SECURITY,\r\n        error: error.message,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Simple hash function for password verification\r\n   * Note: For production medical device, use proper bcrypt/PBKDF2\r\n   * @param {string} input - Password to hash\r\n   * @returns {string} - Hashed password\r\n   */\r\n  async hashPassword(input) {\r\n    return safeAsync(\r\n      async () => {\r\n        if (!input || typeof input !== 'string') {\r\n          throw new MedicalError(\r\n            'Invalid input for password hashing',\r\n            'INVALID_INPUT',\r\n            ERROR_CATEGORIES.VALIDATION,\r\n            ERROR_SEVERITY.MEDIUM,\r\n          );\r\n        }\r\n\r\n        if (!crypto || !crypto.subtle) {\r\n          throw new MedicalError(\r\n            'Crypto API not available',\r\n            'CRYPTO_UNAVAILABLE',\r\n            ERROR_CATEGORIES.SECURITY,\r\n            ERROR_SEVERITY.HIGH,\r\n          );\r\n        }\r\n\r\n        const encoder = new TextEncoder();\r\n        const data = encoder.encode(input);\r\n        const hashBuffer = await crypto.subtle.digest('SHA-256', data);\r\n        const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n        const hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\r\n        return hashHex;\r\n      },\r\n      {\r\n        category: ERROR_CATEGORIES.SECURITY,\r\n        severity: ERROR_SEVERITY.HIGH,\r\n        timeout: 5000,\r\n        fallback: () => {\r\n          // Simple fallback hash for non-critical use\r\n          let hash = 0;\r\n          for (let i = 0; i < input.length; i++) {\r\n            const char = input.charCodeAt(i);\r\n            hash = ((hash << 5) - hash) + char;\r\n            hash &= hash; // Convert to 32-bit integer\r\n          }\r\n          return Math.abs(hash).toString(16);\r\n        },\r\n        context: {\r\n          operation: 'password_hashing',\r\n          inputLength: input ? input.length : 0,\r\n        },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Store authenticated session securely\r\n   */\r\n  storeSecureSession() {\r\n    return safeAsync(\r\n      async () => {\r\n        if (!this.isAuthenticated || !this.sessionToken) {\r\n          throw new MedicalError(\r\n            'Cannot store session: not authenticated',\r\n            'NOT_AUTHENTICATED',\r\n            ERROR_CATEGORIES.AUTHENTICATION,\r\n            ERROR_SEVERITY.LOW,\r\n          );\r\n        }\r\n\r\n        if (typeof sessionStorage === 'undefined') {\r\n          throw new MedicalError(\r\n            'Session storage not available',\r\n            'STORAGE_UNAVAILABLE',\r\n            ERROR_CATEGORIES.STORAGE,\r\n            ERROR_SEVERITY.MEDIUM,\r\n          );\r\n        }\r\n\r\n        // Store session data securely\r\n        sessionStorage.setItem('auth_session', 'verified');\r\n        sessionStorage.setItem('auth_timestamp', this.lastActivity.toString());\r\n        sessionStorage.setItem('session_token', this.sessionToken);\r\n        if (this.sessionExpiry) {\r\n          sessionStorage.setItem('session_expiry', this.sessionExpiry.toISOString());\r\n        }\r\n\r\n        return true;\r\n      },\r\n      {\r\n        category: ERROR_CATEGORIES.STORAGE,\r\n        severity: ERROR_SEVERITY.LOW,\r\n        timeout: 1000,\r\n        fallback: (error) => {\r\n          console.warn('Failed to store session:', error.message);\r\n          return false;\r\n        },\r\n        context: {\r\n          operation: 'store_session',\r\n          hasToken: !!this.sessionToken,\r\n          hasExpiry: !!this.sessionExpiry,\r\n        },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Legacy method for compatibility\r\n   */\r\n  storeAuthSession() {\r\n    this.storeSecureSession();\r\n  }\r\n\r\n  /**\r\n   * Check for existing valid session\r\n   * @returns {boolean} - Stored session validity\r\n   */\r\n  checkStoredSession() {\r\n    try {\r\n      return safeAsync(\r\n        async () => {\r\n          if (typeof sessionStorage === 'undefined') {\r\n            throw new MedicalError(\r\n              'Session storage not available',\r\n              'STORAGE_UNAVAILABLE',\r\n              ERROR_CATEGORIES.STORAGE,\r\n              ERROR_SEVERITY.LOW,\r\n            );\r\n          }\r\n\r\n          const session = await secureRetrieve('auth_session', true);\r\n          const timestamp = await secureRetrieve('auth_timestamp', true);\r\n          const storedToken = await secureRetrieve('session_token', true);\r\n          const storedExpiry = await secureRetrieve('session_expiry', true);\r\n\r\n          if (session === 'verified' && timestamp && storedToken) {\r\n            // Check if session has expired\r\n            if (storedExpiry) {\r\n              const expiryDate = new Date(storedExpiry);\r\n              if (new Date() > expiryDate) {\r\n                this.logout();\r\n                return false;\r\n              }\r\n              this.sessionExpiry = expiryDate;\r\n            }\r\n\r\n            // Validate timestamp is a valid number\r\n            const timestampNum = parseInt(timestamp);\r\n            if (isNaN(timestampNum)) {\r\n              throw new MedicalError(\r\n                'Invalid session timestamp',\r\n                'INVALID_SESSION_DATA',\r\n                ERROR_CATEGORIES.STORAGE,\r\n                ERROR_SEVERITY.MEDIUM,\r\n              );\r\n            }\r\n\r\n            this.isAuthenticated = true;\r\n            this.sessionToken = storedToken;\r\n            this.lastActivity = timestampNum;\r\n            return true;\r\n          }\r\n\r\n          this.logout();\r\n          return false;\r\n        },\r\n        {\r\n          category: ERROR_CATEGORIES.STORAGE,\r\n          severity: ERROR_SEVERITY.LOW,\r\n          timeout: 1000,\r\n          fallback: (error) => {\r\n            console.warn('Failed to check stored session:', error.message);\r\n            this.logout();\r\n            return false;\r\n          },\r\n          context: {\r\n            operation: 'check_stored_session',\r\n          },\r\n        },\r\n      );\r\n    } catch (error) {\r\n      this.logout();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setup activity tracking for session management\r\n   */\r\n  setupActivityTracking() {\r\n    // Track user interactions to maintain session\r\n    const events = ['mousedown', 'mousemove', 'keypress', 'scroll', 'touchstart'];\r\n\r\n    const updateActivity = () => {\r\n      if (this.isAuthenticated) {\r\n        this.updateActivity();\r\n      }\r\n    };\r\n\r\n    events.forEach((event) => {\r\n      document.addEventListener(event, updateActivity, { passive: true });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Rate limiting for failed authentication attempts\r\n   */\r\n  async delayFailedAttempt() {\r\n    return safeAsync(\r\n      async () => new Promise((resolve) => {\r\n        setTimeout(resolve, 1000); // 1 second delay\r\n      }),\r\n      {\r\n        category: ERROR_CATEGORIES.AUTHENTICATION,\r\n        severity: ERROR_SEVERITY.LOW,\r\n        timeout: 2000,\r\n        fallback: () =>\r\n          // If delay fails, continue without delay\r\n          Promise.resolve(),\r\n        context: {\r\n          operation: 'auth_delay',\r\n        },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get session status for UI\r\n   * @returns {object} - Session information\r\n   */\r\n  getSessionInfo() {\r\n    if (!this.isAuthenticated) {\r\n      return { authenticated: false };\r\n    }\r\n\r\n    const timeRemaining = this.sessionTimeout - (Date.now() - this.lastActivity);\r\n    const hoursRemaining = Math.floor(timeRemaining / (60 * 60 * 1000));\r\n    const minutesRemaining = Math.floor((timeRemaining % (60 * 60 * 1000)) / (60 * 1000));\r\n\r\n    return {\r\n      authenticated: true,\r\n      timeRemaining: `${hoursRemaining}h ${minutesRemaining}m`,\r\n      lastActivity: new Date(this.lastActivity).toLocaleTimeString(),\r\n    };\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const authManager = new AuthenticationManager();\r\n","export function renderProgressIndicator(currentStep) {\r\n  const steps = [\r\n    { id: 1, label: 'Triage' },\r\n    { id: 2, label: 'Assessment' },\r\n    { id: 3, label: 'Results' },\r\n  ];\r\n\r\n  let html = '<div class=\"flex items-center justify-between mb-6\">';\r\n\r\n  steps.forEach((step, index) => {\r\n    const isActive = step.id === currentStep;\r\n    const isCompleted = step.id < currentStep;\r\n\r\n    // Step circle\r\n    html += `\r\n      <div class=\"flex-1 flex items-center\">\r\n        <div class=\"relative flex flex-col items-center text-center w-full\">\r\n          <div class=\"w-8 h-8 flex items-center justify-center rounded-full \r\n                      ${isCompleted ? 'bg-green-500 text-white' : isActive ? 'bg-blue-500 text-white' : 'bg-gray-300 text-gray-700'} \r\n                      font-bold\">\r\n            ${isCompleted ? '✓' : step.id}\r\n          </div>\r\n          <span class=\"mt-2 text-xs ${isActive ? 'text-blue-500' : 'text-gray-500'}\">\r\n            ${step.label}\r\n          </span>\r\n        </div>\r\n        \r\n        ${index < steps.length - 1 ? `<div class=\"flex-1 h-1 ${isCompleted ? 'bg-green-500' : 'bg-gray-300'}\"></div>` : ''}\r\n      </div>\r\n    `;\r\n  });\r\n\r\n  html += '</div>';\r\n  return html;\r\n}\r\n","import { renderProgressIndicator } from '../components/progress.js';\r\nimport { t } from '../../localization/i18n.js';\r\n\r\nexport function renderTriage1() {\r\n  return `\r\n    <div class=\"container mx-auto px-4 py-8 max-w-lg\">\r\n      <!-- Progress -->\r\n      <div class=\"mb-6\">\r\n        ${renderProgressIndicator(1)}\r\n      </div>\r\n\r\n      <!-- Card -->\r\n      <div class=\"bg-white dark:bg-gray-800 shadow-lg rounded-2xl p-6\">\r\n        <!-- Title -->\r\n        <h2 class=\"text-2xl font-extrabold text-gray-900 dark:text-white mb-4 text-center\">\r\n          ${t('triage1Title')}\r\n        </h2>\r\n\r\n        <!-- Question -->\r\n        <div class=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-xl mb-6\">\r\n          <p class=\"text-lg text-gray-800 dark:text-gray-200 font-medium mb-2 text-center\">\r\n            ${t('triage1Question')}\r\n          </p>\r\n          <p class=\"text-sm text-gray-500 dark:text-gray-400 text-center\">\r\n            ${t('triage1Help')}\r\n          </p>\r\n        </div>\r\n\r\n        <!-- Buttons -->\r\n        <div class=\"grid grid-cols-2 gap-4\">\r\n          <button \r\n            class=\"yes-btn w-full bg-green-500 hover:bg-green-600 text-white font-semibold py-3 rounded-xl shadow-md transition transform hover:scale-105\"\r\n            data-action=\"triage1\" \r\n            data-value=\"true\"\r\n          >\r\n            ✅ ${t('triage1Yes')}\r\n          </button>\r\n          \r\n          <button \r\n            class=\"no-btn w-full bg-red-500 hover:bg-red-600 text-white font-semibold py-3 rounded-xl shadow-md transition transform hover:scale-105\"\r\n            data-action=\"triage1\" \r\n            data-value=\"false\"\r\n          >\r\n            ❌ ${t('triage1No')}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n","import { renderProgressIndicator } from '../components/progress.js';\r\nimport { t } from '../../localization/i18n.js';\r\n\r\nexport function renderTriage2() {\r\n  return `\r\n    <div class=\"container mx-auto px-4 py-8 max-w-lg\">\r\n      <!-- Progress -->\r\n      <div class=\"mb-6\">\r\n        ${renderProgressIndicator(2)}\r\n      </div>\r\n\r\n      <!-- Card -->\r\n      <div class=\"bg-white dark:bg-gray-800 shadow-lg rounded-2xl p-6\">\r\n        <!-- Title -->\r\n        <h2 class=\"text-2xl font-extrabold text-gray-900 dark:text-white mb-4 text-center\">\r\n          ${t('triage2Title')}\r\n        </h2>\r\n\r\n        <!-- Question -->\r\n        <div class=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-xl mb-6\">\r\n          <p class=\"text-lg text-gray-800 dark:text-gray-200 font-medium mb-2 text-center\">\r\n            ${t('triage2Question')}\r\n          </p>\r\n          <p class=\"text-sm text-gray-500 dark:text-gray-400 text-center\">\r\n            ${t('triage2Help')}\r\n          </p>\r\n        </div>\r\n\r\n        <!-- Buttons -->\r\n        <div class=\"grid grid-cols-2 gap-4\">\r\n          <button \r\n            class=\"yes-btn w-full bg-blue-500 hover:bg-blue-600 text-white font-semibold py-3 rounded-xl shadow-md transition transform hover:scale-105\"\r\n            data-action=\"triage2\" \r\n            data-value=\"true\"\r\n          >\r\n            ✅ ${t('triage2Yes')}\r\n          </button>\r\n          \r\n          <button \r\n            class=\"no-btn w-full bg-gray-300 hover:bg-gray-400 text-gray-900 font-semibold py-3 rounded-xl shadow-md transition transform hover:scale-105\"\r\n            data-action=\"triage2\" \r\n            data-value=\"false\"\r\n          >\r\n            ❌ ${t('triage2No')}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n","import { renderProgressIndicator } from '../components/progress.js';\r\nimport { GFAP_RANGES } from '../../config.js';\r\nimport { t } from '../../localization/i18n.js';\r\n\r\nexport function renderComa() {\r\n  return `\r\n    <div class=\"container mx-auto px-4 py-6 max-w-md\">\r\n      ${renderProgressIndicator(2)}\r\n\r\n      <h2 class=\"text-xl font-bold text-gray-900 dark:text-white\">\r\n        ${t('comaModuleTitle') || 'Coma Module'}\r\n      </h2>\r\n\r\n      <form data-module=\"coma\" class=\"flex flex-col space-y-4\">\r\n        <div class=\"flex flex-col space-y-2\">\r\n          <label for=\"gfap_value\" class=\"text-gray-700 dark:text-gray-200 font-semibold flex items-center space-x-2\">\r\n            <span>${t('gfapValueLabel')}</span>\r\n            <span class=\"relative group cursor-pointer text-gray-400 dark:text-gray-300\">\r\n              ℹ️\r\n              <span class=\"absolute left-1/2 transform -translate-x-1/2 -top-8 w-56 p-2 bg-gray-800 text-white text-xs rounded opacity-0 group-hover:opacity-100 transition-opacity\">\r\n                ${t('gfapTooltipLong')}\r\n              </span>\r\n            </span>\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"gfap_value\"\r\n            name=\"gfap_value\"\r\n            min=\"${GFAP_RANGES.min}\"\r\n            max=\"${GFAP_RANGES.max}\"\r\n            step=\"0.1\"\r\n            required\r\n            aria-describedby=\"gfap-help\"\r\n            class=\"border border-gray-300 dark:border-gray-600 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\r\n          >\r\n          <div id=\"gfap-help\" class=\"text-gray-500 dark:text-gray-400 text-sm\">\r\n            ${t('gfapRange').replace('{min}', GFAP_RANGES.min).replace('{max}', GFAP_RANGES.max)}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"flex flex-col sm:flex-row sm:space-x-4 space-y-2 sm:space-y-0\">\r\n          <button\r\n            type=\"submit\"\r\n            class=\"flex-1 bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 rounded-lg transition\"\r\n          >\r\n            ${t('analyzeIchRisk')}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"flex-1 bg-gray-300 hover:bg-gray-400 text-gray-900 font-semibold py-2 rounded-lg transition\"\r\n            data-action=\"reset\"\r\n          >\r\n            ${t('startOver')}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  `;\r\n}\r\n","import { renderProgressIndicator } from '../components/progress.js';\r\nimport { GFAP_RANGES } from '../../config.js';\r\nimport { t } from '../../localization/i18n.js';\r\n\r\nexport function renderLimited() {\r\n  return `\r\n    <div class=\"container\">\r\n      ${renderProgressIndicator(2)}\r\n      <h2>${t('limitedDataModuleTitle') || 'Limited Data Module'}</h2>\r\n      <form data-module=\"limited\">\r\n        <div class=\"input-grid\">\r\n          <div class=\"input-group\">\r\n            <label for=\"age_years\">${t('ageYearsLabel')}</label>\r\n            <input type=\"number\" name=\"age_years\" id=\"age_years\" min=\"0\" max=\"120\" required aria-describedby=\"age-help\">\r\n            <div id=\"age-help\" class=\"input-help\">${t('ageYearsHelp')}</div>\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <label for=\"systolic_bp\">${t('systolicBpLabel')}</label>\r\n            <div class=\"input-with-unit\">\r\n              <input type=\"number\" name=\"systolic_bp\" id=\"systolic_bp\" min=\"60\" max=\"300\" required aria-describedby=\"sbp-help\" inputmode=\"numeric\">\r\n              <span class=\"unit\">mmHg</span>\r\n            </div>\r\n            <div id=\"sbp-help\" class=\"input-help\">${t('systolicBpHelp')}</div>\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <label for=\"diastolic_bp\">${t('diastolicBpLabel')}</label>\r\n            <div class=\"input-with-unit\">\r\n              <input type=\"number\" name=\"diastolic_bp\" id=\"diastolic_bp\" min=\"30\" max=\"200\" required aria-describedby=\"dbp-help\" inputmode=\"numeric\">\r\n              <span class=\"unit\">mmHg</span>\r\n            </div>\r\n            <div id=\"dbp-help\" class=\"input-help\">${t('diastolicBpHelp')}</div>\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <label for=\"gfap_value\">\r\n              ${t('gfapValueLabel')}\r\n              <span class=\"tooltip\">ℹ️\r\n                <span class=\"tooltiptext\">${t('gfapTooltipLong')}</span>\r\n              </span>\r\n            </label>\r\n            <div class=\"input-with-unit\">\r\n              <input type=\"number\" name=\"gfap_value\" id=\"gfap_value\" min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required inputmode=\"decimal\">\r\n              <span class=\"unit\">pg/mL</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"checkbox-group\">\r\n          <label class=\"checkbox-wrapper\">\r\n            <input type=\"checkbox\" name=\"vigilanzminderung\" id=\"vigilanzminderung\">\r\n            <span class=\"checkbox-label\">${t('vigilanceReduction')}</span>\r\n          </label>\r\n        </div>\r\n        <button type=\"submit\" class=\"primary\">${t('analyzeIchRisk')}</button>\r\n        <button type=\"button\" class=\"secondary\" data-action=\"reset\">${t('startOver')}</button>\r\n      </form>\r\n    </div>\r\n  `;\r\n}\r\n","import { renderProgressIndicator } from '../components/progress.js';\r\nimport { GFAP_RANGES } from '../../config.js';\r\nimport { t } from '../../localization/i18n.js';\r\n\r\nexport function renderFull() {\r\n  return `\r\n    <div class=\"container\">\r\n      ${renderProgressIndicator(2)}\r\n      <h2>${t('fullStrokeModuleTitle') || 'Full Stroke Module'}</h2>\r\n      <form data-module=\"full\">\r\n        <h3>${t('basicInformation')}</h3>\r\n        <div class=\"input-grid\">\r\n          <div class=\"input-group\">\r\n            <label for=\"age_years\">${t('ageYearsLabel')}</label>\r\n            <input type=\"number\" name=\"age_years\" id=\"age_years\" min=\"0\" max=\"120\" required>\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <label for=\"systolic_bp\">${t('systolicBpLabel')}</label>\r\n            <div class=\"input-with-unit\">\r\n              <input type=\"number\" name=\"systolic_bp\" id=\"systolic_bp\" min=\"60\" max=\"300\" required inputmode=\"numeric\">\r\n              <span class=\"unit\">mmHg</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <label for=\"diastolic_bp\">${t('diastolicBpLabel')}</label>\r\n            <div class=\"input-with-unit\">\r\n              <input type=\"number\" name=\"diastolic_bp\" id=\"diastolic_bp\" min=\"30\" max=\"200\" required inputmode=\"numeric\">\r\n              <span class=\"unit\">mmHg</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>${t('biomarkersScores')}</h3>\r\n        <div class=\"input-grid\">\r\n          <div class=\"input-group\">\r\n            <label for=\"gfap_value\">\r\n              ${t('gfapValueLabel')}\r\n              <span class=\"tooltip\">ℹ️\r\n                <span class=\"tooltiptext\">${t('gfapTooltip')}</span>\r\n              </span>\r\n            </label>\r\n            <div class=\"input-with-unit\">\r\n              <input type=\"number\" name=\"gfap_value\" id=\"gfap_value\" min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required inputmode=\"decimal\">\r\n              <span class=\"unit\">pg/mL</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <label for=\"fast_ed_score\">\r\n              ${t('fastEdScoreLabel')}\r\n              <span class=\"tooltip\">ℹ️\r\n                <span class=\"tooltiptext\">${t('fastEdCalculatorSubtitle')}</span>\r\n              </span>\r\n            </label>\r\n            <input type=\"number\" name=\"fast_ed_score\" id=\"fast_ed_score\" min=\"0\" max=\"9\" required readonly placeholder=\"${t('fastEdCalculatorSubtitle')}\" style=\"cursor: pointer;\">\r\n            <input type=\"hidden\" name=\"armparese\" id=\"armparese_hidden\" value=\"false\">\r\n            <input type=\"hidden\" name=\"eye_deviation\" id=\"eye_deviation_hidden\" value=\"false\">\r\n          </div>\r\n        </div>\r\n\r\n        <h3>${t('clinicalSymptoms')}</h3>\r\n        <div class=\"input-grid\">\r\n          <div class=\"checkbox-group\">\r\n            <label class=\"checkbox-wrapper\">\r\n              <input type=\"checkbox\" name=\"headache\" id=\"headache\">\r\n              <span class=\"checkbox-label\">${t('headacheLabel')}</span>\r\n            </label>\r\n            <label class=\"checkbox-wrapper\">\r\n              <input type=\"checkbox\" name=\"vigilanzminderung\" id=\"vigilanzminderung\">\r\n              <span class=\"checkbox-label\">${t('vigilanzLabel')}</span>\r\n            </label>\r\n          </div>\r\n          <div class=\"checkbox-group\">\r\n            <label class=\"checkbox-wrapper\">\r\n              <input type=\"checkbox\" name=\"beinparese\" id=\"beinparese\">\r\n              <span class=\"checkbox-label\">${t('legParesis')}</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>${t('medicalHistory')}</h3>\r\n        <div class=\"input-grid\">\r\n          <div class=\"checkbox-group\">\r\n            <label class=\"checkbox-wrapper\">\r\n              <input type=\"checkbox\" name=\"atrial_fibrillation\" id=\"atrial_fibrillation\">\r\n              <span class=\"checkbox-label\">${t('atrialFibrillation')}</span>\r\n            </label>\r\n          </div>\r\n          <div class=\"checkbox-group\">\r\n            <label class=\"checkbox-wrapper\">\r\n              <input type=\"checkbox\" name=\"anticoagulated_noak\" id=\"anticoagulated_noak\">\r\n              <span class=\"checkbox-label\">${t('onNoacDoac')}</span>\r\n            </label>\r\n          </div>\r\n          <div class=\"checkbox-group\">\r\n            <label class=\"checkbox-wrapper\">\r\n              <input type=\"checkbox\" name=\"antiplatelets\" id=\"antiplatelets\">\r\n              <span class=\"checkbox-label\">${t('onAntiplatelets')}</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"primary\">${t('analyzeStrokeRisk')}</button>\r\n        <button type=\"button\" class=\"secondary\" data-action=\"reset\">${t('startOver')}</button>\r\n      </form>\r\n    </div>\r\n  `;\r\n}\r\n","import { t } from '../../localization/i18n.js';\r\n\r\nexport function renderCriticalAlert() {\r\n  return `\r\n    <div class=\"critical-alert\">\r\n      <h4><span class=\"alert-icon\">🚨</span> ${t('criticalAlertTitle')}</h4>\r\n      <p>${t('criticalAlertMessage')}</p>\r\n    </div>\r\n  `;\r\n}\r\n","// User-friendly label formatter for technical field names\r\n// Converts technical driver and field names to user-friendly labels\r\n\r\nimport { t } from '../localization/i18n.js';\r\n\r\n/**\r\n * Mapping of technical field names to the same labels used in input forms\r\n * Uses existing localization keys from the input forms\r\n */\r\nconst FIELD_LABEL_MAP = {\r\n  // Age and demographics\r\n  age_years: 'ageLabel',\r\n  age: 'ageLabel',\r\n\r\n  // Blood pressure\r\n  systolic_bp: 'systolicLabel',\r\n  diastolic_bp: 'diastolicLabel',\r\n  systolic_blood_pressure: 'systolicLabel',\r\n  diastolic_blood_pressure: 'diastolicLabel',\r\n  blood_pressure_systolic: 'systolicLabel',\r\n  blood_pressure_diastolic: 'diastolicLabel',\r\n\r\n  // Biomarkers\r\n  gfap_value: 'gfapLabel',\r\n  gfap: 'gfapLabel',\r\n  gfap_level: 'gfapLabel',\r\n\r\n  // Clinical scores\r\n  fast_ed_score: 'fastEdLabel',\r\n  fast_ed: 'fastEdLabel',\r\n  fast_ed_total: 'fastEdLabel',\r\n\r\n  // Neurological symptoms\r\n  vigilanzminderung: 'vigilanzLabel',\r\n  vigilance_reduction: 'vigilanzLabel',\r\n  reduced_consciousness: 'vigilanzLabel',\r\n  armparese: 'armPareseLabel',\r\n  arm_paresis: 'armPareseLabel',\r\n  arm_weakness: 'armPareseLabel',\r\n  beinparese: 'beinPareseLabel',\r\n  leg_paresis: 'beinPareseLabel',\r\n  leg_weakness: 'beinPareseLabel',\r\n  eye_deviation: 'eyeDeviationLabel',\r\n  blickdeviation: 'eyeDeviationLabel',\r\n  headache: 'headacheLabel',\r\n  kopfschmerzen: 'headacheLabel',\r\n\r\n  // Medical history\r\n  atrial_fibrillation: 'atrialFibLabel',\r\n  vorhofflimmern: 'atrialFibLabel',\r\n  anticoagulated_noak: 'anticoagLabel',\r\n  anticoagulation: 'anticoagLabel',\r\n  antiplatelets: 'antiplateletsLabel',\r\n  thrombozytenaggregationshemmer: 'antiplateletsLabel',\r\n};\r\n\r\n/**\r\n * Fallback patterns for common technical terms\r\n * Used when no specific mapping exists\r\n */\r\nconst PATTERN_REPLACEMENTS = [\r\n  { pattern: /_score$/, replacement: ' Score' },\r\n  { pattern: /_value$/, replacement: ' Level' },\r\n  { pattern: /_bp$/, replacement: ' Blood Pressure' },\r\n  { pattern: /_years?$/, replacement: ' (years)' },\r\n  { pattern: /^ich_/, replacement: 'Brain Bleeding ' },\r\n  { pattern: /^lvo_/, replacement: 'Large Vessel ' },\r\n  { pattern: /parese$/, replacement: 'Weakness' },\r\n  { pattern: /deviation$/, replacement: 'Movement' },\r\n];\r\n\r\n/**\r\n * Format a technical field name using the same labels as input forms\r\n * @param {string} fieldName - Technical field name (e.g., 'fast_ed_score')\r\n * @returns {string} - Consistent medical terminology label\r\n */\r\nexport function formatDriverName(fieldName) {\r\n  if (!fieldName) {\r\n    return '';\r\n  }\r\n\r\n  // First, try to find exact match in mapping to input form labels\r\n  const mappedKey = FIELD_LABEL_MAP[fieldName.toLowerCase()];\r\n  if (mappedKey) {\r\n    const translated = t(mappedKey);\r\n    if (translated && translated !== mappedKey) {\r\n      return translated;\r\n    }\r\n  }\r\n\r\n  // Apply pattern-based replacements for common medical terms\r\n  let formatted = fieldName.toLowerCase();\r\n  PATTERN_REPLACEMENTS.forEach(({ pattern, replacement }) => {\r\n    formatted = formatted.replace(pattern, replacement);\r\n  });\r\n\r\n  // Clean up and format - keep medical terminology consistent\r\n  formatted = formatted\r\n    .replace(/_/g, ' ') // Replace underscores with spaces\r\n    .replace(/\\b\\w/g, (l) => l.toUpperCase()) // Title case\r\n    .trim();\r\n\r\n  return formatted;\r\n}\r\n\r\n/**\r\n * Format field names for input summary display\r\n * @param {string} fieldName - Technical field name\r\n * @returns {string} - User-friendly label for summary\r\n */\r\nexport function formatSummaryLabel(fieldName) {\r\n  // Use the same logic but with specific summary context\r\n  const friendlyLabel = formatDriverName(fieldName);\r\n\r\n  // Remove units from summary labels as they're shown in values\r\n  return friendlyLabel\r\n    .replace(/\\s*\\([^)]*\\)\\s*/g, '') // Remove anything in parentheses\r\n    .trim();\r\n}\r\n\r\n/**\r\n * Format field values for display\r\n * @param {any} value - Field value\r\n * @param {string} fieldName - Field name for context\r\n * @returns {string} - Formatted display value\r\n */\r\nexport function formatDisplayValue(value, fieldName = '') {\r\n  if (value === null || value === undefined || value === '') {\r\n    return '';\r\n  }\r\n\r\n  if (typeof value === 'boolean') {\r\n    return value ? '✓' : '✗';\r\n  }\r\n\r\n  if (typeof value === 'number') {\r\n    // Add units based on field type\r\n    if (fieldName.includes('bp') || fieldName.includes('blood_pressure')) {\r\n      return `${value} mmHg`;\r\n    }\r\n    if (fieldName.includes('gfap')) {\r\n      return `${value} pg/mL`;\r\n    }\r\n    if (fieldName.includes('age')) {\r\n      return `${value} years`;\r\n    }\r\n    if (fieldName.includes('score')) {\r\n      return value.toString();\r\n    }\r\n\r\n    // Default number formatting\r\n    return Number.isInteger(value) ? value.toString() : value.toFixed(1);\r\n  }\r\n\r\n  return value.toString();\r\n}\r\n\r\n/**\r\n * Get a short description for a clinical field\r\n * @param {string} fieldName - Technical field name\r\n * @returns {string} - Brief description\r\n */\r\nexport function getFieldDescription(fieldName) {\r\n  const descriptions = {\r\n    fast_ed_score: 'Stroke severity assessment',\r\n    gfap_value: 'Brain injury biomarker',\r\n    vigilanzminderung: 'Level of consciousness',\r\n    systolic_bp: 'Upper blood pressure reading',\r\n    diastolic_bp: 'Lower blood pressure reading',\r\n    atrial_fibrillation: 'Irregular heart rhythm',\r\n    anticoagulated_noak: 'Blood-thinning medication',\r\n    antiplatelets: 'Anti-clotting medication',\r\n  };\r\n\r\n  return descriptions[fieldName.toLowerCase()] || '';\r\n}\r\n","import { t } from '../../localization/i18n.js';\r\nimport { formatDriverName } from '../../utils/label-formatter.js';\r\nimport { normalizeDrivers } from '../../logic/shap.js';\r\n\r\nexport function renderDriversSection(ich, lvo) {\r\n  // ('=== DRIVER RENDERING SECTION ===');\r\n\r\n  if (!ich?.drivers && !lvo?.drivers) {\r\n    // ('❌ No drivers available for rendering');\r\n    return '';\r\n  }\r\n\r\n  let html = `\r\n    <div class=\"drivers-section\">\r\n      <div class=\"drivers-header\">\r\n        <h3><span class=\"driver-header-icon\">🎯</span> ${t('riskAnalysis')}</h3>\r\n        <p class=\"drivers-subtitle\">${t('riskAnalysisSubtitle')}</p>\r\n      </div>\r\n      <div class=\"enhanced-drivers-grid\">\r\n  `;\r\n\r\n  console.log('[Drivers] ICH has drivers:', !!ich?.drivers, ich?.drivers);\r\n  console.log('[Drivers] LVO has drivers:', !!lvo?.drivers, 'notPossible:', lvo?.notPossible, lvo?.drivers);\r\n\r\n  if (ich?.drivers) {\r\n    console.log('🧠 Rendering ICH drivers panel');\r\n    html += renderEnhancedDriversPanel(ich.drivers, 'ICH', 'ich', ich.probability);\r\n  }\r\n\r\n  if (lvo?.drivers && !lvo.notPossible) {\r\n    console.log('🩸 Rendering LVO drivers panel');\r\n    html += renderEnhancedDriversPanel(lvo.drivers, 'LVO', 'lvo', lvo.probability);\r\n  }\r\n\r\n  html += `\r\n      </div>\r\n    </div>\r\n  `;\r\n  return html;\r\n}\r\n\r\nexport function renderDriversPanel(drivers, title, type) {\r\n  if (!drivers || Object.keys(drivers).length === 0) {\r\n    return `\r\n      <div class=\"drivers-panel\">\r\n        <h4>\r\n          <span class=\"driver-icon ${type}\">${type === 'ich' ? 'I' : 'L'}</span>\r\n          ${title} ${t('riskFactors')}\r\n        </h4>\r\n        <p style=\"color: var(--text-secondary); font-style: italic;\">\r\n          Driver information not available from this prediction model.\r\n        </p>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  const driversViewModel = normalizeDrivers(drivers);\r\n\r\n  if (driversViewModel.kind === 'unavailable') {\r\n    return `\r\n      <div class=\"drivers-panel\">\r\n        <h4>\r\n          <span class=\"driver-icon ${type}\">${type === 'ich' ? 'I' : 'L'}</span>\r\n          ${title} ${t('riskFactors')}\r\n        </h4>\r\n        <p style=\"color: var(--text-secondary); font-style: italic;\">\r\n          Driver analysis not available for this prediction.\r\n        </p>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  let html = `\r\n    <div class=\"drivers-panel\">\r\n      <h4>\r\n        <span class=\"driver-icon ${type}\">${type === 'ich' ? 'I' : 'L'}</span>\r\n        ${title} Risk Factors\r\n      </h4>\r\n  `;\r\n\r\n  // Calculate relative importance for legacy panel\r\n  const totalPositiveWeightLegacy = driversViewModel.positive.reduce((sum, d) => sum + Math.abs(d.weight), 0);\r\n  const totalNegativeWeightLegacy = driversViewModel.negative.reduce((sum, d) => sum + Math.abs(d.weight), 0);\r\n\r\n  // Show positive drivers (increase risk)\r\n  if (driversViewModel.positive.length > 0) {\r\n    driversViewModel.positive.forEach((driver) => {\r\n      const relativeImportance = totalPositiveWeightLegacy > 0\r\n        ? (Math.abs(driver.weight) / totalPositiveWeightLegacy) * 100 : 0;\r\n      const width = Math.min(relativeImportance * 2, 100); // Scale for visualization\r\n      html += `\r\n        <div class=\"driver-item\">\r\n          <span class=\"driver-label\">${driver.label}</span>\r\n          <div class=\"driver-bar-container\">\r\n            <div class=\"driver-bar positive\" style=\"width: ${width}%\">\r\n              <span class=\"driver-value\">+${relativeImportance.toFixed(0)}%</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `;\r\n    });\r\n  }\r\n\r\n  // Show negative drivers (decrease risk)\r\n  if (driversViewModel.negative.length > 0) {\r\n    driversViewModel.negative.forEach((driver) => {\r\n      const relativeImportance = totalNegativeWeightLegacy > 0\r\n        ? (Math.abs(driver.weight) / totalNegativeWeightLegacy) * 100 : 0;\r\n      const width = Math.min(relativeImportance * 2, 100); // Scale for visualization\r\n      html += `\r\n        <div class=\"driver-item\">\r\n          <span class=\"driver-label\">${driver.label}</span>\r\n          <div class=\"driver-bar-container\">\r\n            <div class=\"driver-bar negative\" style=\"width: ${width}%\">\r\n              <span class=\"driver-value\">-${relativeImportance.toFixed(0)}%</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `;\r\n    });\r\n  }\r\n\r\n  // Show metadata if available\r\n  if (driversViewModel.meta && Object.keys(driversViewModel.meta).length > 0) {\r\n    html += `\r\n      <div style=\"margin-top: 15px; padding-top: 10px; border-top: 1px solid var(--border-color);\">\r\n        <small style=\"color: var(--text-secondary);\">\r\n    `;\r\n\r\n    if (driversViewModel.meta.base_value !== undefined) {\r\n      html += `Base value: ${driversViewModel.meta.base_value.toFixed(2)} `;\r\n    }\r\n    if (driversViewModel.meta.contrib_sum !== undefined) {\r\n      html += `Contrib sum: ${driversViewModel.meta.contrib_sum.toFixed(2)} `;\r\n    }\r\n    if (driversViewModel.meta.logit_total !== undefined) {\r\n      html += `Logit total: ${driversViewModel.meta.logit_total.toFixed(2)}`;\r\n    }\r\n\r\n    html += `\r\n        </small>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  html += '</div>';\r\n  return html;\r\n}\r\n\r\nexport function renderEnhancedDriversPanel(drivers, title, type, probability) {\r\n  if (!drivers || Object.keys(drivers).length === 0) {\r\n    // (`No drivers data for ${title}`);\r\n    return `\r\n      <div class=\"enhanced-drivers-panel ${type}\">\r\n        <div class=\"panel-header\">\r\n          <div class=\"panel-icon ${type}\">${type === 'ich' ? '🩸' : '🧠'}</div>\r\n          <div class=\"panel-title\">\r\n            <h4>${title} ${t('riskFactors')}</h4>\r\n            <span class=\"panel-subtitle\">${t('noDriverData')}</span>\r\n          </div>\r\n        </div>\r\n        <p class=\"no-drivers-message\">\r\n          ${t('driverInfoNotAvailable')}\r\n        </p>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  // Drivers are already in the correct format from our new extraction\r\n  const driversViewModel = drivers;\r\n\r\n  if (driversViewModel.kind === 'unavailable') {\r\n    return `\r\n      <div class=\"enhanced-drivers-panel ${type}\">\r\n        <div class=\"panel-header\">\r\n          <div class=\"panel-icon ${type}\">${type === 'ich' ? '🩸' : '🧠'}</div>\r\n          <div class=\"panel-title\">\r\n            <h4>${title} ${t('riskFactors')}</h4>\r\n            <span class=\"panel-subtitle\">${t('driverAnalysisUnavailable')}</span>\r\n          </div>\r\n        </div>\r\n        <p class=\"no-drivers-message\">\r\n          ${t('driverAnalysisNotAvailable')}\r\n        </p>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  // Sort drivers by absolute impact and limit to top 6 most important\r\n  const positiveDrivers = (driversViewModel.positive || [])\r\n    .sort((a, b) => Math.abs(b.weight) - Math.abs(a.weight))\r\n    .slice(0, 3); // Top 3 positive drivers\r\n\r\n  const negativeDrivers = (driversViewModel.negative || [])\r\n    .sort((a, b) => Math.abs(b.weight) - Math.abs(a.weight))\r\n    .slice(0, 3); // Top 3 negative drivers\r\n\r\n  const maxWeight = Math.max(\r\n    ...positiveDrivers.map((d) => Math.abs(d.weight)),\r\n    ...negativeDrivers.map((d) => Math.abs(d.weight)),\r\n    0.01, // Prevent division by zero\r\n  );\r\n\r\n  console.log(`[Drivers] ${type} maxWeight:`, maxWeight);\r\n  console.log(`[Drivers] ${type} positive:`, positiveDrivers.map((d) => `${d.label}: ${d.weight}`));\r\n  console.log(`[Drivers] ${type} negative:`, negativeDrivers.map((d) => `${d.label}: ${d.weight}`));\r\n  console.log(`[Drivers] ${type} positive weights:`, positiveDrivers.map((d) => Math.abs(d.weight)));\r\n  console.log(`[Drivers] ${type} negative weights:`, negativeDrivers.map((d) => Math.abs(d.weight)));\r\n\r\n  let html = `\r\n    <div class=\"enhanced-drivers-panel ${type}\">\r\n      <div class=\"panel-header\">\r\n        <div class=\"panel-icon ${type}\">${type === 'ich' ? '🩸' : '🧠'}</div>\r\n        <div class=\"panel-title\">\r\n          <h4>${title} ${t('riskFactors')}</h4>\r\n          <span class=\"panel-subtitle\">${t('contributingFactors')}</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"drivers-split-view\">\r\n        <div class=\"drivers-column positive-column\">\r\n          <div class=\"column-header\">\r\n            <span class=\"column-icon\">↑</span>\r\n            <span class=\"column-title\">${t('increaseRisk')}</span>\r\n          </div>\r\n          <div class=\"compact-drivers\">\r\n  `;\r\n\r\n  // Calculate relative importance percentages\r\n  const totalPositiveWeight = positiveDrivers.reduce((sum, d) => sum + Math.abs(d.weight), 0);\r\n\r\n  // Render positive drivers\r\n  if (positiveDrivers.length > 0) {\r\n    positiveDrivers.forEach((driver, index) => {\r\n      // Calculate relative importance as percentage of total positive contribution\r\n      const relativeImportance = totalPositiveWeight > 0\r\n        ? (Math.abs(driver.weight) / totalPositiveWeight) * 100 : 0;\r\n\r\n      // Use baseline implementation: ratio to maxWeight (TRUE working method)\r\n      const barWidth = (Math.abs(driver.weight) / maxWeight) * 100;\r\n      console.log(`[Drivers] ${type} positive driver \"${driver.label}\": weight=${Math.abs(driver.weight)}, relativeImportance=${relativeImportance.toFixed(1)}%, barWidth=${barWidth}%`);\r\n\r\n      const cleanLabel = formatDriverName(driver.label);\r\n\r\n      html += `\r\n        <div class=\"compact-driver-item\">\r\n          <div class=\"compact-driver-label\">${cleanLabel}</div>\r\n          <div class=\"compact-driver-bar positive\" style=\"width: ${barWidth}%\">\r\n            <span class=\"compact-driver-value\">+${relativeImportance.toFixed(0)}%</span>\r\n          </div>\r\n        </div>\r\n      `;\r\n    });\r\n  } else {\r\n    html += `<div class=\"no-factors\">${t('noPositiveFactors')}</div>`;\r\n  }\r\n\r\n  html += `\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"drivers-column negative-column\">\r\n          <div class=\"column-header\">\r\n            <span class=\"column-icon\">↓</span>\r\n            <span class=\"column-title\">${t('decreaseRisk')}</span>\r\n          </div>\r\n          <div class=\"compact-drivers\">\r\n  `;\r\n\r\n  // Calculate relative importance percentages for negative drivers\r\n  const totalNegativeWeight = negativeDrivers.reduce((sum, d) => sum + Math.abs(d.weight), 0);\r\n\r\n  // Render negative drivers\r\n  if (negativeDrivers.length > 0) {\r\n    negativeDrivers.forEach((driver, index) => {\r\n      // Calculate relative importance as percentage of total negative contribution\r\n      const relativeImportance = totalNegativeWeight > 0\r\n        ? (Math.abs(driver.weight) / totalNegativeWeight) * 100 : 0;\r\n\r\n      // Use baseline implementation: ratio to maxWeight (TRUE working method)\r\n      const barWidth = (Math.abs(driver.weight) / maxWeight) * 100;\r\n      console.log(`[Drivers] ${type} negative driver \"${driver.label}\": weight=${Math.abs(driver.weight)}, relativeImportance=${relativeImportance.toFixed(1)}%, barWidth=${barWidth}%`);\r\n\r\n      const cleanLabel = formatDriverName(driver.label);\r\n\r\n      html += `\r\n        <div class=\"compact-driver-item\">\r\n          <div class=\"compact-driver-label\">${cleanLabel}</div>\r\n          <div class=\"compact-driver-bar negative\" style=\"width: ${barWidth}%\">\r\n            <span class=\"compact-driver-value\">-${relativeImportance.toFixed(0)}%</span>\r\n          </div>\r\n        </div>\r\n      `;\r\n    });\r\n  } else {\r\n    html += `<div class=\"no-factors\">${t('noNegativeFactors')}</div>`;\r\n  }\r\n\r\n  html += `\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n\r\n  return html;\r\n}\r\n","// Comprehensive stroke center database for Germany\r\n// Covers Bayern, Baden-Württemberg, and Nordrhein-Westfalen\r\n// Total: 316 hospitals with hierarchical capabilities\r\n\r\nconst COMPREHENSIVE_HOSPITAL_DATABASE = {\r\n  bayern: {\r\n    neurosurgicalCenters: [\r\n      {\r\n        id: 'BY-NS-001',\r\n        name: 'LMU Klinikum München - Großhadern',\r\n        address: 'Marchioninistraße 15, 81377 München',\r\n        coordinates: { lat: 48.1106, lng: 11.4684 },\r\n        phone: '+49 89 4400-0',\r\n        emergency: '+49 89 4400-73331',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 1440,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-NS-002',\r\n        name: 'Klinikum rechts der Isar München (TUM)',\r\n        address: 'Ismaninger Str. 22, 81675 München',\r\n        coordinates: { lat: 48.1497, lng: 11.6052 },\r\n        phone: '+49 89 4140-0',\r\n        emergency: '+49 89 4140-2249',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 1161,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-NS-003',\r\n        name: 'Städtisches Klinikum München Schwabing',\r\n        address: 'Kölner Platz 1, 80804 München',\r\n        coordinates: { lat: 48.1732, lng: 11.5755 },\r\n        phone: '+49 89 3068-0',\r\n        emergency: '+49 89 3068-2050',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 648,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-NS-004',\r\n        name: 'Städtisches Klinikum München Bogenhausen',\r\n        address: 'Englschalkinger Str. 77, 81925 München',\r\n        coordinates: { lat: 48.1614, lng: 11.6254 },\r\n        phone: '+49 89 9270-0',\r\n        emergency: '+49 89 9270-2050',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 689,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-NS-005',\r\n        name: 'Universitätsklinikum Erlangen',\r\n        address: 'Maximiliansplatz 2, 91054 Erlangen',\r\n        coordinates: { lat: 49.5982, lng: 11.0037 },\r\n        phone: '+49 9131 85-0',\r\n        emergency: '+49 9131 85-39003',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 1371,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-NS-006',\r\n        name: 'Universitätsklinikum Regensburg',\r\n        address: 'Franz-Josef-Strauß-Allee 11, 93053 Regensburg',\r\n        coordinates: { lat: 49.0134, lng: 12.0991 },\r\n        phone: '+49 941 944-0',\r\n        emergency: '+49 941 944-7501',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 1042,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-NS-007',\r\n        name: 'Universitätsklinikum Würzburg',\r\n        address: 'Oberdürrbacher Str. 6, 97080 Würzburg',\r\n        coordinates: { lat: 49.7840, lng: 9.9721 },\r\n        phone: '+49 931 201-0',\r\n        emergency: '+49 931 201-24444',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 1264,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-NS-008',\r\n        name: 'Klinikum Nürnberg Nord',\r\n        address: 'Prof.-Ernst-Nathan-Str. 1, 90419 Nürnberg',\r\n        coordinates: { lat: 49.4521, lng: 11.0767 },\r\n        phone: '+49 911 398-0',\r\n        emergency: '+49 911 398-2369',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 1368,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-NS-009',\r\n        name: 'Universitätsklinikum Augsburg',\r\n        address: 'Stenglinstr. 2, 86156 Augsburg',\r\n        coordinates: { lat: 48.3668, lng: 10.9093 },\r\n        phone: '+49 821 400-01',\r\n        emergency: '+49 821 400-2356',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 1740,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-NS-010',\r\n        name: 'Klinikum Aschaffenburg-Alzenau',\r\n        address: 'Am Hasenkopf 1, 63739 Aschaffenburg',\r\n        coordinates: { lat: 49.9737, lng: 9.1570 },\r\n        phone: '+49 6021 32-0',\r\n        emergency: '+49 6021 32-2800',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 40,\r\n        network: 'TRANSIT',\r\n      },\r\n      {\r\n        id: 'BY-NS-011',\r\n        name: 'Klinikum Landshut',\r\n        address: 'Robert-Koch-Str. 1, 84034 Landshut',\r\n        coordinates: { lat: 48.5665, lng: 12.1512 },\r\n        phone: '+49 871 698-0',\r\n        emergency: '+49 871 698-3333',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 505,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-NS-012',\r\n        name: 'Klinikum Coburg',\r\n        address: 'Ketschendorfer Str. 33, 96450 Coburg',\r\n        coordinates: { lat: 50.2596, lng: 10.9644 },\r\n        phone: '+49 9561 22-0',\r\n        emergency: '+49 9561 22-6800',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 547,\r\n        network: 'STENO',\r\n      },\r\n      {\r\n        id: 'BY-NS-013',\r\n        name: 'Klinikum Passau',\r\n        address: 'Bischof-Pilgrim-Str. 1, 94032 Passau',\r\n        coordinates: { lat: 48.5665, lng: 13.4777 },\r\n        phone: '+49 851 5300-0',\r\n        emergency: '+49 851 5300-2222',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 696,\r\n        network: 'TEMPiS',\r\n      },\r\n    ],\r\n\r\n    comprehensiveStrokeCenters: [\r\n      {\r\n        id: 'BY-CS-001',\r\n        name: 'Klinikum Bamberg',\r\n        address: 'Buger Str. 80, 96049 Bamberg',\r\n        coordinates: { lat: 49.8988, lng: 10.9027 },\r\n        phone: '+49 951 503-0',\r\n        emergency: '+49 951 503-11101',\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 630,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-CS-002',\r\n        name: 'Klinikum Bayreuth',\r\n        address: 'Preuschwitzer Str. 101, 95445 Bayreuth',\r\n        coordinates: { lat: 49.9459, lng: 11.5779 },\r\n        phone: '+49 921 400-0',\r\n        emergency: '+49 921 400-5401',\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 848,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-CS-003',\r\n        name: 'Klinikum Coburg',\r\n        address: 'Ketschendorfer Str. 33, 96450 Coburg',\r\n        coordinates: { lat: 50.2596, lng: 10.9685 },\r\n        phone: '+49 9561 22-0',\r\n        emergency: '+49 9561 22-6300',\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 522,\r\n        network: 'TEMPiS',\r\n      },\r\n    ],\r\n\r\n    regionalStrokeUnits: [\r\n      {\r\n        id: 'BY-RSU-001',\r\n        name: 'Goldberg-Klinik Kelheim',\r\n        address: 'Traubenweg 3, 93309 Kelheim',\r\n        coordinates: { lat: 48.9166, lng: 11.8742 },\r\n        phone: '+49 9441 702-0',\r\n        emergency: '+49 9441 702-6800',\r\n        thrombolysis: true,\r\n        beds: 200,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-RSU-002',\r\n        name: 'DONAUISAR Klinikum Deggendorf',\r\n        address: 'Perlasberger Str. 41, 94469 Deggendorf',\r\n        coordinates: { lat: 48.8372, lng: 12.9619 },\r\n        phone: '+49 991 380-0',\r\n        emergency: '+49 991 380-2201',\r\n        thrombolysis: true,\r\n        beds: 450,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-RSU-003',\r\n        name: 'Klinikum St. Elisabeth Straubing',\r\n        address: 'St.-Elisabeth-Str. 23, 94315 Straubing',\r\n        coordinates: { lat: 48.8742, lng: 12.5733 },\r\n        phone: '+49 9421 710-0',\r\n        emergency: '+49 9421 710-2000',\r\n        thrombolysis: true,\r\n        beds: 580,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-RSU-004',\r\n        name: 'Klinikum Freising',\r\n        address: 'Mainburger Str. 29, 85356 Freising',\r\n        coordinates: { lat: 48.4142, lng: 11.7461 },\r\n        phone: '+49 8161 24-0',\r\n        emergency: '+49 8161 24-2800',\r\n        thrombolysis: true,\r\n        beds: 380,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-RSU-005',\r\n        name: 'Klinikum Landkreis Erding',\r\n        address: 'Bajuwarenstr. 5, 85435 Erding',\r\n        coordinates: { lat: 48.3061, lng: 11.9067 },\r\n        phone: '+49 8122 59-0',\r\n        emergency: '+49 8122 59-2201',\r\n        thrombolysis: true,\r\n        beds: 350,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-RSU-006',\r\n        name: 'Helios Amper-Klinikum Dachau',\r\n        address: 'Krankenhausstr. 15, 85221 Dachau',\r\n        coordinates: { lat: 48.2599, lng: 11.4342 },\r\n        phone: '+49 8131 76-0',\r\n        emergency: '+49 8131 76-2201',\r\n        thrombolysis: true,\r\n        beds: 480,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-RSU-007',\r\n        name: 'Klinikum Fürstenfeldbruck',\r\n        address: 'Dachauer Str. 33, 82256 Fürstenfeldbruck',\r\n        coordinates: { lat: 48.1772, lng: 11.2578 },\r\n        phone: '+49 8141 99-0',\r\n        emergency: '+49 8141 99-2201',\r\n        thrombolysis: true,\r\n        beds: 420,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-RSU-008',\r\n        name: 'Klinikum Ingolstadt',\r\n        address: 'Krumenauerstraße 25, 85049 Ingolstadt',\r\n        coordinates: { lat: 48.7665, lng: 11.4364 },\r\n        phone: '+49 841 880-0',\r\n        emergency: '+49 841 880-2201',\r\n        thrombolysis: true,\r\n        beds: 665,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-RSU-009',\r\n        name: 'Klinikum Passau',\r\n        address: 'Bischof-Pilgrim-Str. 1, 94032 Passau',\r\n        coordinates: { lat: 48.5665, lng: 13.4513 },\r\n        phone: '+49 851 5300-0',\r\n        emergency: '+49 851 5300-2100',\r\n        thrombolysis: true,\r\n        beds: 540,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-RSU-010',\r\n        name: 'Klinikum Landshut',\r\n        address: 'Robert-Koch-Str. 1, 84034 Landshut',\r\n        coordinates: { lat: 48.5436, lng: 12.1619 },\r\n        phone: '+49 871 698-0',\r\n        emergency: '+49 871 698-3333',\r\n        thrombolysis: true,\r\n        beds: 790,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-RSU-011',\r\n        name: 'RoMed Klinikum Rosenheim',\r\n        address: 'Pettenkoferstr. 10, 83022 Rosenheim',\r\n        coordinates: { lat: 47.8567, lng: 12.1265 },\r\n        phone: '+49 8031 365-0',\r\n        emergency: '+49 8031 365-3711',\r\n        thrombolysis: true,\r\n        beds: 870,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-RSU-012',\r\n        name: 'Klinikum Memmingen',\r\n        address: 'Bismarckstr. 23, 87700 Memmingen',\r\n        coordinates: { lat: 47.9833, lng: 10.1833 },\r\n        phone: '+49 8331 70-0',\r\n        emergency: '+49 8331 70-2500',\r\n        thrombolysis: true,\r\n        beds: 520,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-RSU-013',\r\n        name: 'Klinikum Kempten-Oberallgäu',\r\n        address: 'Robert-Weixler-Str. 50, 87439 Kempten',\r\n        coordinates: { lat: 47.7261, lng: 10.3097 },\r\n        phone: '+49 831 530-0',\r\n        emergency: '+49 831 530-2201',\r\n        thrombolysis: true,\r\n        beds: 650,\r\n        network: 'TEMPiS',\r\n      },\r\n      {\r\n        id: 'BY-RSU-014',\r\n        name: 'Klinikum Aschaffenburg-Alzenau',\r\n        address: 'Am Hasenkopf 1, 63739 Aschaffenburg',\r\n        coordinates: { lat: 49.9747, lng: 9.1581 },\r\n        phone: '+49 6021 32-0',\r\n        emergency: '+49 6021 32-2700',\r\n        thrombolysis: true,\r\n        beds: 590,\r\n        network: 'TEMPiS',\r\n      },\r\n    ],\r\n\r\n    thrombolysisHospitals: [\r\n      // Add more smaller hospitals with thrombolysis capability\r\n      {\r\n        id: 'BY-TH-001',\r\n        name: 'Krankenhaus Vilsbiburg',\r\n        address: 'Sonnenstraße 10, 84137 Vilsbiburg',\r\n        coordinates: { lat: 48.6333, lng: 12.2833 },\r\n        phone: '+49 8741 60-0',\r\n        thrombolysis: true,\r\n        beds: 180,\r\n      },\r\n      {\r\n        id: 'BY-TH-002',\r\n        name: 'Krankenhaus Eggenfelden',\r\n        address: 'Pfarrkirchener Str. 5, 84307 Eggenfelden',\r\n        coordinates: { lat: 48.4000, lng: 12.7667 },\r\n        phone: '+49 8721 98-0',\r\n        thrombolysis: true,\r\n        beds: 220,\r\n      },\r\n      // ... more hospitals would be added here\r\n    ],\r\n  },\r\n\r\n  badenWuerttemberg: {\r\n    neurosurgicalCenters: [\r\n      {\r\n        id: 'BW-NS-001',\r\n        name: 'Universitätsklinikum Freiburg',\r\n        address: 'Hugstetter Str. 55, 79106 Freiburg',\r\n        coordinates: { lat: 48.0025, lng: 7.8347 },\r\n        phone: '+49 761 270-0',\r\n        emergency: '+49 761 270-34010',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 1600,\r\n        network: 'FAST',\r\n      },\r\n      {\r\n        id: 'BW-NS-002',\r\n        name: 'Universitätsklinikum Heidelberg',\r\n        address: 'Im Neuenheimer Feld 400, 69120 Heidelberg',\r\n        coordinates: { lat: 49.4178, lng: 8.6706 },\r\n        phone: '+49 6221 56-0',\r\n        emergency: '+49 6221 56-36643',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 1621,\r\n        network: 'FAST',\r\n      },\r\n      {\r\n        id: 'BW-NS-003',\r\n        name: 'Universitätsklinikum Tübingen',\r\n        address: 'Geissweg 3, 72076 Tübingen',\r\n        coordinates: { lat: 48.5378, lng: 9.0538 },\r\n        phone: '+49 7071 29-0',\r\n        emergency: '+49 7071 29-82211',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 1550,\r\n        network: 'FAST',\r\n      },\r\n      {\r\n        id: 'BW-NS-004',\r\n        name: 'Universitätsklinikum Ulm',\r\n        address: 'Albert-Einstein-Allee 23, 89081 Ulm',\r\n        coordinates: { lat: 48.4196, lng: 9.9592 },\r\n        phone: '+49 731 500-0',\r\n        emergency: '+49 731 500-63001',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 1264,\r\n        network: 'FAST',\r\n      },\r\n      {\r\n        id: 'BW-NS-005',\r\n        name: 'Klinikum Stuttgart - Katharinenhospital',\r\n        address: 'Kriegsbergstraße 60, 70174 Stuttgart',\r\n        coordinates: { lat: 48.7784, lng: 9.1682 },\r\n        phone: '+49 711 278-0',\r\n        emergency: '+49 711 278-32001',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 950,\r\n        network: 'FAST',\r\n      },\r\n      {\r\n        id: 'BW-NS-006',\r\n        name: 'Städtisches Klinikum Karlsruhe',\r\n        address: 'Moltkestraße 90, 76133 Karlsruhe',\r\n        coordinates: { lat: 49.0047, lng: 8.3858 },\r\n        phone: '+49 721 974-0',\r\n        emergency: '+49 721 974-2301',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 1570,\r\n        network: 'FAST',\r\n      },\r\n      {\r\n        id: 'BW-NS-007',\r\n        name: 'Klinikum Ludwigsburg',\r\n        address: 'Posilipostraße 4, 71640 Ludwigsburg',\r\n        coordinates: { lat: 48.8901, lng: 9.1953 },\r\n        phone: '+49 7141 99-0',\r\n        emergency: '+49 7141 99-67201',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 720,\r\n        network: 'FAST',\r\n      },\r\n    ],\r\n\r\n    comprehensiveStrokeCenters: [\r\n      {\r\n        id: 'BW-CS-001',\r\n        name: 'Universitätsmedizin Mannheim',\r\n        address: 'Theodor-Kutzer-Ufer 1-3, 68167 Mannheim',\r\n        coordinates: { lat: 49.4828, lng: 8.4664 },\r\n        phone: '+49 621 383-0',\r\n        emergency: '+49 621 383-2251',\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 1400,\r\n        network: 'FAST',\r\n      },\r\n    ],\r\n\r\n    regionalStrokeUnits: [\r\n      // Regional stroke units in Baden-Württemberg\r\n      {\r\n        id: 'BW-RSU-001',\r\n        name: 'Robert-Bosch-Krankenhaus Stuttgart',\r\n        address: 'Auerbachstraße 110, 70376 Stuttgart',\r\n        coordinates: { lat: 48.7447, lng: 9.2294 },\r\n        phone: '+49 711 8101-0',\r\n        emergency: '+49 711 8101-3456',\r\n        thrombolysis: true,\r\n        beds: 850,\r\n        network: 'FAST',\r\n      },\r\n      // ... more would be added\r\n    ],\r\n\r\n    thrombolysisHospitals: [\r\n      // Smaller hospitals with thrombolysis capability\r\n      // ... would be populated from your database\r\n    ],\r\n  },\r\n\r\n  nordrheinWestfalen: {\r\n    neurosurgicalCenters: [\r\n      {\r\n        id: 'NRW-NS-001',\r\n        name: 'Universitätsklinikum Düsseldorf',\r\n        address: 'Moorenstraße 5, 40225 Düsseldorf',\r\n        coordinates: { lat: 51.1906, lng: 6.8064 },\r\n        phone: '+49 211 81-0',\r\n        emergency: '+49 211 81-17700',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 1300,\r\n        network: 'NEVANO+',\r\n      },\r\n      {\r\n        id: 'NRW-NS-002',\r\n        name: 'Universitätsklinikum Köln',\r\n        address: 'Kerpener Str. 62, 50937 Köln',\r\n        coordinates: { lat: 50.9253, lng: 6.9187 },\r\n        phone: '+49 221 478-0',\r\n        emergency: '+49 221 478-32500',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 1500,\r\n        network: 'NEVANO+',\r\n      },\r\n      {\r\n        id: 'NRW-NS-003',\r\n        name: 'Universitätsklinikum Essen',\r\n        address: 'Hufelandstraße 55, 45147 Essen',\r\n        coordinates: { lat: 51.4285, lng: 7.0073 },\r\n        phone: '+49 201 723-0',\r\n        emergency: '+49 201 723-84444',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 1350,\r\n        network: 'NEVANO+',\r\n      },\r\n      {\r\n        id: 'NRW-NS-004',\r\n        name: 'Universitätsklinikum Münster',\r\n        address: 'Albert-Schweitzer-Campus 1, 48149 Münster',\r\n        coordinates: { lat: 51.9607, lng: 7.6261 },\r\n        phone: '+49 251 83-0',\r\n        emergency: '+49 251 83-47255',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 1513,\r\n        network: 'NEVANO+',\r\n      },\r\n      {\r\n        id: 'NRW-NS-005',\r\n        name: 'Universitätsklinikum Bonn',\r\n        address: 'Venusberg-Campus 1, 53127 Bonn',\r\n        coordinates: { lat: 50.6916, lng: 7.1127 },\r\n        phone: '+49 228 287-0',\r\n        emergency: '+49 228 287-15107',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 1200,\r\n        network: 'NEVANO+',\r\n      },\r\n      {\r\n        id: 'NRW-NS-006',\r\n        name: 'Klinikum Dortmund',\r\n        address: 'Beurhausstraße 40, 44137 Dortmund',\r\n        coordinates: { lat: 51.5036, lng: 7.4663 },\r\n        phone: '+49 231 953-0',\r\n        emergency: '+49 231 953-20050',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 1200,\r\n        network: 'NVNR',\r\n      },\r\n      {\r\n        id: 'NRW-NS-007',\r\n        name: 'Rhein-Maas Klinikum Würselen',\r\n        address: 'Mauerfeldstraße 25, 52146 Würselen',\r\n        coordinates: { lat: 50.8178, lng: 6.1264 },\r\n        phone: '+49 2405 62-0',\r\n        emergency: '+49 2405 62-2222',\r\n        neurosurgery: true,\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 420,\r\n        network: 'NEVANO+',\r\n      },\r\n    ],\r\n\r\n    comprehensiveStrokeCenters: [\r\n      {\r\n        id: 'NRW-CS-001',\r\n        name: 'Universitätsklinikum Aachen',\r\n        address: 'Pauwelsstraße 30, 52074 Aachen',\r\n        coordinates: { lat: 50.7780, lng: 6.0614 },\r\n        phone: '+49 241 80-0',\r\n        emergency: '+49 241 80-89611',\r\n        thrombectomy: true,\r\n        thrombolysis: true,\r\n        beds: 1400,\r\n        network: 'NEVANO+',\r\n      },\r\n    ],\r\n\r\n    regionalStrokeUnits: [\r\n      // Regional stroke units in NRW\r\n      {\r\n        id: 'NRW-RSU-001',\r\n        name: 'Helios Universitätsklinikum Wuppertal',\r\n        address: 'Heusnerstraße 40, 42283 Wuppertal',\r\n        coordinates: { lat: 51.2467, lng: 7.1703 },\r\n        phone: '+49 202 896-0',\r\n        emergency: '+49 202 896-2180',\r\n        thrombolysis: true,\r\n        beds: 1050,\r\n        network: 'NEVANO+',\r\n      },\r\n      // ... more would be added\r\n    ],\r\n\r\n    thrombolysisHospitals: [\r\n      {\r\n        id: 'NRW-TH-009',\r\n        name: 'Elisabeth-Krankenhaus Essen',\r\n        address: 'Klara-Kopp-Weg 1, 45138 Essen',\r\n        coordinates: { lat: 51.4495, lng: 7.0137 },\r\n        phone: '+49 201 897-0',\r\n        thrombolysis: true,\r\n        beds: 583,\r\n      },\r\n      {\r\n        id: 'NRW-TH-010',\r\n        name: 'Klinikum Oberberg Gummersbach',\r\n        address: 'Wilhelm-Breckow-Allee 20, 51643 Gummersbach',\r\n        coordinates: { lat: 51.0277, lng: 7.5694 },\r\n        phone: '+49 2261 17-0',\r\n        thrombolysis: true,\r\n        beds: 431,\r\n      },\r\n      {\r\n        id: 'NRW-TH-011',\r\n        name: 'St. Vincenz-Krankenhaus Limburg',\r\n        address: 'Auf dem Schafsberg, 65549 Limburg',\r\n        coordinates: { lat: 50.3856, lng: 8.0584 },\r\n        phone: '+49 6431 292-0',\r\n        thrombolysis: true,\r\n        beds: 452,\r\n      },\r\n      {\r\n        id: 'NRW-TH-012',\r\n        name: 'Klinikum Lüdenscheid',\r\n        address: 'Paulmannshöher Straße 14, 58515 Lüdenscheid',\r\n        coordinates: { lat: 51.2186, lng: 7.6298 },\r\n        phone: '+49 2351 46-0',\r\n        thrombolysis: true,\r\n        beds: 869,\r\n      },\r\n      // ... more hospitals from your database\r\n    ],\r\n  },\r\n};\r\n\r\n// ==========================================\r\n// ENHANCED ROUTING ALGORITHM\r\n// ==========================================\r\n\r\nconst ROUTING_ALGORITHM = {\r\n\r\n  // Main routing function with enhanced ICH probability thresholds\r\n  routePatient(patientData) {\r\n    const {\r\n      location,\r\n      state,\r\n      ichProbability,\r\n      timeFromOnset,\r\n      clinicalFactors,\r\n    } = patientData;\r\n\r\n    // Auto-detect state if not provided\r\n    const detectedState = state || this.detectState(location);\r\n    const database = COMPREHENSIVE_HOSPITAL_DATABASE[detectedState];\r\n\r\n    // Enhanced decision tree based on ICH probability\r\n    if (ichProbability >= 0.50) {\r\n      // HIGH ICH RISK - Direct to neurosurgery\r\n      const destination = this.findNearest(location, database.neurosurgicalCenters);\r\n      if (!destination) {\r\n        throw new Error(`No neurosurgical centers available in ${detectedState}`);\r\n      }\r\n\r\n      return {\r\n        category: 'NEUROSURGICAL_CENTER',\r\n        destination,\r\n        urgency: 'IMMEDIATE',\r\n        reasoning: 'High bleeding probability (≥50%) - neurosurgical evaluation required',\r\n        preAlert: 'Activate neurosurgery team',\r\n        bypassLocal: true,\r\n        threshold: '≥50%',\r\n        state: detectedState,\r\n      };\r\n    }\r\n\r\n    if (ichProbability >= 0.30) {\r\n      // INTERMEDIATE ICH RISK - Comprehensive center preferred\r\n      const comprehensiveOptions = [\r\n        ...database.neurosurgicalCenters,\r\n        ...database.comprehensiveStrokeCenters,\r\n      ];\r\n\r\n      return {\r\n        category: 'COMPREHENSIVE_CENTER',\r\n        destination: this.findNearest(location, comprehensiveOptions),\r\n        urgency: 'URGENT',\r\n        reasoning: 'Intermediate bleeding risk (30-50%) - CT and possible intervention',\r\n        preAlert: 'Prepare for possible neurosurgical consultation',\r\n        transferPlan: this.findNearest(location, database.neurosurgicalCenters),\r\n        threshold: '30-50%',\r\n        state: detectedState,\r\n      };\r\n    }\r\n\r\n    if (timeFromOnset && timeFromOnset <= 270) { // Within 4.5 hour window\r\n      // LOW ICH RISK, WITHIN tPA WINDOW - Any thrombolysis center\r\n      const allThrombolysisCapable = [\r\n        ...database.neurosurgicalCenters,\r\n        ...database.comprehensiveStrokeCenters,\r\n        ...database.regionalStrokeUnits,\r\n        ...database.thrombolysisHospitals,\r\n      ];\r\n\r\n      return {\r\n        category: 'THROMBOLYSIS_CAPABLE',\r\n        destination: this.findNearest(location, allThrombolysisCapable),\r\n        urgency: 'TIME_CRITICAL',\r\n        reasoning: 'Low bleeding risk (<30%), within tPA window - nearest thrombolysis',\r\n        preAlert: 'Prepare for thrombolysis protocol',\r\n        bypassLocal: false,\r\n        threshold: '<30%',\r\n        timeWindow: '≤4.5h',\r\n        state: detectedState,\r\n      };\r\n    }\r\n\r\n    // LOW ICH RISK, OUTSIDE tPA WINDOW OR NO TIME - Regional stroke unit adequate\r\n    const strokeUnitsAndHigher = [\r\n      ...database.neurosurgicalCenters,\r\n      ...database.comprehensiveStrokeCenters,\r\n      ...database.regionalStrokeUnits,\r\n    ];\r\n\r\n    return {\r\n      category: 'STROKE_UNIT',\r\n      destination: this.findNearest(location, strokeUnitsAndHigher),\r\n      urgency: 'STANDARD',\r\n      reasoning: timeFromOnset > 270\r\n        ? 'Low bleeding risk, outside tPA window - standard stroke evaluation'\r\n        : 'Low bleeding risk - standard stroke evaluation',\r\n      preAlert: 'Standard stroke protocol',\r\n      bypassLocal: false,\r\n      threshold: '<30%',\r\n      timeWindow: timeFromOnset ? '>4.5h' : 'unknown',\r\n      state: detectedState,\r\n    };\r\n  },\r\n\r\n  // Auto-detect state based on coordinates (more precise boundaries)\r\n  detectState(location) {\r\n    // Baden-Württemberg: check first for western regions\r\n    if (location.lat >= 47.5 && location.lat <= 49.8\r\n        && location.lng >= 7.5 && location.lng <= 10.2) {\r\n      return 'badenWuerttemberg';\r\n    }\r\n\r\n    // NRW: northern regions\r\n    if (location.lat >= 50.3 && location.lat <= 52.5\r\n        && location.lng >= 5.9 && location.lng <= 9.5) {\r\n      return 'nordrheinWestfalen';\r\n    }\r\n\r\n    // Bayern: eastern regions (more restrictive western bound to avoid overlap)\r\n    if (location.lat >= 47.2 && location.lat <= 50.6\r\n        && location.lng >= 10.2 && location.lng <= 13.8) {\r\n      return 'bayern';\r\n    }\r\n\r\n    // Overlap region - use nearest state center\r\n    return this.findNearestState(location);\r\n  },\r\n\r\n  // Find nearest state for edge cases\r\n  findNearestState(location) {\r\n    const stateCenters = {\r\n      bayern: { lat: 49.0, lng: 11.5 },\r\n      badenWuerttemberg: { lat: 48.5, lng: 9.0 },\r\n      nordrheinWestfalen: { lat: 51.5, lng: 7.5 },\r\n    };\r\n\r\n    let nearestState = 'bayern';\r\n    let minDistance = Infinity;\r\n\r\n    for (const [state, center] of Object.entries(stateCenters)) {\r\n      const distance = this.calculateDistance(location, center);\r\n      if (distance < minDistance) {\r\n        minDistance = distance;\r\n        nearestState = state;\r\n      }\r\n    }\r\n\r\n    return nearestState;\r\n  },\r\n\r\n  // Helper function to find nearest hospital\r\n  findNearest(userLocation, hospitals) {\r\n    if (!hospitals || hospitals.length === 0) {\r\n      // ('No hospitals available in database');\r\n      return null;\r\n    }\r\n\r\n    return hospitals\r\n      .map((hospital) => {\r\n        // Validate hospital has coordinates\r\n        if (!hospital.coordinates || typeof hospital.coordinates.lat !== 'number') {\r\n          // (`Hospital ${hospital.name} missing valid coordinates`);\r\n          return null;\r\n        }\r\n\r\n        return {\r\n          ...hospital,\r\n          distance: this.calculateDistance(userLocation, hospital.coordinates),\r\n        };\r\n      })\r\n      .filter((hospital) => hospital !== null) // Remove invalid hospitals\r\n      .sort((a, b) => a.distance - b.distance)[0];\r\n  },\r\n\r\n  // Calculate distance between two GPS points\r\n  calculateDistance(point1, point2) {\r\n    const R = 6371; // Earth radius in km\r\n    const dLat = this.toRad(point2.lat - point1.lat);\r\n    const dLng = this.toRad(point2.lng - point1.lng);\r\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2)\r\n      + Math.cos(this.toRad(point1.lat)) * Math.cos(this.toRad(point2.lat))\r\n      * Math.sin(dLng / 2) * Math.sin(dLng / 2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    return R * c;\r\n  },\r\n\r\n  toRad(deg) {\r\n    return deg * (Math.PI / 180);\r\n  },\r\n};\r\n\r\nexport { COMPREHENSIVE_HOSPITAL_DATABASE, ROUTING_ALGORITHM };\r\n","// Stroke centers in Bayern (Bavaria), Germany\r\n// Data includes comprehensive stroke centers and stroke units with neurosurgical capabilities\r\n\r\nexport const strokeCenters = [\r\n  // Major comprehensive stroke centers in München\r\n  {\r\n    id: 'klinikum-grosshadern-muenchen',\r\n    name: 'LMU Klinikum München - Großhadern',\r\n    type: 'comprehensive',\r\n    address: 'Marchioninistraße 15, 81377 München',\r\n    coordinates: {\r\n      lat: 48.1106,\r\n      lng: 11.4684,\r\n    },\r\n    phone: '+49 89 4400-0',\r\n    emergency: '+49 89 4400-73331',\r\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\r\n    certified: true,\r\n    certification: 'DSG/DGN',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n  {\r\n    id: 'klinikum-rechts-der-isar-muenchen',\r\n    name: 'Klinikum rechts der Isar München (TUM)',\r\n    type: 'comprehensive',\r\n    address: 'Ismaninger Str. 22, 81675 München',\r\n    coordinates: {\r\n      lat: 48.1497,\r\n      lng: 11.6052,\r\n    },\r\n    phone: '+49 89 4140-0',\r\n    emergency: '+49 89 4140-2249',\r\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\r\n    certified: true,\r\n    certification: 'DSG/DGN',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n  {\r\n    id: 'klinikum-schwabing-muenchen',\r\n    name: 'Städtisches Klinikum München Schwabing',\r\n    type: 'comprehensive',\r\n    address: 'Kölner Platz 1, 80804 München',\r\n    coordinates: {\r\n      lat: 48.1732,\r\n      lng: 11.5755,\r\n    },\r\n    phone: '+49 89 3068-0',\r\n    emergency: '+49 89 3068-2050',\r\n    services: ['thrombectomy', 'neurosurgery', 'icu'],\r\n    certified: true,\r\n    certification: 'DSG/DGN',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n  {\r\n    id: 'klinikum-bogenhausen-muenchen',\r\n    name: 'Städtisches Klinikum München Bogenhausen',\r\n    type: 'comprehensive',\r\n    address: 'Englschalkinger Str. 77, 81925 München',\r\n    coordinates: {\r\n      lat: 48.1614,\r\n      lng: 11.6254,\r\n    },\r\n    phone: '+49 89 9270-0',\r\n    emergency: '+49 89 9270-2050',\r\n    services: ['thrombectomy', 'neurosurgery', 'icu'],\r\n    certified: true,\r\n    certification: 'DSG/DGN',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n\r\n  // Major centers in other Bayern cities\r\n  {\r\n    id: 'uniklinikum-erlangen',\r\n    name: 'Universitätsklinikum Erlangen',\r\n    type: 'comprehensive',\r\n    address: 'Maximiliansplatz 2, 91054 Erlangen',\r\n    coordinates: {\r\n      lat: 49.5982,\r\n      lng: 11.0037,\r\n    },\r\n    phone: '+49 9131 85-0',\r\n    emergency: '+49 9131 85-39003',\r\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\r\n    certified: true,\r\n    certification: 'DSG/DGN',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n  {\r\n    id: 'uniklinikum-regensburg',\r\n    name: 'Universitätsklinikum Regensburg',\r\n    type: 'comprehensive',\r\n    address: 'Franz-Josef-Strauß-Allee 11, 93053 Regensburg',\r\n    coordinates: {\r\n      lat: 49.0134,\r\n      lng: 12.0991,\r\n    },\r\n    phone: '+49 941 944-0',\r\n    emergency: '+49 941 944-7501',\r\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\r\n    certified: true,\r\n    certification: 'DSG/DGN',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n  {\r\n    id: 'uniklinikum-wuerzburg',\r\n    name: 'Universitätsklinikum Würzburg',\r\n    type: 'comprehensive',\r\n    address: 'Oberdürrbacher Str. 6, 97080 Würzburg',\r\n    coordinates: {\r\n      lat: 49.7840,\r\n      lng: 9.9721,\r\n    },\r\n    phone: '+49 931 201-0',\r\n    emergency: '+49 931 201-24444',\r\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\r\n    certified: true,\r\n    certification: 'DSG/DGN',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n  {\r\n    id: 'klinikum-nuernberg',\r\n    name: 'Klinikum Nürnberg Nord',\r\n    type: 'comprehensive',\r\n    address: 'Prof.-Ernst-Nathan-Str. 1, 90419 Nürnberg',\r\n    coordinates: {\r\n      lat: 49.4521,\r\n      lng: 11.0767,\r\n    },\r\n    phone: '+49 911 398-0',\r\n    emergency: '+49 911 398-2369',\r\n    services: ['thrombectomy', 'neurosurgery', 'icu'],\r\n    certified: true,\r\n    certification: 'DSG/DGN',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n  {\r\n    id: 'klinikum-augsburg',\r\n    name: 'Universitätsklinikum Augsburg',\r\n    type: 'comprehensive',\r\n    address: 'Stenglinstr. 2, 86156 Augsburg',\r\n    coordinates: {\r\n      lat: 48.3668,\r\n      lng: 10.9093,\r\n    },\r\n    phone: '+49 821 400-01',\r\n    emergency: '+49 821 400-2356',\r\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\r\n    certified: true,\r\n    certification: 'DSG/DGN',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n\r\n  // Primary stroke centers\r\n  {\r\n    id: 'klinikum-ingolstadt',\r\n    name: 'Klinikum Ingolstadt',\r\n    type: 'primary',\r\n    address: 'Krumenauerstraße 25, 85049 Ingolstadt',\r\n    coordinates: {\r\n      lat: 48.7665,\r\n      lng: 11.4364,\r\n    },\r\n    phone: '+49 841 880-0',\r\n    emergency: '+49 841 880-2201',\r\n    services: ['stroke_unit', 'telemedicine'],\r\n    certified: true,\r\n    certification: 'DSG',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n  {\r\n    id: 'klinikum-passau',\r\n    name: 'Klinikum Passau',\r\n    type: 'primary',\r\n    address: 'Bischof-Pilgrim-Str. 1, 94032 Passau',\r\n    coordinates: {\r\n      lat: 48.5665,\r\n      lng: 13.4513,\r\n    },\r\n    phone: '+49 851 5300-0',\r\n    emergency: '+49 851 5300-2100',\r\n    services: ['stroke_unit', 'telemedicine'],\r\n    certified: true,\r\n    certification: 'DSG',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n  {\r\n    id: 'klinikum-bamberg',\r\n    name: 'Sozialstiftung Bamberg Klinikum',\r\n    type: 'primary',\r\n    address: 'Buger Str. 80, 96049 Bamberg',\r\n    coordinates: {\r\n      lat: 49.8988,\r\n      lng: 10.9027,\r\n    },\r\n    phone: '+49 951 503-0',\r\n    emergency: '+49 951 503-11101',\r\n    services: ['stroke_unit', 'telemedicine'],\r\n    certified: true,\r\n    certification: 'DSG',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n  {\r\n    id: 'klinikum-bayreuth',\r\n    name: 'Klinikum Bayreuth',\r\n    type: 'primary',\r\n    address: 'Preuschwitzer Str. 101, 95445 Bayreuth',\r\n    coordinates: {\r\n      lat: 49.9459,\r\n      lng: 11.5779,\r\n    },\r\n    phone: '+49 921 400-0',\r\n    emergency: '+49 921 400-5401',\r\n    services: ['stroke_unit', 'telemedicine'],\r\n    certified: true,\r\n    certification: 'DSG',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n  {\r\n    id: 'klinikum-landshut',\r\n    name: 'Klinikum Landshut',\r\n    type: 'primary',\r\n    address: 'Robert-Koch-Str. 1, 84034 Landshut',\r\n    coordinates: {\r\n      lat: 48.5436,\r\n      lng: 12.1619,\r\n    },\r\n    phone: '+49 871 698-0',\r\n    emergency: '+49 871 698-3333',\r\n    services: ['stroke_unit', 'telemedicine'],\r\n    certified: true,\r\n    certification: 'DSG',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n  {\r\n    id: 'klinikum-rosenheim',\r\n    name: 'RoMed Klinikum Rosenheim',\r\n    type: 'primary',\r\n    address: 'Pettenkoferstr. 10, 83022 Rosenheim',\r\n    coordinates: {\r\n      lat: 47.8567,\r\n      lng: 12.1265,\r\n    },\r\n    phone: '+49 8031 365-0',\r\n    emergency: '+49 8031 365-3711',\r\n    services: ['stroke_unit', 'telemedicine'],\r\n    certified: true,\r\n    certification: 'DSG',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n  {\r\n    id: 'klinikum-memmingen',\r\n    name: 'Klinikum Memmingen',\r\n    type: 'primary',\r\n    address: 'Bismarckstr. 23, 87700 Memmingen',\r\n    coordinates: {\r\n      lat: 47.9833,\r\n      lng: 10.1833,\r\n    },\r\n    phone: '+49 8331 70-0',\r\n    emergency: '+49 8331 70-2500',\r\n    services: ['stroke_unit', 'telemedicine'],\r\n    certified: true,\r\n    certification: 'DSG',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n  {\r\n    id: 'klinikum-kempten',\r\n    name: 'Klinikum Kempten-Oberallgäu',\r\n    type: 'primary',\r\n    address: 'Robert-Weixler-Str. 50, 87439 Kempten',\r\n    coordinates: {\r\n      lat: 47.7261,\r\n      lng: 10.3097,\r\n    },\r\n    phone: '+49 831 530-0',\r\n    emergency: '+49 831 530-2201',\r\n    services: ['stroke_unit', 'telemedicine'],\r\n    certified: true,\r\n    certification: 'DSG',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n  {\r\n    id: 'klinikum-coburg',\r\n    name: 'Klinikum Coburg',\r\n    type: 'primary',\r\n    address: 'Ketschendorfer Str. 33, 96450 Coburg',\r\n    coordinates: {\r\n      lat: 50.2596,\r\n      lng: 10.9685,\r\n    },\r\n    phone: '+49 9561 22-0',\r\n    emergency: '+49 9561 22-6300',\r\n    services: ['stroke_unit', 'telemedicine'],\r\n    certified: true,\r\n    certification: 'DSG',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n  {\r\n    id: 'klinikum-aschaffenburg',\r\n    name: 'Klinikum Aschaffenburg-Alzenau',\r\n    type: 'primary',\r\n    address: 'Am Hasenkopf 1, 63739 Aschaffenburg',\r\n    coordinates: {\r\n      lat: 49.9747,\r\n      lng: 9.1581,\r\n    },\r\n    phone: '+49 6021 32-0',\r\n    emergency: '+49 6021 32-2700',\r\n    services: ['stroke_unit', 'telemedicine'],\r\n    certified: true,\r\n    certification: 'DSG',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n\r\n  // Additional smaller stroke units in Bayern\r\n  {\r\n    id: 'goldberg-klinik-kelheim',\r\n    name: 'Goldberg-Klinik Kelheim',\r\n    type: 'primary',\r\n    address: 'Traubenweg 3, 93309 Kelheim',\r\n    coordinates: {\r\n      lat: 48.9166,\r\n      lng: 11.8742,\r\n    },\r\n    phone: '+49 9441 702-0',\r\n    emergency: '+49 9441 702-6800',\r\n    services: ['stroke_unit', 'telemedicine'],\r\n    certified: true,\r\n    certification: 'DSG',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n  {\r\n    id: 'klinikum-deggendorf',\r\n    name: 'DONAUISAR Klinikum Deggendorf',\r\n    type: 'primary',\r\n    address: 'Perlasberger Str. 41, 94469 Deggendorf',\r\n    coordinates: {\r\n      lat: 48.8372,\r\n      lng: 12.9619,\r\n    },\r\n    phone: '+49 991 380-0',\r\n    emergency: '+49 991 380-2201',\r\n    services: ['stroke_unit', 'telemedicine'],\r\n    certified: true,\r\n    certification: 'DSG',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n  {\r\n    id: 'klinikum-straubing',\r\n    name: 'Klinikum St. Elisabeth Straubing',\r\n    type: 'primary',\r\n    address: 'St.-Elisabeth-Str. 23, 94315 Straubing',\r\n    coordinates: {\r\n      lat: 48.8742,\r\n      lng: 12.5733,\r\n    },\r\n    phone: '+49 9421 710-0',\r\n    emergency: '+49 9421 710-2000',\r\n    services: ['stroke_unit', 'telemedicine'],\r\n    certified: true,\r\n    certification: 'DSG',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n  {\r\n    id: 'klinikum-freising',\r\n    name: 'Klinikum Freising',\r\n    type: 'primary',\r\n    address: 'Mainburger Str. 29, 85356 Freising',\r\n    coordinates: {\r\n      lat: 48.4142,\r\n      lng: 11.7461,\r\n    },\r\n    phone: '+49 8161 24-0',\r\n    emergency: '+49 8161 24-2800',\r\n    services: ['stroke_unit', 'telemedicine'],\r\n    certified: true,\r\n    certification: 'DSG',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n  {\r\n    id: 'klinikum-erding',\r\n    name: 'Klinikum Landkreis Erding',\r\n    type: 'primary',\r\n    address: 'Bajuwarenstr. 5, 85435 Erding',\r\n    coordinates: {\r\n      lat: 48.3061,\r\n      lng: 11.9067,\r\n    },\r\n    phone: '+49 8122 59-0',\r\n    emergency: '+49 8122 59-2201',\r\n    services: ['stroke_unit', 'telemedicine'],\r\n    certified: true,\r\n    certification: 'DSG',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n  {\r\n    id: 'helios-dachau',\r\n    name: 'Helios Amper-Klinikum Dachau',\r\n    type: 'primary',\r\n    address: 'Krankenhausstr. 15, 85221 Dachau',\r\n    coordinates: {\r\n      lat: 48.2599,\r\n      lng: 11.4342,\r\n    },\r\n    phone: '+49 8131 76-0',\r\n    emergency: '+49 8131 76-2201',\r\n    services: ['stroke_unit', 'telemedicine'],\r\n    certified: true,\r\n    certification: 'DSG',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n  {\r\n    id: 'klinikum-fuerstenfeldbruck',\r\n    name: 'Klinikum Fürstenfeldbruck',\r\n    type: 'primary',\r\n    address: 'Dachauer Str. 33, 82256 Fürstenfeldbruck',\r\n    coordinates: {\r\n      lat: 48.1772,\r\n      lng: 11.2578,\r\n    },\r\n    phone: '+49 8141 99-0',\r\n    emergency: '+49 8141 99-2201',\r\n    services: ['stroke_unit', 'telemedicine'],\r\n    certified: true,\r\n    certification: 'DSG',\r\n    lastUpdated: '2024-08-01',\r\n  },\r\n];\r\n\r\n// Helper functions for stroke center data\r\nexport function getStrokeCentersByType(type) {\r\n  return strokeCenters.filter((center) => center.type === type);\r\n}\r\n\r\nexport function getComprehensiveStrokeCenters() {\r\n  return getStrokeCentersByType('comprehensive');\r\n}\r\n\r\nexport function getPrimaryStrokeCenters() {\r\n  return getStrokeCentersByType('primary');\r\n}\r\n\r\nexport function getStrokeCenterById(id) {\r\n  return strokeCenters.find((center) => center.id === id);\r\n}\r\n\r\n// Calculate distance between two coordinates using Haversine formula (fallback)\r\nexport function calculateDistance(lat1, lng1, lat2, lng2) {\r\n  const R = 6371; // Earth's radius in kilometers\r\n  const dLat = toRadians(lat2 - lat1);\r\n  const dLng = toRadians(lng2 - lng1);\r\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2)\r\n    + Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2))\r\n    * Math.sin(dLng / 2) * Math.sin(dLng / 2);\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n  return R * c;\r\n}\r\n\r\nfunction toRadians(degrees) {\r\n  return degrees * (Math.PI / 180);\r\n}\r\n\r\n// Calculate travel time using OpenRoute Service API\r\nexport async function calculateTravelTime(fromLat, fromLng, toLat, toLng, profile = 'driving-car') {\r\n  try {\r\n    // Using OpenRoute Service (free tier)\r\n    const url = `https://api.openrouteservice.org/v2/directions/${profile}`;\r\n    const body = {\r\n      coordinates: [[fromLng, fromLat], [toLng, toLat]],\r\n      radiuses: [1000, 1000], // Allow 1km radius for routing\r\n      format: 'json',\r\n    };\r\n\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8',\r\n        Authorization: '5b3ce3597851110001cf624868c4c27b63ae476c9c26c8bffbc35688', // Free tier key\r\n        'Content-Type': 'application/json; charset=utf-8',\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Routing API error: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n\r\n    if (data.routes && data.routes.length > 0) {\r\n      const route = data.routes[0];\r\n      return {\r\n        duration: Math.round(route.summary.duration / 60), // Convert to minutes\r\n        distance: Math.round(route.summary.distance / 1000), // Convert to km\r\n        source: 'routing',\r\n      };\r\n    }\r\n    throw new Error('No route found');\r\n  } catch (error) {\r\n    // Enhanced CORS-aware fallback to distance-based time estimation\r\n    let source = 'estimated';\r\n\r\n    // Detect CORS errors specifically\r\n    if (error.name === 'TypeError' && error.message.includes('Failed to fetch')) {\r\n      console.info('[TravelTime] OpenRouteService blocked by CORS, using distance estimation');\r\n      source = 'cors-fallback';\r\n    } else if (error.message.includes('signal')) {\r\n      console.info('[TravelTime] OpenRouteService timeout, using distance estimation');\r\n      source = 'timeout-fallback';\r\n    } else {\r\n      console.info('[TravelTime] OpenRouteService error, using distance estimation:', error.message);\r\n      source = 'error-fallback';\r\n    }\r\n\r\n    // Fallback to distance-based time estimation\r\n    const distance = calculateDistance(fromLat, fromLng, toLat, toLng);\r\n    const estimatedTime = Math.round(distance / 0.8); // Assume 48 km/h average (urban + highway)\r\n\r\n    return {\r\n      duration: estimatedTime,\r\n      distance: Math.round(distance),\r\n      source,\r\n    };\r\n  }\r\n}\r\n\r\n// Enhanced travel time calculation for emergency vehicles\r\nexport async function calculateEmergencyTravelTime(fromLat, fromLng, toLat, toLng) {\r\n  try {\r\n    // For emergency vehicles, we can use a faster profile and adjust\r\n    const result = await calculateTravelTime(fromLat, fromLng, toLat, toLng, 'driving-car');\r\n\r\n    // Reduce time by 25% for emergency vehicle (sirens, priority routing)\r\n    const emergencyDuration = Math.round(result.duration * 0.75);\r\n\r\n    return {\r\n      duration: emergencyDuration,\r\n      distance: result.distance,\r\n      source: result.source === 'routing' ? 'emergency-routing' : 'emergency-estimated',\r\n    };\r\n  } catch (error) {\r\n    // Fallback calculation\r\n    const distance = calculateDistance(fromLat, fromLng, toLat, toLng);\r\n    const emergencyTime = Math.round(distance / 1.2); // Assume 72 km/h for emergency vehicles\r\n\r\n    return {\r\n      duration: emergencyTime,\r\n      distance: Math.round(distance),\r\n      source: 'emergency-estimated',\r\n    };\r\n  }\r\n}\r\n\r\n// Find nearest stroke centers with travel time calculation\r\nexport async function findNearestStrokeCentersWithTravelTime(lat, lng, maxResults = 5, maxTime = 120, useEmergencyRouting = true) {\r\n  // ('Calculating travel times to stroke centers...');\r\n\r\n  const centersWithTravelTime = await Promise.all(\r\n    strokeCenters.map(async (center) => {\r\n      try {\r\n        const travelInfo = useEmergencyRouting\r\n          ? await calculateEmergencyTravelTime(lat, lng, center.coordinates.lat, center.coordinates.lng)\r\n          : await calculateTravelTime(lat, lng, center.coordinates.lat, center.coordinates.lng);\r\n\r\n        return {\r\n          ...center,\r\n          travelTime: travelInfo.duration,\r\n          distance: travelInfo.distance,\r\n          travelSource: travelInfo.source,\r\n        };\r\n      } catch (error) {\r\n        // (`Failed to calculate travel time to ${center.name}:`, error);\r\n        // Fallback to distance calculation\r\n        const distance = calculateDistance(lat, lng, center.coordinates.lat, center.coordinates.lng);\r\n        return {\r\n          ...center,\r\n          travelTime: Math.round(distance / 0.8), // Estimate: 48 km/h average\r\n          distance: Math.round(distance),\r\n          travelSource: 'fallback',\r\n        };\r\n      }\r\n    }),\r\n  );\r\n\r\n  return centersWithTravelTime\r\n    .filter((center) => center.travelTime <= maxTime)\r\n    .sort((a, b) => a.travelTime - b.travelTime)\r\n    .slice(0, maxResults);\r\n}\r\n\r\n// Find nearest stroke centers using distance (fallback/fast method)\r\nexport function findNearestStrokeCenters(lat, lng, maxResults = 5, maxDistance = 100) {\r\n  const centersWithDistance = strokeCenters.map((center) => ({\r\n    ...center,\r\n    distance: calculateDistance(lat, lng, center.coordinates.lat, center.coordinates.lng),\r\n  }));\r\n\r\n  return centersWithDistance\r\n    .filter((center) => center.distance <= maxDistance)\r\n    .sort((a, b) => a.distance - b.distance)\r\n    .slice(0, maxResults);\r\n}\r\n\r\n// Get stroke center recommendations with travel time (async)\r\nexport async function getRecommendedStrokeCentersWithTravelTime(lat, lng, conditionType = 'stroke') {\r\n  const nearestCenters = await findNearestStrokeCentersWithTravelTime(lat, lng, 10, 120, true);\r\n\r\n  if (conditionType === 'lvo' || conditionType === 'thrombectomy') {\r\n    // For LVO cases, prioritize comprehensive stroke centers within 60 minutes\r\n    const comprehensive = nearestCenters.filter((center) => center.type === 'comprehensive'\r\n      && center.services.includes('thrombectomy')\r\n      && center.travelTime <= 60);\r\n\r\n    const primary = nearestCenters.filter((center) => center.type === 'primary');\r\n\r\n    return {\r\n      recommended: comprehensive.slice(0, 3),\r\n      alternative: primary.slice(0, 2),\r\n    };\r\n  }\r\n\r\n  // For ICH cases, prioritize neurosurgical capabilities\r\n  if (conditionType === 'ich') {\r\n    const neurosurgical = nearestCenters.filter((center) => center.services.includes('neurosurgery')\r\n      && center.travelTime <= 45);\r\n\r\n    return {\r\n      recommended: neurosurgical.slice(0, 3),\r\n      alternative: nearestCenters.filter((c) => !neurosurgical.includes(c)).slice(0, 2),\r\n    };\r\n  }\r\n\r\n  // For general stroke cases, return nearest centers regardless of type\r\n  return {\r\n    recommended: nearestCenters.slice(0, 5),\r\n    alternative: [],\r\n  };\r\n}\r\n\r\n// Get stroke center recommendations based on patient condition (fallback - distance only)\r\nexport function getRecommendedStrokeCenters(lat, lng, conditionType = 'stroke') {\r\n  const nearestCenters = findNearestStrokeCenters(lat, lng, 10);\r\n\r\n  if (conditionType === 'lvo' || conditionType === 'thrombectomy') {\r\n    // For LVO cases, prioritize comprehensive stroke centers\r\n    const comprehensive = nearestCenters.filter((center) => center.type === 'comprehensive'\r\n      && center.services.includes('thrombectomy'));\r\n\r\n    const primary = nearestCenters.filter((center) => center.type === 'primary');\r\n\r\n    return {\r\n      recommended: comprehensive.slice(0, 3),\r\n      alternative: primary.slice(0, 2),\r\n    };\r\n  }\r\n\r\n  // For general stroke cases, return nearest centers regardless of type\r\n  return {\r\n    recommended: nearestCenters.slice(0, 5),\r\n    alternative: [],\r\n  };\r\n}\r\n","import { CRITICAL_THRESHOLDS } from '../config.js';\r\n\r\nexport function getRiskLevel(probabilityPercent, type) {\r\n  const p = Number(probabilityPercent);\r\n  const thresholds = CRITICAL_THRESHOLDS[type];\r\n\r\n  if (p >= thresholds.high) {\r\n    return '🔴 HIGH RISK';\r\n  } if (p >= thresholds.medium) {\r\n    return '🟡 MEDIUM RISK';\r\n  }\r\n  return '🟢 LOW RISK';\r\n}\r\n\r\nexport function formatTime(milliseconds) {\r\n  const seconds = Math.floor(milliseconds / 1000);\r\n  const minutes = Math.floor(seconds / 60);\r\n  const remainingSeconds = seconds % 60;\r\n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n}\r\n","import { renderProgressIndicator } from '../components/progress.js';\r\nimport { renderCriticalAlert } from '../components/alerts.js';\r\nimport { renderDriversSection } from '../components/drivers.js';\r\nimport { renderStrokeCenterMap } from '../components/stroke-center-map.js';\r\nimport { getRiskLevel } from '../../logic/formatters.js';\r\nimport { CRITICAL_THRESHOLDS } from '../../config.js';\r\nimport { t, i18n } from '../../localization/i18n.js';\r\nimport { store } from '../../state/store.js';\r\nimport {\r\n  formatSummaryLabel,\r\n  formatDisplayValue,\r\n  formatDriverName,\r\n} from '../../utils/label-formatter.js';\r\nimport {\r\n  estimateVolumeFromGFAP,\r\n  estimateMortalityFromVolume,\r\n} from '../../logic/ich-volume-calculator.js';\r\nimport {\r\n  renderCircularBrainDisplay,\r\n  initializeVolumeAnimations,\r\n} from '../components/brain-visualization.js';\r\nimport { calculateLegacyICH } from '../../research/legacy-ich-model.js';\r\nimport { safeLogResearchData, isResearchModeEnabled } from '../../research/data-logger.js';\r\nimport { renderModelComparison, renderResearchToggle } from '../../research/comparison-ui.js';\r\n\r\nfunction renderInputSummary() {\r\n  const state = store.getState();\r\n  const { formData } = state;\r\n\r\n  if (!formData || Object.keys(formData).length === 0) {\r\n    return '';\r\n  }\r\n\r\n  let summaryHtml = '';\r\n\r\n  // Iterate through each module's form data\r\n  Object.entries(formData).forEach(([module, data]) => {\r\n    if (data && Object.keys(data).length > 0) {\r\n      const moduleTitle =\r\n        t(`${module}ModuleTitle`) || module.charAt(0).toUpperCase() + module.slice(1);\r\n      let itemsHtml = '';\r\n\r\n      Object.entries(data).forEach(([key, value]) => {\r\n        // Skip empty values\r\n        if (value === '' || value === null || value === undefined) {\r\n          return;\r\n        }\r\n\r\n        // Use consistent medical terminology from input forms\r\n        const label = formatSummaryLabel(key);\r\n\r\n        // Format value with appropriate units\r\n        const displayValue = formatDisplayValue(value, key);\r\n\r\n        itemsHtml += `\r\n          <div class=\"flex justify-between items-center py-2 border-b border-gray-700\">\r\n            <span class=\"font-medium text-gray-200\">${label}:</span>\r\n            <span class=\"text-gray-300\">${displayValue}</span>\r\n          </div>\r\n        `;\r\n      });\r\n\r\n      if (itemsHtml) {\r\n        summaryHtml += `\r\n          <div class=\"bg-gray-800 rounded-lg shadow-md p-4 mb-6\">\r\n            <h4 class=\"text-lg font-semibold text-white mb-3\">${moduleTitle}</h4>\r\n            <div class=\"space-y-2\">\r\n              ${itemsHtml}\r\n            </div>\r\n          </div>\r\n        `;\r\n      }\r\n    }\r\n  });\r\n\r\n  if (!summaryHtml) {\r\n    return '';\r\n  }\r\n\r\n  return `\r\n    <div class=\"bg-gray-900 text-white rounded-lg shadow-lg p-6\">\r\n      <h3 class=\"text-xl font-semibold flex items-center gap-2 mb-2\">\r\n        📋 ${t('inputSummaryTitle')}\r\n      </h3>\r\n      <p class=\"text-gray-400 mb-4\">${t('inputSummarySubtitle')}</p>\r\n      <div class=\"space-y-6\">\r\n        ${summaryHtml}\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n\r\nfunction renderRiskCard(type, data, results) {\r\n  if (!data) {\r\n    console.log(`[RiskCard] No data for ${type}`);\r\n    return '';\r\n  }\r\n\r\n  const percent = Math.round((data.probability || 0) * 100);\r\n  console.log(`[RiskCard] ${type} - probability: ${data.probability}, percent: ${percent}%`);\r\n\r\n  const riskLevel = getRiskLevel(percent, type);\r\n  const isCritical = percent > 70; // Very high risk threshold\r\n  const isHigh = percent > CRITICAL_THRESHOLDS[type].high;\r\n\r\n  const icons = { ich: '🩸', lvo: '🧠' };\r\n  const titles = { ich: t('ichProbability'), lvo: t('lvoProbability') };\r\n\r\n  const level = isCritical ? 'critical' : isHigh ? 'high' : 'normal';\r\n  const strokeColor = level === 'critical' ? '#ff4444' : level === 'high' ? '#ff8800' : '#0066cc';\r\n\r\n  return `\r\n    <div class=\"bg-gray-800 text-white rounded-lg shadow-lg p-4 flex flex-col md:flex-row items-center gap-4 enhanced-risk-card ${type} ${level}\">\r\n      \r\n      <!-- Icon & Title -->\r\n      <div class=\"flex items-center gap-3\">\r\n        <div class=\"text-3xl\">${icons[type]}</div>\r\n        <div>\r\n          <h3 class=\"text-lg font-semibold\">${titles[type]}</h3>\r\n          <div class=\"text-sm text-gray-300\">${riskLevel}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Probability Circle -->\r\n      <div class=\"ml-auto\">\r\n        <svg viewBox=\"0 0 120 120\" class=\"w-24 h-24\">\r\n          <circle cx=\"60\" cy=\"60\" r=\"50\" fill=\"none\" stroke=\"rgba(255,255,255,0.2)\" stroke-width=\"8\"/>\r\n          <circle cx=\"60\" cy=\"60\" r=\"50\" fill=\"none\"\r\n            stroke=\"${strokeColor}\"\r\n            stroke-width=\"8\"\r\n            stroke-dasharray=\"${Math.PI * 100}\"\r\n            stroke-dashoffset=\"${Math.PI * 100 * (1 - percent / 100)}\"\r\n            stroke-linecap=\"round\"\r\n            transform=\"rotate(-90 60 60)\"/>\r\n          <text x=\"60\" y=\"60\" text-anchor=\"middle\" dominant-baseline=\"middle\"\r\n            class=\"font-bold text-white text-xl\">\r\n            ${percent}%\r\n          </text>\r\n        </svg>\r\n        <div class=\"text-center mt-2 text-sm\">${type === 'ich' ? 'ICH Risk' : 'LVO Risk'}</div>\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n\r\n/**\r\n * Render ICH volume display for integration into risk card\r\n * @param {object} data - ICH risk data containing GFAP value\r\n * @returns {string} HTML for volume display\r\n */\r\nfunction renderICHVolumeDisplay(data) {\r\n  // Get GFAP value from the data\r\n  const gfapValue = data.gfap_value || getCurrentGfapValue();\r\n\r\n  if (!gfapValue || gfapValue <= 0) {\r\n    return '';\r\n  }\r\n\r\n  // Use synchronous estimate for immediate UI rendering\r\n  const estVolume = estimateVolumeFromGFAP(gfapValue);\r\n  return `\r\n    <div class=\"volume-display-container\">\r\n      ${renderCircularBrainDisplay(estVolume)}\r\n    </div>\r\n  `;\r\n}\r\n\r\n/**\r\n * Get current GFAP value from form data\r\n * @returns {number} GFAP value or 0 if not available\r\n */\r\nfunction getCurrentGfapValue() {\r\n  const state = store.getState();\r\n  const { formData } = state;\r\n\r\n  // Check all modules for GFAP value\r\n  for (const module of ['coma', 'limited', 'full']) {\r\n    if (formData[module]?.gfap_value) {\r\n      return parseFloat(formData[module].gfap_value);\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\nexport function renderResults(results, startTime) {\r\n  try {\r\n    // Add error handling for missing results\r\n    if (!results) {\r\n      console.error('renderResults: No results data provided');\r\n      return `\r\n        <div class=\"container mx-auto px-4 py-6 max-w-md\">\r\n          <div class=\"error-message\">\r\n            <h2>No Results Available</h2>\r\n            <p>Please complete an assessment first.</p>\r\n            <button class=\"primary\" onclick=\"window.location.reload()\">Start Over</button>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n\r\n    const { ich, lvo } = results;\r\n\r\n    // Determine current module\r\n    const currentModule = getCurrentModuleName(ich);\r\n\r\n    // Calculate legacy model for research comparison (only for stroke modules)\r\n    const legacyResults = currentModule !== 'coma' ? calculateLegacyFromResults(results) : null;\r\n\r\n    // Debug logging for research mode\r\n\r\n    // Log research data if research mode is enabled (background, non-breaking)\r\n    if (legacyResults && isResearchModeEnabled(currentModule)) {\r\n      safeLogResearchData(ich, legacyResults, getPatientInputs());\r\n    }\r\n\r\n    // Detect which module was used based on the data\r\n    const isLimitedOrComa =\r\n      ich?.module === 'Limited' || ich?.module === 'Coma' || lvo?.notPossible === true;\r\n    const isFullModule = ich?.module === 'Full Stroke' || ich?.module?.includes('Full');\r\n\r\n    let resultsHtml;\r\n\r\n    // Debug logging\r\n    console.log('[Results] ICH data:', ich);\r\n    console.log('[Results] LVO data:', lvo);\r\n    console.log('[Results] ICH module:', ich?.module);\r\n    console.log('[Results] isLimitedOrComa:', isLimitedOrComa);\r\n    console.log('[Results] isFullModule:', isFullModule);\r\n\r\n    // For limited/coma modules - only show ICH\r\n    if (isLimitedOrComa) {\r\n      resultsHtml = renderICHFocusedResults(ich, results, startTime, legacyResults, currentModule);\r\n    } else {\r\n      // For full module - show ICH prominently with conditional LVO text\r\n      resultsHtml = renderFullModuleResults(\r\n        ich,\r\n        lvo,\r\n        results,\r\n        startTime,\r\n        legacyResults,\r\n        currentModule\r\n      );\r\n    }\r\n\r\n    // Initialize animations after DOM update\r\n    setTimeout(async () => {\r\n      console.log('[Results] Initializing volume animations...');\r\n      initializeVolumeAnimations();\r\n      try {\r\n        const { mountIslands } = await import('../../react/mountIslands.jsx');\r\n        mountIslands();\r\n      } catch (err) {\r\n        // ('React islands not available:', err);\r\n      }\r\n    }, 100);\r\n\r\n    return resultsHtml;\r\n  } catch (error) {\r\n    console.error('Error in renderResults:', error);\r\n    return `\r\n      <div class=\"container\">\r\n        <div class=\"error-message\">\r\n          <h2>Error Displaying Results</h2>\r\n          <p>There was an error displaying the results. Error: ${error.message}</p>\r\n          <button class=\"primary\" onclick=\"window.location.reload()\">Start Over</button>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\nfunction renderICHFocusedResults(ich, results, startTime, legacyResults, currentModule) {\r\n  const criticalAlert = ich && ich.probability > 0.6 ? renderCriticalAlert() : '';\r\n  const ichPercentLocal = Math.round((ich?.probability || 0) * 100);\r\n  const strokeCenterHtml = renderStrokeCenterMap(results);\r\n  const inputSummaryHtml = renderInputSummary();\r\n  const researchToggleHtml = isResearchModeEnabled(currentModule) ? renderResearchToggle() : '';\r\n  const researchComparisonHtml =\r\n    legacyResults && isResearchModeEnabled(currentModule)\r\n      ? renderModelComparison(ich, legacyResults, getPatientInputs())\r\n      : '';\r\n\r\n  const alternativeDiagnosesHtml =\r\n    ich?.module === 'Coma' ? renderComaAlternativeDiagnoses(ich.probability) : '';\r\n\r\n  const strokeDifferentialHtml =\r\n    ich?.module !== 'Coma' ? renderStrokeDifferentialDiagnoses(ich.probability) : '';\r\n\r\n  return `\r\n    <div class=\"mx-auto px-4 py-6 space-y-6 max-w-md\">\r\n\r\n      ${renderProgressIndicator(3)}\r\n\r\n      <h2 class=\"text-2xl font-bold text-gray-800\">${t('bleedingRiskAssessment') || 'Blutungsrisiko-Bewertung / Bleeding Risk Assessment'}</h2>\r\n\r\n      ${criticalAlert}\r\n\r\n      <!-- Single ICH Risk Card -->\r\n      <div class=\"bg-white shadow rounded-lg p-4\">\r\n        ${renderRiskCard('ich', ich, results)}\r\n      </div>\r\n\r\n      <!-- ICH Volume Card (Coma only) -->\r\n      ${\r\n        ich?.module === 'Coma' && ichPercentLocal >= 50\r\n          ? `<div class=\"bg-white shadow rounded-lg p-4\">\r\n               ${renderVolumeCard(ich)}\r\n             </div>`\r\n          : ''\r\n      }\r\n\r\n      <!-- Alternative Diagnoses for Coma Module -->\r\n      ${alternativeDiagnosesHtml}\r\n\r\n      <!-- Differential Diagnoses for Stroke Modules -->\r\n      ${strokeDifferentialHtml}\r\n\r\n      <!-- Research Model Comparison -->\r\n      ${researchComparisonHtml}\r\n\r\n      <!-- ICH Drivers Only (not shown for Coma module) -->\r\n      ${\r\n        ich?.module !== 'Coma'\r\n          ? `<div class=\"bg-white shadow rounded-lg p-4\">\r\n               <h3 class=\"text-xl font-semibold mb-2\">${t('riskFactorsTitle') || 'Hauptrisikofaktoren / Main Risk Factors'}</h3>\r\n               ${renderICHDriversOnly(ich)}\r\n             </div>`\r\n          : ''\r\n      }\r\n\r\n      <div class=\"space-y-2 mt-6\">\r\n        <button class=\"w-full flex justify-between items-center bg-gray-100 hover:bg-gray-200 px-4 py-2 rounded info-toggle\" data-target=\"input-summary\">\r\n          <span class=\"flex items-center gap-2\">📋 ${t('inputSummaryTitle')}</span>\r\n          <span>▼</span> \r\n        </button>\r\n        <div class=\"hidden bg-white shadow rounded p-4\" id=\"input-summary\">\r\n          ${inputSummaryHtml}\r\n        </div>\r\n\r\n        <button class=\"w-full flex justify-between items-center bg-gray-100 hover:bg-gray-200 px-4 py-2 rounded info-toggle\" data-target=\"stroke-centers\">\r\n          <span class=\"flex items-center gap-2\">🏥 ${t('nearestCentersTitle')}</span>\r\n          <span>▼</span>\r\n        </button>\r\n        <div class=\"hidden bg-white shadow rounded p-4\" id=\"stroke-centers\">\r\n          ${strokeCenterHtml}\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Action Buttons -->\r\n      <div class=\"flex items-center gap-4 mt-6\">\r\n          <button type=\"button\" class=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 w-full\" id=\"printResults\">📄 ${t('printResults')}</button>\r\n          <button type=\"button\" class=\"bg-gray-200 text-gray-800 px-4 py-2 rounded hover:bg-gray-300 w-full\" data-action=\"reset\">${t('newAssessment')}</button>\r\n      </div>\r\n      <div class=\"flex flex-col md:flex-row justify-between items-center gap-4 mt-6\">\r\n          <button type=\"button\" class=\"bg-gray-100 text-gray-700 px-3 py-2 rounded hover:bg-gray-200\" data-action=\"goBack\">← ${t('goBack')}</button>\r\n          <button type=\"button\" class=\"bg-gray-100 text-gray-700 px-3 py-2 rounded hover:bg-gray-200\" data-action=\"goHome\">🏠 ${t('goHome')}</button>\r\n      </div>\r\n      <!-- Disclaimer -->\r\n      <div class=\"text-sm text-gray-500 mt-4\">\r\n        <strong>⚠️ ${t('importantNote')}:</strong> ${t('importantText')} Results generated at ${new Date().toLocaleTimeString()}.\r\n      </div>\r\n\r\n      ${renderBibliography(ich)}\r\n      ${researchToggleHtml}\r\n    </div>\r\n  `;\r\n}\r\n\r\nfunction renderFullModuleResults(ich, lvo, results, startTime, legacyResults, currentModule) {\r\n  const ichPercent = Math.round((ich?.probability || 0) * 100);\r\n  const lvoPercent = Math.round((lvo?.probability || 0) * 100);\r\n\r\n  console.log('[FullModuleResults] ICH probability:', ich?.probability, '-> %:', ichPercent);\r\n  console.log('[FullModuleResults] LVO probability:', lvo?.probability, '-> %:', lvoPercent);\r\n\r\n  const criticalAlert = ich && ich.probability > 0.6 ? renderCriticalAlert() : '';\r\n  const strokeCenterHtml = renderStrokeCenterMap(results);\r\n  const inputSummaryHtml = renderInputSummary();\r\n  const researchToggleHtml = isResearchModeEnabled(currentModule) ? renderResearchToggle() : '';\r\n  const researchComparisonHtml =\r\n    legacyResults && isResearchModeEnabled(currentModule)\r\n      ? renderModelComparison(ich, legacyResults, getPatientInputs())\r\n      : '';\r\n\r\n  // Get FAST-ED score from form data to determine LVO display\r\n  const state = store.getState();\r\n  const fastEdScore = parseInt(state.formData?.full?.fast_ed_score) || 0;\r\n\r\n  // Ensure we only show LVO in full module and when LVO data is available\r\n  const isFullModule = currentModule === 'full' || ich?.module === 'Full';\r\n  const hasValidLVO = lvo && typeof lvo.probability === 'number' && !lvo.notPossible;\r\n  const showLVORiskCard = isFullModule && fastEdScore > 3 && hasValidLVO;\r\n\r\n  // ('  Conditions: isFullModule:', isFullModule);\r\n  // ('  Conditions: fastEdScore > 3:', fastEdScore > 3);\r\n  // ('  Conditions: hasValidLVO:', hasValidLVO);\r\n  // ('  Show LVO Card:', showLVORiskCard);\r\n\r\n  // Determine layout configuration\r\n  const showVolumeCard = ichPercent >= 50;\r\n  const maxProbability = Math.max(ichPercent, lvoPercent);\r\n  // Robust ratio for gating (avoid divide-by-zero)\r\n  const eps = 0.5;\r\n  const ratio = lvoPercent / Math.max(ichPercent, eps);\r\n  const inRatioBand = ratio >= 0.6 && ratio <= 1.7;\r\n  // Strong-signal gate: both ICH and LVO at least 50%, and ratio in an informative band\r\n  const showTachometer = isFullModule && ichPercent >= 50 && lvoPercent >= 50 && inRatioBand;\r\n  const showDominanceBanner = isFullModule && ichPercent >= 50 && lvoPercent >= 50 && !inRatioBand;\r\n  // DEBUG: Temporary relaxed conditions for testing\r\n  const debugShowTachometer = isFullModule && ichPercent >= 30 && lvoPercent >= 30;\r\n\r\n  // Calculate number of cards and layout class\r\n  let cardCount = 1; // Always have ICH\r\n  // No placeholder needed - only show LVO card when FAST-ED > 3\r\n  if (showLVORiskCard) {\r\n    cardCount++;\r\n  }\r\n  if (showVolumeCard) {\r\n    cardCount++;\r\n  }\r\n\r\n  const layoutClass =\r\n    cardCount === 1\r\n      ? 'risk-results-single'\r\n      : cardCount === 2\r\n        ? 'risk-results-dual'\r\n        : 'risk-results-triple';\r\n\r\n  // Add differential diagnoses for stroke modules\r\n  const strokeDifferentialHtml = renderStrokeDifferentialDiagnoses(ich.probability);\r\n\r\n  return `\r\n    <div class=\"container\">\r\n      ${renderProgressIndicator(3)}\r\n      <h2>${t('resultsTitle')}</h2>\r\n      ${criticalAlert}\r\n      \r\n      <!-- Risk Assessment Display -->\r\n      <div class=\"${layoutClass}\">\r\n        ${renderRiskCard('ich', ich, results)}\r\n        ${showLVORiskCard ? renderRiskCard('lvo', lvo, results) : ''}\r\n        ${showVolumeCard ? renderVolumeCard(ich) : ''}\r\n      </div>\r\n      \r\n      <!-- Treatment Decision Gauge (when strong signal) -->\r\n      ${debugShowTachometer ? renderTachometerGauge(ichPercent, lvoPercent) : ''}\r\n      ${!debugShowTachometer && showDominanceBanner ? renderDominanceBanner(ichPercent, lvoPercent, ratio) : ''}\r\n      \r\n      <!-- Differential Diagnoses for Stroke Modules -->\r\n      ${strokeDifferentialHtml}\r\n      \r\n      <!-- Research Model Comparison (hidden unless research mode) -->\r\n      ${researchComparisonHtml}\r\n      \r\n      <!-- Risk Factor Drivers -->\r\n      <div class=\"enhanced-drivers-section\">\r\n        <h3>${t('riskFactorsTitle') || 'Risikofaktoren / Risk Factors'}</h3>\r\n        ${showLVORiskCard ? renderDriversSection(ich, lvo) : renderICHDriversOnly(ich)}\r\n      </div>\r\n      \r\n      <!-- Collapsible Additional Information -->\r\n      <div class=\"additional-info-section\">\r\n        <button class=\"info-toggle\" data-target=\"input-summary\">\r\n          <span class=\"toggle-icon\">📋</span>\r\n          <span class=\"toggle-text\">${t('inputSummaryTitle')}</span>\r\n          <span class=\"toggle-arrow\">▼</span>\r\n        </button>\r\n        <div class=\"collapsible-content\" id=\"input-summary\" style=\"display: none;\">\r\n          ${inputSummaryHtml}\r\n        </div>\r\n        \r\n        <button class=\"info-toggle\" data-target=\"stroke-centers\">\r\n          <span class=\"toggle-icon\">🏥</span>\r\n          <span class=\"toggle-text\">${t('nearestCentersTitle')}</span>\r\n          <span class=\"toggle-arrow\">▼</span>\r\n        </button>\r\n        <div class=\"collapsible-content\" id=\"stroke-centers\" style=\"display: none;\">\r\n          ${strokeCenterHtml}\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"results-actions\">\r\n        <div class=\"primary-actions\">\r\n          <button type=\"button\" class=\"primary\" id=\"printResults\"> 📄 ${t('printResults')} </button>\r\n          <button type=\"button\" class=\"secondary\" data-action=\"reset\"> ${t('newAssessment')} </button>\r\n        </div>\r\n        <div class=\"navigation-actions\">\r\n          <button type=\"button\" class=\"tertiary\" data-action=\"goBack\"> ← ${t('goBack')} </button>\r\n          <button type=\"button\" class=\"tertiary\" data-action=\"goHome\"> 🏠 ${t('goHome')} </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"disclaimer\">\r\n        <strong>⚠️ ${t('importantNote')}:</strong> ${t('importantText')} Results generated at ${new Date().toLocaleTimeString()}.\r\n      </div>\r\n      \r\n      ${renderBibliography(ich)}\r\n      ${researchToggleHtml}\r\n    </div>\r\n  `;\r\n}\r\n\r\nfunction renderDominanceBanner(ichPercent, lvoPercent, ratio) {\r\n  const dominant = ratio > 1 ? 'LVO' : 'ICH';\r\n  const icon = dominant === 'LVO' ? '🧠' : '🩸';\r\n  const dominantText =\r\n    i18n.getCurrentLanguage() === 'de'\r\n      ? dominant === 'LVO'\r\n        ? 'LVO-dominant'\r\n        : 'ICH-dominant'\r\n      : dominant === 'LVO'\r\n        ? 'LVO dominant'\r\n        : 'ICH dominant';\r\n  const subtitle =\r\n    i18n.getCurrentLanguage() === 'de'\r\n      ? `Verhältnis LVO/ICH: ${ratio.toFixed(2)}`\r\n      : `LVO/ICH ratio: ${ratio.toFixed(2)}`;\r\n  return `\r\n    <div class=\"tachometer-section\">\r\n      <div class=\"tachometer-card\">\r\n        <div class=\"treatment-recommendation ${dominant === 'LVO' ? 'lvo-dominant' : 'ich-dominant'}\">\r\n          <div class=\"recommendation-icon\">${icon}</div>\r\n          <div class=\"recommendation-text\">\r\n            <h4>${dominantText}</h4>\r\n            <p>${subtitle}</p>\r\n          </div>\r\n          <div class=\"probability-summary\">\r\n            ICH: ${ichPercent}% | LVO: ${lvoPercent}%\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n\r\nfunction renderICHDriversOnly(ich) {\r\n  if (!ich || !ich.drivers) {\r\n    return '<p class=\"no-drivers\">No driver data available</p>';\r\n  }\r\n\r\n  // Drivers are already formatted from API with positive/negative arrays\r\n  const driversData = ich.drivers;\r\n\r\n  // Check if drivers have the correct structure\r\n  if (!driversData.positive && !driversData.negative) {\r\n    // Fallback for unexpected format\r\n    return '<p class=\"no-drivers\">Driver format error</p>';\r\n  }\r\n\r\n  const positiveDrivers = driversData.positive || [];\r\n  const negativeDrivers = driversData.negative || [];\r\n\r\n  return `\r\n    <div class=\"drivers-split-view\">\r\n      <div class=\"drivers-column positive-column\">\r\n        <div class=\"column-header\">\r\n          <span class=\"column-icon\">⬆</span>\r\n          <span class=\"column-title\">${t('increasingRisk') || 'Risikoerhöhend / Increasing Risk'}</span>\r\n        </div>\r\n        <div class=\"compact-drivers\">\r\n          ${\r\n            positiveDrivers.length > 0\r\n              ? positiveDrivers\r\n                  .slice(0, 5)\r\n                  .map(d => renderCompactDriver(d, 'positive'))\r\n                  .join('')\r\n              : `<p class=\"no-factors\">${t('noFactors') || 'Keine Faktoren / No factors'}</p>`\r\n          }\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"drivers-column negative-column\">\r\n        <div class=\"column-header\">\r\n          <span class=\"column-icon\">⬇</span>\r\n          <span class=\"column-title\">${t('decreasingRisk') || 'Risikomindernd / Decreasing Risk'}</span>\r\n        </div>\r\n        <div class=\"compact-drivers\">\r\n          ${\r\n            negativeDrivers.length > 0\r\n              ? negativeDrivers\r\n                  .slice(0, 5)\r\n                  .map(d => renderCompactDriver(d, 'negative'))\r\n                  .join('')\r\n              : `<p class=\"no-factors\">${t('noFactors') || 'Keine Faktoren / No factors'}</p>`\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n\r\nfunction renderCompactDriver(driver, type) {\r\n  // Driver object has 'label' and 'weight' properties\r\n  const percentage = Math.abs(driver.weight * 100);\r\n  const width = Math.min(percentage * 2, 100); // Scale for display\r\n\r\n  return `\r\n    <div class=\"compact-driver-item\">\r\n      <div class=\"compact-driver-label\">${formatDriverName(driver.label)}</div>\r\n      <div class=\"compact-driver-bar ${type}\" style=\"width: ${width}%;\">\r\n        <span class=\"compact-driver-value\">${percentage.toFixed(1)}%</span>\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n\r\n/**\r\n * Render bibliography footer with research citations\r\n * @param {object} ichData - ICH risk data containing probability\r\n * @returns {string} HTML for bibliography section\r\n */\r\nfunction renderBibliography(ichData) {\r\n  // Only show bibliography if ICH risk is >= 50%\r\n  if (!ichData || !ichData.probability) {\r\n    return '';\r\n  }\r\n\r\n  const ichPercent = Math.round((ichData.probability || 0) * 100);\r\n  if (ichPercent < 50) {\r\n    return '';\r\n  }\r\n\r\n  const gfapValue = getCurrentGfapValue();\r\n  if (!gfapValue || gfapValue <= 0) {\r\n    return '';\r\n  }\r\n\r\n  return `\r\n    <div class=\"bibliography-section\">\r\n      <h4>${t('references')}</h4>\r\n      <div class=\"citations\">\r\n        <div class=\"citation\">\r\n          <span class=\"citation-number\">¹</span>\r\n          <span class=\"citation-text\">Broderick et al. (1993). Volume of intracerebral hemorrhage. A powerful and easy-to-use predictor of 30-day mortality. Stroke, 24(7), 987-993.</span>\r\n        </div>\r\n        <div class=\"citation\">\r\n          <span class=\"citation-number\">²</span>\r\n          <span class=\"citation-text\">Krishnan et al. (2013). Hematoma expansion in intracerebral hemorrhage: Predictors and outcomes. Neurology, 81(19), 1660-1666.</span>\r\n        </div>\r\n        <div class=\"citation\">\r\n          <span class=\"citation-number\">³</span>\r\n          <span class=\"citation-text\">Putra et al. (2020). Functional outcomes and mortality in patients with intracerebral hemorrhage. Critical Care Medicine, 48(3), 347-354.</span>\r\n        </div>\r\n        <div class=\"citation\">\r\n          <span class=\"citation-number\">⁴</span>\r\n          <span class=\"citation-text\">Tangella et al. (2020). Early prediction of mortality in intracerebral hemorrhage using clinical markers. Journal of Neurocritical Care, 13(2), 89-97.</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n\r\n/**\r\n * Calculate legacy model results from current results data (background, non-breaking)\r\n * @param {object} results - Main model results\r\n * @returns {object|null} - Legacy model results or null if not possible\r\n */\r\nfunction calculateLegacyFromResults(results) {\r\n  try {\r\n    const patientInputs = getPatientInputs();\r\n\r\n    if (!patientInputs.age || !patientInputs.gfap) {\r\n      // console.log('🔍 Missing required inputs for legacy model:', {\r\n      //  age: patientInputs.age,\r\n      //  gfap: patientInputs.gfap,\r\n      // });\r\n      return null;\r\n    }\r\n\r\n    const legacyResult = calculateLegacyICH(patientInputs);\r\n\r\n    return legacyResult;\r\n  } catch (error) {\r\n    // console.log('Legacy model calculation failed (non-critical):', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Get patient input data from store for research logging\r\n * @returns {object} - Patient input data\r\n */\r\nfunction getPatientInputs() {\r\n  const state = store.getState();\r\n  const { formData } = state;\r\n\r\n  // Extract age and GFAP from any module\r\n  let age = null;\r\n  let gfap = null;\r\n\r\n  for (const module of ['coma', 'limited', 'full']) {\r\n    if (formData[module]) {\r\n      age = age || formData[module].age_years;\r\n      gfap = gfap || formData[module].gfap_value;\r\n    }\r\n  }\r\n\r\n  const result = {\r\n    age: parseInt(age) || null,\r\n    gfap: parseFloat(gfap) || null,\r\n  };\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Render alternative diagnoses for coma module\r\n * @param {number} probability - ICH probability (0-1)\r\n * @returns {string} HTML for alternative diagnoses\r\n */\r\nfunction renderStrokeDifferentialDiagnoses(probability) {\r\n  const percent = Math.round(probability * 100);\r\n\r\n  if (percent <= 25) return '';\r\n\r\n  return `\r\n    <div class=\"alternative-diagnosis-card\">\r\n      <div class=\"diagnosis-header\">\r\n        <span class=\"diagnosis-icon\">⚡</span>\r\n        <h3 class=\"diagnosis-title\">${t('differentialDiagnoses')}</h3>\r\n      </div>\r\n\r\n      <div class=\"diagnosis-body\">\r\n        <!-- Time Window Confirmation - Clinical Action -->\r\n        <h4 class=\"clinical-action\">${t('reconfirmTimeWindow')}</h4>\r\n        \r\n        <!-- Actual Differential Diagnoses -->\r\n        <ul class=\"diagnosis-list\">\r\n          <li>${t('unclearTimeWindow')}</li>\r\n          <li>${t('rareDiagnoses')}</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n\r\nfunction renderComaAlternativeDiagnoses(probability) {\r\n  const percent = Math.round(probability * 100);\r\n  const isDE = i18n.getCurrentLanguage() === 'de';\r\n\r\n  // Decide which diagnoses to show\r\n  const highProbDiagnoses = [\r\n    isDE\r\n      ? 'Alternative Diagnosen sind SAB, SDH, EDH (Subarachnoidalblutung, Subduralhämatom, Epiduralhämatom)'\r\n      : 'Alternative diagnoses include SAH, SDH, EDH (Subarachnoid Hemorrhage, Subdural Hematoma, Epidural Hematoma)',\r\n    isDE\r\n      ? 'Bei unklarem Zeitfenster seit Symptombeginn oder im erweiterten Zeitfenster kommen auch ein demarkierter Infarkt oder hypoxischer Hirnschaden in Frage'\r\n      : 'In cases of unclear time window since symptom onset or extended time window, demarcated infarction or hypoxic brain injury should also be considered',\r\n  ];\r\n\r\n  const lowProbDiagnoses = [\r\n    isDE\r\n      ? 'Alternative Diagnose von Vigilanzminderung wahrscheinlich'\r\n      : 'Alternative diagnosis for reduced consciousness likely',\r\n    isDE\r\n      ? 'Ein Verschluss der Arteria Basilaris ist nicht ausgeschlossen'\r\n      : 'Basilar artery occlusion cannot be excluded',\r\n  ];\r\n\r\n  const diagnoses = percent > 25 ? highProbDiagnoses : lowProbDiagnoses;\r\n\r\n  return `\r\n    <div class=\"alternative-diagnosis-card\">\r\n      <div class=\"diagnosis-header\">\r\n        <span class=\"diagnosis-icon\">⚡</span>\r\n        <h3 class=\"diagnosis-title\">${\r\n          isDE ? 'Differentialdiagnosen' : 'Differential Diagnoses'\r\n        }</h3>\r\n      </div>\r\n      <div class=\"diagnosis-body\">\r\n        <ul class=\"diagnosis-list\">\r\n          ${diagnoses.map(d => `<li>${d}</li>`).join('')}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n\r\n/**\r\n * Get current module name from results\r\n * @param {object} ich - ICH results containing module information\r\n * @returns {string} - Module name ('coma', 'limited', 'full')\r\n */\r\nfunction getCurrentModuleName(ich) {\r\n  if (!ich?.module) {\r\n    return 'unknown';\r\n  }\r\n\r\n  const module = ich.module.toLowerCase();\r\n  if (module.includes('coma')) {\r\n    return 'coma';\r\n  }\r\n  if (module.includes('limited')) {\r\n    return 'limited';\r\n  }\r\n  if (module.includes('full')) {\r\n    return 'full';\r\n  }\r\n\r\n  return 'unknown';\r\n}\r\n\r\n/**\r\n * Render volume as a standalone risk card (for horizontal layout)\r\n * @param {object} ichData - ICH data containing volume information\r\n * @returns {string} HTML for volume risk card\r\n */\r\nfunction renderVolumeCard(ichData) {\r\n  const gfapValue = getCurrentGfapValue();\r\n  if (!gfapValue || gfapValue <= 0) {\r\n    return '';\r\n  }\r\n\r\n  // Use fast estimate for immediate UI and mortality band\r\n  const estVolume = estimateVolumeFromGFAP(gfapValue);\r\n  const mortality = estimateMortalityFromVolume(estVolume);\r\n  const percent = Math.round((ichData?.probability || 0) * 100);\r\n\r\n  return `\r\n    <div class=\"enhanced-risk-card volume-card normal\">\r\n      <div class=\"risk-header\">\r\n        <div class=\"risk-icon\">🧮</div>\r\n        <div class=\"risk-title\">\r\n          <h3>${t('ichVolumeLabel')}</h3>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"risk-probability\">\r\n        <div class=\"circles-container\">\r\n          <div class=\"rings-row\">\r\n            <div class=\"circle-item\">\r\n              ${renderICHVolumeDisplay(ichData)}\r\n              <div class=\"circle-label\">${t('ichVolumeLabel')}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"risk-assessment\">\r\n          <div class=\"mortality-assessment\">\r\n            ${t('predictedMortality')}: ${mortality}\r\n          </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  `;\r\n}\r\n\r\n/**\r\n * Render tachometer gauge for treatment decision when high risk\r\n * @param {number} ichPercent - ICH probability percentage\r\n * @param {number} lvoPercent - LVO probability percentage\r\n * @returns {string} HTML for tachometer gauge\r\n */\r\nfunction renderTachometerGauge(ichPercent, lvoPercent) {\r\n  const ratio = lvoPercent / Math.max(ichPercent, 1);\r\n\r\n  return `\r\n    <div class=\"tachometer-section\">\r\n      <div class=\"tachometer-card\">\r\n        <div class=\"tachometer-header\">\r\n          <h3>🎯 ${i18n.getCurrentLanguage() === 'de' ? 'Entscheidungshilfe – LVO/ICH' : 'Decision Support – LVO/ICH'}</h3>\r\n          <div class=\"ratio-display\">LVO/ICH Ratio: ${ratio.toFixed(2)}</div>\r\n        </div>\r\n        \r\n        <div class=\"tachometer-gauge\" id=\"tachometer-canvas-container\">\r\n          <div data-react-tachometer data-ich=\"${ichPercent}\" data-lvo=\"${lvoPercent}\" data-title=\"${i18n.getCurrentLanguage() === 'de' ? 'Entscheidungshilfe – LVO/ICH' : 'Decision Support – LVO/ICH'}\"></div>\r\n        </div>\r\n\r\n        <!-- Legend chips for zones -->\r\n        <div class=\"tachometer-legend\" aria-hidden=\"true\">\r\n          <span class=\"legend-chip ich\">ICH</span>\r\n          <span class=\"legend-chip uncertain\">${i18n.getCurrentLanguage() === 'de' ? 'Unsicher' : 'Uncertain'}</span>\r\n          <span class=\"legend-chip lvo\">LVO</span>\r\n        </div>\r\n\r\n        <!-- Metrics row: ratio, confidence, absolute difference -->\r\n        <div class=\"metrics-row\" role=\"group\" aria-label=\"Tachometer metrics\">\r\n          <div class=\"metric-card\">\r\n            <div class=\"metric-label\">Ratio</div>\r\n            <div class=\"metric-value\">${ratio.toFixed(2)}</div>\r\n            <div class=\"metric-unit\">LVO/ICH</div>\r\n          </div>\r\n          <div class=\"metric-card\">\r\n            <div class=\"metric-label\">Confidence</div>\r\n            <div class=\"metric-value\">${(() => {\r\n              const diff = Math.abs(lvoPercent - ichPercent);\r\n              const maxP = Math.max(lvoPercent, ichPercent);\r\n              let c =\r\n                diff < 10\r\n                  ? Math.round(30 + maxP * 0.3)\r\n                  : diff < 20\r\n                    ? Math.round(50 + maxP * 0.4)\r\n                    : Math.round(70 + maxP * 0.3);\r\n              c = Math.max(0, Math.min(100, c));\r\n              return c;\r\n            })()}%</div>\r\n            <div class=\"metric-unit\">percent</div>\r\n          </div>\r\n          <div class=\"metric-card\">\r\n            <div class=\"metric-label\">Difference</div>\r\n            <div class=\"metric-value\">${Math.abs(lvoPercent - ichPercent).toFixed(0)}%</div>\r\n            <div class=\"metric-unit\">|LVO − ICH|</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"probability-summary\">\r\n          ICH: ${ichPercent}% | LVO: ${lvoPercent}%\r\n        </div>\r\n        \r\n        <!-- Hidden probability summary for initialization -->\r\n        <div class=\"probability-summary\" style=\"display: none;\">\r\n          ICH: ${ichPercent}% | LVO: ${lvoPercent}%\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n\r\n// Premium (vanilla) tachometer disabled in favor of React island gauge\r\n","/**\r\n * Login Screen for Research Preview Access\r\n * iGFAP Stroke Triage Assistant (Tailwind version)\r\n */\r\n\r\nimport { authManager } from '../../auth/authentication.js';\r\nimport { store } from '../../state/store.js';\r\nimport '../../index.css'; // Tailwind CSS\r\n\r\nexport function renderLoginScreen() {\r\n  return `\r\n    <div class=\"flex items-center justify-center bg-gray-100 p-4 m-2\">\r\n      <div class=\"bg-white shadow-lg rounded-2xl w-full max-w-xl p-8\">\r\n\r\n        <!-- Header -->\r\n        <div class=\"text-center mb-6\">\r\n          <div class=\"flex justify-center items-center space-x-2\">\r\n            <div class=\"text-3xl\">🧠</div>\r\n            <h1 class=\"text-2xl font-bold\">iGFAP Stroke Triage</h1>\r\n          </div>\r\n          <div class=\"mt-1 text-sm text-gray-500\">Research Preview v2.1</div>\r\n        </div>\r\n\r\n        <!-- Research Access Notice -->\r\n        <div class=\"mb-6 p-4 bg-yellow-50 border-l-4 border-yellow-400 rounded\">\r\n          <h2 class=\"font-semibold text-lg mb-1\">🔬 Research Access Required</h2>\r\n          <p class=\"text-gray-700 text-sm mb-2\">This is a research preview of the iGFAP Stroke Triage Assistant for clinical validation.</p>\r\n          <div class=\"bg-yellow-100 p-2 rounded border border-yellow-200 text-sm text-gray-800\">\r\n            <h3 class=\"font-semibold mb-1\">⚠️ Important Notice</h3>\r\n            <ul class=\"list-disc ml-5 space-y-1\">\r\n              <li><strong>Research Use Only</strong> - Not for clinical decision making</li>\r\n              <li><strong>No Patient Data Storage</strong> - All data processed locally</li>\r\n              <li><strong>Clinical Advisory</strong> - Under supervision of Prof. Christian Förch & Dr. Lovepreet Kalra</li>\r\n              <li><strong>Contact:</strong> Deepak Bos (bosdeepak@gmail.com)</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Login Form -->\r\n        <form id=\"loginForm\" class=\"space-y-4\">\r\n          <div>\r\n            <label for=\"researchPassword\" class=\"block text-sm font-medium text-gray-700\">Research Access Code</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"researchPassword\"\r\n              name=\"password\"\r\n              required\r\n              autocomplete=\"off\"\r\n              placeholder=\"Enter research access code\"\r\n              class=\"mt-1 block w-full px-4 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-700\"\r\n            >\r\n          </div>\r\n\r\n          <div id=\"loginError\" class=\"text-red-600 text-sm hidden\"></div>\r\n\r\n          <button type=\"submit\" class=\"w-full bg-blue-600 hover:bg-blue-700 text-white py-2 rounded-lg flex items-center justify-center disabled:opacity-50 login-button\">\r\n            <span class=\"button-text\">Access Research System</span>\r\n            <span class=\"loading-spinner ml-2 hidden\">⏳</span>\r\n          </button>\r\n        </form>\r\n\r\n        <!-- Footer -->\r\n        <div class=\"mt-6 text-gray-500 text-xs space-y-1\">\r\n          <p><strong>Regulatory Status:</strong> Research prototype - CE certification pending</p>\r\n          <p><strong>Data Protection:</strong> GDPR compliant - local processing only</p>\r\n          <p><strong>Clinical Oversight:</strong> RKH Klinikum Ludwigsburg, Neurologie</p>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n\r\nexport function initializeLoginScreen() {\r\n  const loginForm = document.getElementById('loginForm');\r\n\r\n  if (!loginForm) return;\r\n\r\n  const passwordInput = document.getElementById('researchPassword');\r\n  const loginError = document.getElementById('loginError');\r\n  const loginButton = loginForm.querySelector('.login-button');\r\n\r\n  passwordInput.focus();\r\n\r\n  loginForm.addEventListener('submit', async e => {\r\n    e.preventDefault();\r\n    const password = passwordInput.value.trim();\r\n\r\n    if (!password) {\r\n      showLoginError('Please enter the research access code');\r\n      return;\r\n    }\r\n\r\n    setLoginLoading(true);\r\n    hideLoginError();\r\n\r\n    try {\r\n      const authResult = await authManager.authenticate(password);\r\n      console.log(authResult);\r\n      if (authResult.success) {\r\n        store.logEvent('auth_success', {\r\n          timestamp: new Date().toISOString(),\r\n          userAgent: navigator.userAgent.substring(0, 100),\r\n        });\r\n        store.navigate('triage1');\r\n      } else {\r\n        showLoginError(authResult.message);\r\n        passwordInput.value = '';\r\n        passwordInput.focus();\r\n        store.logEvent('auth_failed', {\r\n          timestamp: new Date().toISOString(),\r\n          errorCode: authResult.errorCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      showLoginError('Authentication system error. Please try again.');\r\n    } finally {\r\n      setLoginLoading(false);\r\n    }\r\n  });\r\n\r\n  passwordInput.addEventListener('input', hideLoginError);\r\n\r\n  function showLoginError(message) {\r\n    loginError.textContent = message;\r\n    loginError.classList.remove('hidden');\r\n    passwordInput.classList.add('border-red-500');\r\n  }\r\n\r\n  function hideLoginError() {\r\n    loginError.classList.add('hidden');\r\n    passwordInput.classList.remove('border-red-500');\r\n  }\r\n\r\n  function setLoginLoading(isLoading) {\r\n    const buttonText = loginButton.querySelector('.button-text');\r\n    const loadingSpinner = loginButton.querySelector('.loading-spinner');\r\n\r\n    if (isLoading) {\r\n      buttonText.classList.add('hidden');\r\n      loadingSpinner.classList.remove('hidden');\r\n      loginButton.disabled = true;\r\n    } else {\r\n      buttonText.classList.remove('hidden');\r\n      loadingSpinner.classList.add('hidden');\r\n      loginButton.disabled = false;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Accessibility utilities for the Stroke Triage Assistant\r\n */\r\n\r\nexport function announceScreenChange(screen) {\r\n  const announcement = document.createElement('div');\r\n  announcement.className = 'sr-only';\r\n  announcement.setAttribute('role', 'status');\r\n  announcement.setAttribute('aria-live', 'polite');\r\n\r\n  const screenNames = {\r\n    triage1: 'Coma assessment',\r\n    triage2: 'Examination capability assessment',\r\n    coma: 'Coma module',\r\n    limited: 'Limited data module',\r\n    full: 'Full stroke assessment',\r\n    results: 'Assessment results',\r\n  };\r\n\r\n  announcement.textContent = `Navigated to ${screenNames[screen] || screen}`;\r\n  document.body.appendChild(announcement);\r\n\r\n  setTimeout(() => announcement.remove(), 1000);\r\n}\r\n\r\nexport function setPageTitle(screen) {\r\n  const appName = 'iGFAP';\r\n  const titles = {\r\n    triage1: 'Initial Assessment',\r\n    triage2: 'Examination Capability',\r\n    coma: 'Coma Module',\r\n    limited: 'Limited Data Module',\r\n    full: 'Full Stroke Module',\r\n    results: 'Assessment Results',\r\n  };\r\n\r\n  const section = titles[screen];\r\n  // Brand-first to ensure the tab shows iGFAP even when truncated\r\n  document.title = section ? `${appName} — ${section}` : appName;\r\n}\r\n\r\nexport function focusMainHeading() {\r\n  // Focus on the main heading for screen readers\r\n  setTimeout(() => {\r\n    const heading = document.querySelector('h2');\r\n    if (heading) {\r\n      heading.setAttribute('tabindex', '-1');\r\n      heading.focus();\r\n      // Remove tabindex after focus for proper tab order\r\n      setTimeout(() => heading.removeAttribute('tabindex'), 100);\r\n    }\r\n  }, 100);\r\n}\r\n","import { t } from '../../localization/i18n.js';\r\n\r\nexport class FastEdCalculator {\r\n  constructor() {\r\n    this.scores = {\r\n      facial_palsy: 0,\r\n      arm_weakness: 0,\r\n      speech_changes: 0,\r\n      eye_deviation: 0,\r\n      denial_neglect: 0,\r\n    };\r\n    this.onApply = null;\r\n    this.modal = null;\r\n  }\r\n\r\n  getTotal() {\r\n    return Object.values(this.scores).reduce((sum, score) => sum + score, 0);\r\n  }\r\n\r\n  getRiskLevel() {\r\n    const total = this.getTotal();\r\n    return total >= 4 ? 'high' : 'low';\r\n  }\r\n\r\n  render() {\r\n    const total = this.getTotal();\r\n    const riskLevel = this.getRiskLevel();\r\n\r\n    return `\r\n      <div id=\"fastEdModal\" class=\"modal\" role=\"dialog\" aria-labelledby=\"fastEdModalTitle\" aria-hidden=\"true\" style=\"display: none !important;\">\r\n        <div class=\"modal-content fast-ed-modal\">\r\n          <div class=\"modal-header\">\r\n            <h2 id=\"fastEdModalTitle\">${t('fastEdCalculatorTitle')}</h2>\r\n            <button class=\"modal-close\" aria-label=\"Close\">&times;</button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            \r\n            <!-- Facial Palsy -->\r\n            <div class=\"fast-ed-component\">\r\n              <h3>${t('facialPalsyTitle')}</h3>\r\n              <div class=\"radio-group\">\r\n                <label class=\"radio-option\">\r\n                  <input type=\"radio\" name=\"facial_palsy\" value=\"0\" ${this.scores.facial_palsy === 0 ? 'checked' : ''}>\r\n                  <span class=\"radio-label\">${t('facialPalsyNormal')}</span>\r\n                </label>\r\n                <label class=\"radio-option\">\r\n                  <input type=\"radio\" name=\"facial_palsy\" value=\"1\" ${this.scores.facial_palsy === 1 ? 'checked' : ''}>\r\n                  <span class=\"radio-label\">${t('facialPalsyMild')}</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Arm Weakness -->\r\n            <div class=\"fast-ed-component\">\r\n              <h3>${t('armWeaknessTitle')}</h3>\r\n              <div class=\"radio-group\">\r\n                <label class=\"radio-option\">\r\n                  <input type=\"radio\" name=\"arm_weakness\" value=\"0\" ${this.scores.arm_weakness === 0 ? 'checked' : ''}>\r\n                  <span class=\"radio-label\">${t('armWeaknessNormal')}</span>\r\n                </label>\r\n                <label class=\"radio-option\">\r\n                  <input type=\"radio\" name=\"arm_weakness\" value=\"1\" ${this.scores.arm_weakness === 1 ? 'checked' : ''}>\r\n                  <span class=\"radio-label\">${t('armWeaknessMild')}</span>\r\n                </label>\r\n                <label class=\"radio-option\">\r\n                  <input type=\"radio\" name=\"arm_weakness\" value=\"2\" ${this.scores.arm_weakness === 2 ? 'checked' : ''}>\r\n                  <span class=\"radio-label\">${t('armWeaknessSevere')}</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Speech Changes -->\r\n            <div class=\"fast-ed-component\">\r\n              <h3>${t('speechChangesTitle')}</h3>\r\n              <div class=\"radio-group\">\r\n                <label class=\"radio-option\">\r\n                  <input type=\"radio\" name=\"speech_changes\" value=\"0\" ${this.scores.speech_changes === 0 ? 'checked' : ''}>\r\n                  <span class=\"radio-label\">${t('speechChangesNormal')}</span>\r\n                </label>\r\n                <label class=\"radio-option\">\r\n                  <input type=\"radio\" name=\"speech_changes\" value=\"1\" ${this.scores.speech_changes === 1 ? 'checked' : ''}>\r\n                  <span class=\"radio-label\">${t('speechChangesMild')}</span>\r\n                </label>\r\n                <label class=\"radio-option\">\r\n                  <input type=\"radio\" name=\"speech_changes\" value=\"2\" ${this.scores.speech_changes === 2 ? 'checked' : ''}>\r\n                  <span class=\"radio-label\">${t('speechChangesSevere')}</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Eye Deviation -->\r\n            <div class=\"fast-ed-component\">\r\n              <h3>${t('eyeDeviationTitle')}</h3>\r\n              <div class=\"radio-group\">\r\n                <label class=\"radio-option\">\r\n                  <input type=\"radio\" name=\"eye_deviation\" value=\"0\" ${this.scores.eye_deviation === 0 ? 'checked' : ''}>\r\n                  <span class=\"radio-label\">${t('eyeDeviationNormal')}</span>\r\n                </label>\r\n                <label class=\"radio-option\">\r\n                  <input type=\"radio\" name=\"eye_deviation\" value=\"1\" ${this.scores.eye_deviation === 1 ? 'checked' : ''}>\r\n                  <span class=\"radio-label\">${t('eyeDeviationPartial')}</span>\r\n                </label>\r\n                <label class=\"radio-option\">\r\n                  <input type=\"radio\" name=\"eye_deviation\" value=\"2\" ${this.scores.eye_deviation === 2 ? 'checked' : ''}>\r\n                  <span class=\"radio-label\">${t('eyeDeviationForced')}</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Denial/Neglect -->\r\n            <div class=\"fast-ed-component\">\r\n              <h3>${t('denialNeglectTitle')}</h3>\r\n              <div class=\"radio-group\">\r\n                <label class=\"radio-option\">\r\n                  <input type=\"radio\" name=\"denial_neglect\" value=\"0\" ${this.scores.denial_neglect === 0 ? 'checked' : ''}>\r\n                  <span class=\"radio-label\">${t('denialNeglectNormal')}</span>\r\n                </label>\r\n                <label class=\"radio-option\">\r\n                  <input type=\"radio\" name=\"denial_neglect\" value=\"1\" ${this.scores.denial_neglect === 1 ? 'checked' : ''}>\r\n                  <span class=\"radio-label\">${t('denialNeglectPartial')}</span>\r\n                </label>\r\n                <label class=\"radio-option\">\r\n                  <input type=\"radio\" name=\"denial_neglect\" value=\"2\" ${this.scores.denial_neglect === 2 ? 'checked' : ''}>\r\n                  <span class=\"radio-label\">${t('denialNeglectComplete')}</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Total Score Display -->\r\n            <div class=\"fast-ed-total\">\r\n              <div class=\"score-display\">\r\n                <h3>${t('totalScoreTitle')}: <span class=\"total-score\">${total}/9</span></h3>\r\n                <div class=\"risk-indicator ${riskLevel}\">\r\n                  ${t('riskLevel')}: ${riskLevel === 'high' ? t('riskLevelHigh') : t('riskLevelLow')}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <div class=\"button-group\">\r\n              <button class=\"secondary\" data-action=\"cancel-fast-ed\">${t('cancel')}</button>\r\n              <button class=\"primary\" data-action=\"apply-fast-ed\">${t('applyScore')}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  setupEventListeners() {\r\n    this.modal = document.getElementById('fastEdModal');\r\n    if (!this.modal) {\r\n      return;\r\n    }\r\n\r\n    // Radio button changes\r\n    this.modal.addEventListener('change', (e) => {\r\n      if (e.target.type === 'radio') {\r\n        const component = e.target.name;\r\n        const value = parseInt(e.target.value);\r\n        this.scores[component] = value;\r\n        this.updateDisplay();\r\n      }\r\n    });\r\n\r\n    // Close button\r\n    const closeBtn = this.modal.querySelector('.modal-close');\r\n    closeBtn?.addEventListener('click', () => this.close());\r\n\r\n    // Cancel button\r\n    const cancelBtn = this.modal.querySelector('[data-action=\"cancel-fast-ed\"]');\r\n    cancelBtn?.addEventListener('click', () => this.close());\r\n\r\n    // Apply button\r\n    const applyBtn = this.modal.querySelector('[data-action=\"apply-fast-ed\"]');\r\n    applyBtn?.addEventListener('click', () => this.apply());\r\n\r\n    // Disable backdrop click-to-close to prevent accidental dismissal\r\n    // Users must explicitly Cancel or Apply\r\n    this.modal.addEventListener('click', (e) => {\r\n      if (e.target === this.modal) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }\r\n    });\r\n\r\n    // Keyboard navigation\r\n    document.addEventListener('keydown', (e) => {\r\n      if (e.key === 'Escape' && this.modal?.classList.contains('show')) {\r\n        this.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  updateDisplay() {\r\n    const totalElement = this.modal?.querySelector('.total-score');\r\n    const riskElement = this.modal?.querySelector('.risk-indicator');\r\n\r\n    if (totalElement) {\r\n      totalElement.textContent = `${this.getTotal()}/9`;\r\n    }\r\n\r\n    if (riskElement) {\r\n      const riskLevel = this.getRiskLevel();\r\n      riskElement.className = `risk-indicator ${riskLevel}`;\r\n      riskElement.textContent = `${t('riskLevel')}: ${riskLevel === 'high' ? t('riskLevelHigh') : t('riskLevelLow')}`;\r\n    }\r\n  }\r\n\r\n  show(currentScore = 0, onApplyCallback = null) {\r\n    this.onApply = onApplyCallback;\r\n\r\n    // If we have a current score, try to reverse engineer it (basic approximation)\r\n    if (currentScore > 0 && currentScore <= 9) {\r\n      this.approximateFromTotal(currentScore);\r\n    }\r\n\r\n    // Inject modal HTML if not already present\r\n    if (!document.getElementById('fastEdModal')) {\r\n      document.body.insertAdjacentHTML('beforeend', this.render());\r\n    } else {\r\n      // Re-render the modal with current state\r\n      this.modal.remove();\r\n      document.body.insertAdjacentHTML('beforeend', this.render());\r\n      this.modal = document.getElementById('fastEdModal');\r\n    }\r\n\r\n    this.setupEventListeners();\r\n\r\n    this.modal.setAttribute('aria-hidden', 'false');\r\n    this.modal.style.display = 'flex';\r\n    this.modal.classList.add('show');\r\n\r\n    // Focus first radio button\r\n    const firstRadio = this.modal.querySelector('input[type=\"radio\"]');\r\n    firstRadio?.focus();\r\n  }\r\n\r\n  close() {\r\n    if (this.modal) {\r\n      this.modal.classList.remove('show');\r\n      this.modal.style.display = 'none';\r\n      this.modal.setAttribute('aria-hidden', 'true');\r\n    }\r\n  }\r\n\r\n  apply() {\r\n    const total = this.getTotal();\r\n    const armWeaknessBoolean = this.scores.arm_weakness > 0;\r\n    const eyeDeviationBoolean = this.scores.eye_deviation > 0;\r\n\r\n    if (this.onApply) {\r\n      this.onApply({\r\n        total,\r\n        components: { ...this.scores },\r\n        armWeaknessBoolean,\r\n        eyeDeviationBoolean,\r\n      });\r\n    }\r\n\r\n    this.close();\r\n  }\r\n\r\n  approximateFromTotal(total) {\r\n    // Simple approximation - distribute points across components\r\n    // This is basic but gives users a starting point\r\n    this.scores = {\r\n      facial_palsy: 0,\r\n      arm_weakness: 0,\r\n      speech_changes: 0,\r\n      eye_deviation: 0,\r\n      denial_neglect: 0,\r\n    };\r\n\r\n    let remaining = total;\r\n    const components = Object.keys(this.scores);\r\n\r\n    for (const component of components) {\r\n      if (remaining <= 0) {\r\n        break;\r\n      }\r\n\r\n      const maxForComponent = (component === 'facial_palsy') ? 1 : 2;\r\n      const assignToThis = Math.min(remaining, maxForComponent);\r\n      this.scores[component] = assignToThis;\r\n      remaining -= assignToThis;\r\n    }\r\n  }\r\n}\r\n\r\n// Create singleton instance\r\nexport const fastEdCalculator = new FastEdCalculator();\r\n","import React from 'react';\r\n\r\nfunction header() {\r\n  return `<header class=\"bg-white dark:bg-gray-800 shadow-md px-4 py-3 md:px-8\">\r\n      <div class=\"max-w-7xl mx-auto flex items-center justify-between\">\r\n        <div class=\"flex items-center space-x-2\">\r\n          <div class=\"text-3xl\"></div>\r\n          <div>\r\n            <h1 class=\"text-lg font-bold text-gray-900 dark:text-white\">iGFAP</h1>\r\n            <small class=\"text-xs text-gray-500 dark:text-gray-300\">Stroke Triage Assistant</small>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"hidden md:flex items-center space-x-4\">\r\n          <button\r\n            id=\"helpButton\"\r\n            class=\"px-2 py-1 text-gray-700 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-700 rounded transition\"\r\n          >\r\n            ❓ Help\r\n          </button>\r\n          <button\r\n            id=\"darkModeToggle\"\r\n            class=\"px-2 py-1 text-gray-700 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-700 rounded transition\"\r\n          >\r\n            🌙 Theme\r\n          </button>\r\n          <button\r\n            id=\"languageToggle\"\r\n            data-lang=\"en\"\r\n            class=\"px-2 py-1 text-gray-700 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-700 rounded transition\"\r\n          >\r\n            🇬🇧\r\n          </button>\r\n          <span\r\n            id=\"apiModeToggle\"\r\n            class=\"px-2 py-1 bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100 rounded text-xs font-semibold\"\r\n          >\r\n            Live Data\r\n          </span>\r\n        </div>\r\n\r\n        <div class=\"md:hidden flex items-center\">\r\n          <button\r\n            id=\"mobileMenuButton\"\r\n            class=\"text-gray-700 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-700 p-2 rounded transition\"\r\n          >\r\n            ☰\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div id=\"mobileMenu\" class=\"hidden md:hidden mt-2 px-2 space-y-2\">\r\n        <button\r\n          id=\"helpButton\"\r\n          class=\"w-full text-left px-2 py-1 text-gray-700 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-700 rounded transition\"\r\n        >\r\n          ❓ Help\r\n        </button>\r\n        <button\r\n          id=\"darkModeToggle\"\r\n          class=\"w-full text-left px-2 py-1 text-gray-700 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-700 rounded transition\"\r\n        >\r\n          🌙 Theme\r\n        </button>\r\n        <button\r\n          id=\"languageToggle\"\r\n          data-lang=\"en\"\r\n          class=\"w-full text-left px-2 py-1 text-gray-700 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-700 rounded transition\"\r\n        >\r\n          🇬🇧 Language\r\n        </button>\r\n        <span\r\n          id=\"apiModeToggle\"\r\n          class=\"inline-block px-2 py-1 bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100 rounded text-xs font-semibold\"\r\n        >\r\n          Live Data\r\n        </span>\r\n      </div>\r\n    </header>`;\r\n}\r\n\r\nexport default header;\r\n","import React from 'react';\r\n\r\nfunction footer() {\r\n  return ` <footer\r\n      class=\"bg-gray-100 text-gray-600 text-sm px-4 py-4 md:px-8 flex flex-col md:flex-row items-center justify-between space-y-2 md:space-y-0\"\r\n      role=\"contentinfo\"\r\n    >\r\n      <p>\r\n        © <span id=\"currentYear\"></span> iGFAP Project - Research Preview\r\n      </p>\r\n\r\n      <div class=\"flex flex-wrap gap-4 md:gap-6\">\r\n        <a href=\"#\" id=\"privacyLink\" class=\"hover:underline\">\r\n          Privacy Policy\r\n        </a>\r\n        <a href=\"#\" id=\"disclaimerLink\" class=\"hover:underline\">\r\n          Medical Disclaimer\r\n        </a>\r\n        <a href=\"#\" id=\"versionLink\" class=\"hover:underline\">\r\n          Version 2.1.0 - Research Preview\r\n        </a>\r\n      </div>\r\n    </footer>`;\r\n}\r\n\r\nexport default footer;\r\n","import { store } from '../state/store.js';\r\nimport {\r\n  handleTriage1,\r\n  handleTriage2,\r\n  handleSubmit,\r\n  reset,\r\n  goBack,\r\n  goHome,\r\n} from '../logic/handlers.js';\r\nimport { clearValidationErrors, clearAllValidation } from '../logic/validate.js';\r\nimport { initializeResearchMode } from '../research/comparison-ui.js';\r\nimport { authManager } from '../auth/authentication.js';\r\nimport { safeSetInnerHTML } from '../security/html-sanitizer.js';\r\n\r\nimport { renderTriage1 } from './screens/triage1.js';\r\nimport { renderTriage2 } from './screens/triage2.js';\r\nimport { renderComa } from './screens/coma.js';\r\nimport { renderLimited } from './screens/limited.js';\r\nimport { renderFull } from './screens/full.js';\r\nimport { renderResults } from './screens/results.js';\r\nimport { renderLoginScreen, initializeLoginScreen } from './screens/login.js';\r\nimport { announceScreenChange, setPageTitle, focusMainHeading } from './a11y.js';\r\nimport { initializeStrokeCenterMap } from './components/stroke-center-map.js';\r\nimport { fastEdCalculator } from './components/fastEdModal.js';\r\nimport header from './components/header.js';\r\nimport footer from './components/footer.js';\r\n\r\nexport function render(container) {\r\n  if (!container.querySelector('#appContent')) {\r\n    container.innerHTML = `\r\n      <div class=\"min-h-screen flex flex-col\">\r\n        ${header()}\r\n        <main role=\"main\" class=\"flex-1 w-full flex flex-col items-center justify-start\">\r\n          <div id=\"appContent\"></div>\r\n        </main>\r\n        ${footer()}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  const state = store.getState();\r\n  const { currentScreen, results, startTime, screenHistory } = state;\r\n\r\n  console.log('[Render] Rendering screen:', currentScreen, 'Has results:', !!results);\r\n\r\n  // Optimize DOM updates to prevent CLS\r\n  // Show/hide back button based on navigation history\r\n  const backButton = document.getElementById('backButton');\r\n  if (backButton) {\r\n    backButton.style.display = screenHistory && screenHistory.length > 0 ? 'flex' : 'none';\r\n  }\r\n\r\n  // Render the appropriate screen\r\n  let html = '';\r\n  switch (currentScreen) {\r\n    case 'login':\r\n      html = renderLoginScreen();\r\n      break;\r\n    case 'triage1':\r\n      // Verify authentication for all clinical screens\r\n      if (!authManager.isValidSession()) {\r\n        store.navigate('login');\r\n        return;\r\n      }\r\n      html = renderTriage1();\r\n      break;\r\n    case 'triage2':\r\n      html = renderTriage2();\r\n      break;\r\n    case 'coma':\r\n      html = renderComa();\r\n      break;\r\n    case 'limited':\r\n      html = renderLimited();\r\n      break;\r\n    case 'full':\r\n      html = renderFull();\r\n      break;\r\n    case 'results':\r\n      html = renderResults(results, startTime);\r\n      break;\r\n    default:\r\n      html = renderTriage1();\r\n  }\r\n  // Use secure DOM update to minimize reflows and prevent XSS\r\n  const appContent = container.querySelector('#appContent');\r\n  if (appContent) {\r\n    try {\r\n      safeSetInnerHTML(appContent, html);\r\n    } catch (error) {\r\n      appContent.textContent = 'Error loading content. Please refresh.';\r\n    }\r\n  }\r\n\r\n  // Restore form data if available\r\n  const form = container.querySelector('form[data-module]');\r\n  if (form) {\r\n    const { module } = form.dataset;\r\n    restoreFormData(form, module);\r\n  }\r\n\r\n  // Attach event listeners\r\n  attachEvents(container);\r\n\r\n  // Initialize login screen if needed\r\n  if (currentScreen === 'login') {\r\n    setTimeout(() => {\r\n      initializeLoginScreen();\r\n    }, 100);\r\n  }\r\n\r\n  // Initialize stroke center map if on results screen\r\n  if (currentScreen === 'results' && results) {\r\n    setTimeout(() => {\r\n      try {\r\n        console.log('[Render] Initializing stroke center map with results:', results);\r\n        initializeStrokeCenterMap(results);\r\n      } catch (error) {\r\n        console.error('[Render] Stroke center map initialization failed:', error);\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  // Initialize research mode components\r\n  setTimeout(() => {\r\n    try {\r\n      initializeResearchMode();\r\n    } catch {}\r\n  }, 150);\r\n\r\n  // Accessibility updates\r\n  announceScreenChange(currentScreen);\r\n  setPageTitle(currentScreen);\r\n  focusMainHeading();\r\n}\r\n\r\nfunction restoreFormData(form, module) {\r\n  const formData = store.getFormData(module);\r\n  if (!formData || Object.keys(formData).length === 0) {\r\n    return;\r\n  }\r\n\r\n  Object.entries(formData).forEach(([key, value]) => {\r\n    const input = form.elements[key];\r\n    if (input) {\r\n      if (input.type === 'checkbox') {\r\n        input.checked = value === true || value === 'on' || value === 'true';\r\n      } else {\r\n        input.value = value;\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction attachEvents(container) {\r\n  // Clear validation errors when user starts typing in a field\r\n  container.querySelectorAll('input[type=\"number\"]').forEach(input => {\r\n    input.addEventListener('input', () => {\r\n      // Only clear errors for the specific field being edited\r\n      const group = input.closest('.input-group');\r\n      if (group && group.classList.contains('error')) {\r\n        group.classList.remove('error');\r\n        group.querySelectorAll('.error-message').forEach(el => el.remove());\r\n      }\r\n    });\r\n  });\r\n\r\n  // Triage button handlers\r\n  container.querySelectorAll('[data-action]').forEach(button => {\r\n    button.addEventListener('click', e => {\r\n      const { action, value } = e.currentTarget.dataset;\r\n      const boolVal = value === 'true';\r\n\r\n      switch (action) {\r\n        case 'triage1':\r\n          handleTriage1(boolVal);\r\n          break;\r\n        case 'triage2':\r\n          handleTriage2(boolVal);\r\n          break;\r\n        case 'reset':\r\n          reset();\r\n          break;\r\n        case 'goBack':\r\n          goBack();\r\n          break;\r\n        case 'goHome':\r\n          goHome();\r\n          break;\r\n      }\r\n    });\r\n  });\r\n\r\n  // Form submission handlers\r\n  container.querySelectorAll('form[data-module]').forEach(form => {\r\n    form.addEventListener('submit', e => {\r\n      handleSubmit(e, container);\r\n    });\r\n  });\r\n\r\n  // Print button handler\r\n  const printButton = container.querySelector('#printResults');\r\n  if (printButton) {\r\n    printButton.addEventListener('click', () => window.print());\r\n  }\r\n\r\n  // FAST-ED calculator handler\r\n  const fastEdInput = container.querySelector('#fast_ed_score');\r\n  if (fastEdInput) {\r\n    fastEdInput.addEventListener('click', e => {\r\n      e.preventDefault();\r\n      const currentValue = parseInt(fastEdInput.value) || 0;\r\n\r\n      fastEdCalculator.show(currentValue, result => {\r\n        // Update FAST-ED score\r\n        fastEdInput.value = result.total;\r\n\r\n        // Update hidden arm weakness field\r\n        const armPareseField = container.querySelector('#armparese_hidden');\r\n        if (armPareseField) {\r\n          armPareseField.value = result.armWeaknessBoolean ? 'true' : 'false';\r\n        }\r\n\r\n        // Update eye deviation hidden field if exists\r\n        const eyeDeviationField = container.querySelector('#eye_deviation_hidden');\r\n        if (eyeDeviationField) {\r\n          eyeDeviationField.value = result.eyeDeviationBoolean ? 'true' : 'false';\r\n        }\r\n\r\n        // Trigger change event to save form data\r\n        fastEdInput.dispatchEvent(new Event('change', { bubbles: true }));\r\n      });\r\n    });\r\n    // Prevent manual typing (baseline behavior)\r\n    fastEdInput.addEventListener('keydown', e => {\r\n      e.preventDefault();\r\n    });\r\n  }\r\n\r\n  // Collapsible info toggles handler\r\n  const infoToggles = container.querySelectorAll('.info-toggle');\r\n  infoToggles.forEach(toggle => {\r\n    toggle.addEventListener('click', e => {\r\n      const targetId = toggle.dataset.target;\r\n      const targetContent = container.querySelector(`#${targetId}`);\r\n      const arrow = toggle.querySelector('.toggle-arrow');\r\n\r\n      if (targetContent) {\r\n        const isVisible = targetContent.style.display !== 'none';\r\n\r\n        if (isVisible) {\r\n          // Hide content\r\n          targetContent.style.display = 'none';\r\n          targetContent.classList.remove('show');\r\n          toggle.classList.remove('active');\r\n          arrow.style.transform = 'rotate(0deg)';\r\n        } else {\r\n          // Show content\r\n          targetContent.style.display = 'block';\r\n          targetContent.classList.add('show');\r\n          toggle.classList.add('active');\r\n          arrow.style.transform = 'rotate(180deg)';\r\n        }\r\n      }\r\n    });\r\n  });\r\n}\r\n","/**\r\n * UI Management System\r\n * iGFAP Stroke Triage Assistant - UI Coordination\r\n *\r\n * Handles all UI interactions, event listeners, and component management\r\n *\r\n * @author iGFAP Project Team\r\n * @contact Deepak Bos <bosdeepak@gmail.com>\r\n */\r\n\r\nimport { store } from '../state/store.js';\r\nimport { i18n, t } from '../localization/i18n.js';\r\nimport { safeAsync, ERROR_CATEGORIES } from '../utils/error-handler.js';\r\nimport { safeSetInnerHTML } from '../security/html-sanitizer.js';\r\nimport { render } from '../ui/render.js';\r\n\r\n/**\r\n * Manages all UI interactions and components\r\n */\r\nexport class UIManager {\r\n  constructor() {\r\n    this.container = null;\r\n    this.eventListeners = new Map();\r\n    this.isInitialized = false;\r\n  }\r\n\r\n  /**\r\n   * Initialize UI management system\r\n   * @param {HTMLElement} container - Main app container\r\n   */\r\n  initialize(container) {\r\n    this.container = container;\r\n    this.setupGlobalEventListeners();\r\n    this.setupHelpModal();\r\n    this.setupFooterLinks();\r\n    this.initializeApiModeToggle();\r\n    this.initializeResearchMode();\r\n    this.setCurrentYear();\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  /**\r\n   * Setup global event listeners\r\n   */\r\n  setupGlobalEventListeners() {\r\n    this.addEventListenerSafe('backButton', 'click', () => {\r\n      store.goBack();\r\n      render(this.container);\r\n    });\r\n\r\n    this.addEventListenerSafe('homeButton', 'click', () => {\r\n      store.goHome();\r\n      render(this.container);\r\n    });\r\n\r\n    this.addEventListenerSafe('languageToggle', 'click', () => {\r\n      this.toggleLanguage();\r\n    });\r\n\r\n    this.addEventListenerSafe('darkModeToggle', 'click', () => {\r\n      this.toggleDarkMode();\r\n    });\r\n\r\n    this.addEventListenerSafe('apiModeToggle', 'click', e => {\r\n      e.preventDefault();\r\n      this.toggleApiMode();\r\n    });\r\n\r\n    this.addEventListenerSafe('researchModeToggle', 'click', e => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      this.toggleResearchMode();\r\n    });\r\n\r\n    // Keyboard navigation\r\n    this.addGlobalEventListener('keydown', e => {\r\n      if (e.key === 'Escape') {\r\n        this.closeModal('helpModal');\r\n      }\r\n    });\r\n\r\n    // Before unload warning\r\n    this.addGlobalEventListener('beforeunload', e => {\r\n      if (store.hasUnsavedData()) {\r\n        e.preventDefault();\r\n        e.returnValue = 'You have unsaved data. Are you sure you want to leave?';\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initialize API mode toggle (Mock vs API)\r\n   */\r\n  initializeApiModeToggle() {\r\n    const btn = document.getElementById('apiModeToggle');\r\n    if (!btn) {\r\n      return;\r\n    }\r\n\r\n    // Default to mock on localhost preview; API in other cases\r\n    const isLocal = ['localhost', '127.0.0.1', '0.0.0.0'].includes(window.location.hostname);\r\n    const stored = localStorage.getItem('use_mock_api');\r\n    if (stored === null && isLocal && !(import.meta && import.meta.env && import.meta.env.DEV)) {\r\n      localStorage.setItem('use_mock_api', 'true');\r\n    }\r\n    this.updateApiModeButton();\r\n  }\r\n\r\n  /** Toggle API mode and update UI */\r\n  toggleApiMode() {\r\n    const current = localStorage.getItem('use_mock_api');\r\n    const next = current === 'true' ? 'false' : 'true';\r\n    localStorage.setItem('use_mock_api', next);\r\n    this.updateApiModeButton();\r\n\r\n    // Announce change for a11y\r\n    try {\r\n      const sr = document.createElement('div');\r\n      sr.className = 'sr-only';\r\n      sr.setAttribute('role', 'status');\r\n      sr.setAttribute('aria-live', 'polite');\r\n      sr.textContent = next === 'true' ? 'Mock data enabled' : 'Live API enabled';\r\n      document.body.appendChild(sr);\r\n      setTimeout(() => sr.remove(), 1200);\r\n    } catch {}\r\n  }\r\n\r\n  /** Update the button label/title for API mode */\r\n  updateApiModeButton() {\r\n    const btn = document.getElementById('apiModeToggle');\r\n    if (!btn) {\r\n      return;\r\n    }\r\n    const useMock = localStorage.getItem('use_mock_api') !== 'false';\r\n    if (useMock) {\r\n      btn.textContent = '🧪';\r\n      btn.title = 'Mock data: ON (click to use API)';\r\n      btn.setAttribute('aria-label', 'Mock data enabled');\r\n    } else {\r\n      btn.textContent = '☁️';\r\n      btn.title = 'Live API: ON (click to use mock)';\r\n      btn.setAttribute('aria-label', 'Live API enabled');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Safely add event listener to element\r\n   * @param {string} elementId - Element ID\r\n   * @param {string} event - Event type\r\n   * @param {Function} handler - Event handler\r\n   */\r\n  addEventListenerSafe(elementId, event, handler) {\r\n    const element = document.getElementById(elementId);\r\n    if (element) {\r\n      const wrappedHandler = e => {\r\n        try {\r\n          handler(e);\r\n        } catch (error) {\r\n          this.handleUIError(error, `${elementId}_${event}`);\r\n        }\r\n      };\r\n\r\n      element.addEventListener(event, wrappedHandler);\r\n      this.eventListeners.set(`${elementId}_${event}`, { element, handler: wrappedHandler });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add global event listener\r\n   * @param {string} event - Event type\r\n   * @param {Function} handler - Event handler\r\n   */\r\n  addGlobalEventListener(event, handler) {\r\n    const wrappedHandler = e => {\r\n      try {\r\n        handler(e);\r\n      } catch (error) {\r\n        this.handleUIError(error, `global_${event}`);\r\n      }\r\n    };\r\n\r\n    if (event === 'keydown' || event === 'beforeunload') {\r\n      const target = event === 'beforeunload' ? window : document;\r\n      target.addEventListener(event, wrappedHandler);\r\n      this.eventListeners.set(`global_${event}`, { element: target, handler: wrappedHandler });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setup help modal functionality\r\n   */\r\n  setupHelpModal() {\r\n    safeAsync(\r\n      async () => {\r\n        const helpButton = document.getElementById('helpButton');\r\n        const helpModal = document.getElementById('helpModal');\r\n        const modalClose = helpModal?.querySelector('.modal-close');\r\n        if (helpButton && helpModal) {\r\n          // Ensure modal starts hidden\r\n          this.closeModal('helpModal');\r\n\r\n          this.addEventListenerSafe('helpButton', 'click', () => {\r\n            this.openModal('helpModal');\r\n          });\r\n\r\n          if (modalClose) {\r\n            modalClose.addEventListener('click', () => {\r\n              this.closeModal('helpModal');\r\n            });\r\n          }\r\n\r\n          helpModal.addEventListener('click', e => {\r\n            if (e.target === helpModal) {\r\n              this.closeModal('helpModal');\r\n            }\r\n          });\r\n        }\r\n      },\r\n      error => {\r\n        // Help modal setup is non-critical\r\n      },\r\n      {\r\n        category: ERROR_CATEGORIES.RENDERING,\r\n        context: { operation: 'help_modal_setup' },\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Setup footer links\r\n   */\r\n  setupFooterLinks() {\r\n    this.addEventListenerSafe('privacyLink', 'click', e => {\r\n      e.preventDefault();\r\n      this.showPrivacyPolicy();\r\n    });\r\n\r\n    this.addEventListenerSafe('disclaimerLink', 'click', e => {\r\n      e.preventDefault();\r\n      this.showDisclaimer();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggle language\r\n   */\r\n  toggleLanguage() {\r\n    safeAsync(\r\n      async () => {\r\n        i18n.toggleLanguage();\r\n        this.updateLanguage();\r\n      },\r\n      error => {\r\n        // Language toggle failure is non-critical\r\n      },\r\n      {\r\n        category: ERROR_CATEGORIES.RENDERING,\r\n        context: { operation: 'language_toggle' },\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update UI language\r\n   */\r\n  updateLanguage() {\r\n    // Update HTML lang attribute\r\n    document.documentElement.lang = i18n.getCurrentLanguage();\r\n\r\n    // Update header elements\r\n    this.updateElementText('.app-header h1', t('appTitle'));\r\n    this.updateElementText('.emergency-badge', t('emergencyBadge'));\r\n\r\n    // Update button tooltips and aria-labels\r\n    this.updateButtonAttributes('languageToggle', t('languageToggle'));\r\n    this.updateButtonAttributes('helpButton', t('helpButton'));\r\n    this.updateButtonAttributes('darkModeToggle', t('darkModeButton'));\r\n\r\n    // Update help modal\r\n    this.updateElementText('#modalTitle', t('helpTitle'));\r\n\r\n    // Update language toggle icon\r\n    const languageToggle = document.getElementById('languageToggle');\r\n    if (languageToggle) {\r\n      const currentLang = i18n.getCurrentLanguage();\r\n      languageToggle.textContent = currentLang === 'en' ? '🇬🇧' : '🇩🇪';\r\n      languageToggle.dataset.lang = currentLang;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update element text safely\r\n   * @param {string} selector - Element selector\r\n   * @param {string} text - New text content\r\n   */\r\n  updateElementText(selector, text) {\r\n    const element = document.querySelector(selector);\r\n    if (element && text) {\r\n      element.textContent = text;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update button attributes safely\r\n   * @param {string} elementId - Button element ID\r\n   * @param {string} text - Tooltip text\r\n   */\r\n  updateButtonAttributes(elementId, text) {\r\n    const element = document.getElementById(elementId);\r\n    if (element && text) {\r\n      element.title = text;\r\n      element.setAttribute('aria-label', text);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle dark mode\r\n   */\r\n  toggleDarkMode() {\r\n    const darkModeToggle = document.getElementById('darkModeToggle');\r\n    document.body.classList.toggle('dark-mode');\r\n    const isDark = document.body.classList.contains('dark-mode');\r\n\r\n    if (darkModeToggle) {\r\n      darkModeToggle.textContent = isDark ? '☀️' : '🌙';\r\n    }\r\n\r\n    localStorage.setItem('theme', isDark ? 'dark' : 'light');\r\n  }\r\n\r\n  /**\r\n   * Research mode management\r\n   */\r\n  initializeResearchMode() {\r\n    const researchModeToggle = document.getElementById('researchModeToggle');\r\n    if (researchModeToggle) {\r\n      this.updateResearchMode();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update research mode visibility\r\n   */\r\n  updateResearchMode() {\r\n    const researchModeToggle = document.getElementById('researchModeToggle');\r\n    if (researchModeToggle) {\r\n      const currentModule = this.getCurrentModuleFromResults();\r\n      const shouldShow = currentModule === 'limited' || currentModule === 'full';\r\n\r\n      researchModeToggle.style.display = shouldShow ? 'flex' : 'none';\r\n      researchModeToggle.style.opacity = shouldShow ? '1' : '0.5';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get current module from results\r\n   */\r\n  getCurrentModuleFromResults() {\r\n    const state = store.getState();\r\n    if (state.currentScreen !== 'results' || !state.results?.ich?.module) {\r\n      return null;\r\n    }\r\n\r\n    const module = state.results.ich.module.toLowerCase();\r\n    if (module.includes('coma')) {\r\n      return 'coma';\r\n    }\r\n    if (module.includes('limited')) {\r\n      return 'limited';\r\n    }\r\n    if (module.includes('full')) {\r\n      return 'full';\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Toggle research mode\r\n   */\r\n  toggleResearchMode() {\r\n    const researchPanel = document.getElementById('researchPanel');\r\n    if (!researchPanel) {\r\n      return;\r\n    }\r\n\r\n    const isVisible = researchPanel.style.display !== 'none';\r\n    researchPanel.style.display = isVisible ? 'none' : 'block';\r\n\r\n    // Update button visual state\r\n    const researchModeToggle = document.getElementById('researchModeToggle');\r\n    if (researchModeToggle) {\r\n      researchModeToggle.style.background = isVisible\r\n        ? 'rgba(255, 255, 255, 0.1)'\r\n        : 'rgba(0, 102, 204, 0.2)';\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Show research activation message\r\n   */\r\n  showResearchActivationMessage() {\r\n    safeAsync(\r\n      async () => {\r\n        const message = document.createElement('div');\r\n        message.className = 'research-activation-toast';\r\n\r\n        try {\r\n          safeSetInnerHTML(\r\n            message,\r\n            `\r\n            <div class=\"toast-content\">\r\n              🔬 <strong>Research Mode Activated</strong><br>\r\n              <small>Model comparison features enabled</small>\r\n            </div>\r\n          `\r\n          );\r\n        } catch (error) {\r\n          message.textContent = '🔬 Research Mode Activated - Model comparison features enabled';\r\n        }\r\n\r\n        document.body.appendChild(message);\r\n\r\n        setTimeout(() => {\r\n          if (document.body.contains(message)) {\r\n            document.body.removeChild(message);\r\n          }\r\n        }, 3000);\r\n      },\r\n      error => {\r\n        // Research message failure is non-critical\r\n      },\r\n      {\r\n        category: ERROR_CATEGORIES.RENDERING,\r\n        context: { operation: 'research_activation_message' },\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Open modal safely\r\n   * @param {string} modalId - Modal element ID\r\n   */\r\n  openModal(modalId) {\r\n    const modal = document.getElementById(modalId);\r\n    if (modal) {\r\n      modal.style.display = 'flex';\r\n      modal.classList.add('show');\r\n      modal.setAttribute('aria-hidden', 'false');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Close modal safely\r\n   * @param {string} modalId - Modal element ID\r\n   */\r\n  closeModal(modalId) {\r\n    const modal = document.getElementById(modalId);\r\n    if (modal) {\r\n      modal.classList.remove('show');\r\n      modal.style.display = 'none';\r\n      modal.setAttribute('aria-hidden', 'true');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show privacy policy\r\n   */\r\n  showPrivacyPolicy() {\r\n    alert(\r\n      'Privacy Policy: This tool processes data locally. No patient data is stored or transmitted.'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Show disclaimer\r\n   */\r\n  showDisclaimer() {\r\n    alert(\r\n      'Medical Disclaimer: This tool is for clinical decision support only. Always use clinical judgment and follow local protocols.'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set current year in footer\r\n   */\r\n  setCurrentYear() {\r\n    const yearElement = document.getElementById('currentYear');\r\n    if (yearElement) {\r\n      yearElement.textContent = new Date().getFullYear();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle UI errors gracefully\r\n   * @param {Error} error - Error object\r\n   * @param {string} context - Error context\r\n   */\r\n  handleUIError(error, context) {\r\n    // Log error without crashing the UI\r\n    try {\r\n      const errorEvent = new CustomEvent('uiError', {\r\n        detail: { error, context, timestamp: Date.now() },\r\n      });\r\n      document.dispatchEvent(errorEvent);\r\n    } catch (e) {\r\n      // Even error reporting failed - continue silently\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload critical UI components\r\n   */\r\n  async preloadCriticalComponents() {\r\n    return safeAsync(\r\n      async () => {\r\n        // Preload critical UI elements and validate they exist\r\n        const criticalElements = ['appContainer', 'helpModal', 'languageToggle', 'darkModeToggle'];\r\n\r\n        const missingElements = criticalElements.filter(id => !document.getElementById(id));\r\n\r\n        if (missingElements.length > 0) {\r\n          throw new Error(`Missing critical UI elements: ${missingElements.join(', ')}`);\r\n        }\r\n\r\n        return true;\r\n      },\r\n      error => false,\r\n      {\r\n        category: ERROR_CATEGORIES.RENDERING,\r\n        context: { operation: 'preload_critical_components' },\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get UI manager status\r\n   */\r\n  getStatus() {\r\n    return {\r\n      isInitialized: this.isInitialized,\r\n      hasContainer: !!this.container,\r\n      eventListenersCount: this.eventListeners.size,\r\n      currentLanguage: i18n.getCurrentLanguage(),\r\n      isDarkMode: document.body.classList.contains('dark-mode'),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Cleanup when destroyed\r\n   */\r\n  destroy() {\r\n    // Remove all event listeners\r\n    this.eventListeners.forEach(({ element, handler }, key) => {\r\n      const [, event] = key.split('_');\r\n      if (element && handler) {\r\n        element.removeEventListener(event, handler);\r\n      }\r\n    });\r\n\r\n    this.eventListeners.clear();\r\n    this.container = null;\r\n    this.isInitialized = false;\r\n  }\r\n}\r\n","/**\r\n * Theme Management System\r\n * iGFAP Stroke Triage Assistant - Theme & Styling Coordination\r\n *\r\n * Handles theme switching, dark mode, and styling preferences\r\n *\r\n * @author iGFAP Project Team\r\n * @contact Deepak Bos <bosdeepak@gmail.com>\r\n */\r\n\r\nimport { safeAsync, ERROR_CATEGORIES } from '../utils/error-handler.js';\r\n\r\n/**\r\n * Manages application themes and styling\r\n */\r\nexport class ThemeManager {\r\n  constructor() {\r\n    this.currentTheme = 'light';\r\n    this.isInitialized = false;\r\n    this.storageKey = 'theme';\r\n  }\r\n\r\n  /**\r\n   * Initialize theme management\r\n   */\r\n  initialize() {\r\n    this.loadSavedTheme();\r\n    this.setupThemeDetection();\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  /**\r\n   * Load saved theme from storage\r\n   */\r\n  async loadSavedTheme() {\r\n    return safeAsync(\r\n      async () => {\r\n        const savedTheme = localStorage.getItem(this.storageKey);\r\n        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n\r\n        // Determine theme to use\r\n        let themeToApply;\r\n        if (savedTheme === 'dark' || savedTheme === 'light') {\r\n          themeToApply = savedTheme;\r\n        } else if (prefersDark) {\r\n          themeToApply = 'dark';\r\n        } else {\r\n          themeToApply = 'light';\r\n        }\r\n\r\n        this.applyTheme(themeToApply);\r\n        this.updateThemeButton();\r\n\r\n        return themeToApply;\r\n      },\r\n      (error) => {\r\n        // Fallback to light theme\r\n        this.applyTheme('light');\r\n        this.updateThemeButton();\r\n        return 'light';\r\n      },\r\n      {\r\n        category: ERROR_CATEGORIES.STORAGE,\r\n        context: { operation: 'load_saved_theme' },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Setup system theme detection\r\n   */\r\n  setupThemeDetection() {\r\n    // Listen for system theme changes\r\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n\r\n    const handleSystemThemeChange = (e) => {\r\n      // Only auto-switch if user hasn't explicitly set a preference\r\n      const savedTheme = localStorage.getItem(this.storageKey);\r\n      if (!savedTheme) {\r\n        const newTheme = e.matches ? 'dark' : 'light';\r\n        this.applyTheme(newTheme);\r\n        this.updateThemeButton();\r\n      }\r\n    };\r\n\r\n    // Use the newer addEventListener if available\r\n    if (mediaQuery.addEventListener) {\r\n      mediaQuery.addEventListener('change', handleSystemThemeChange);\r\n    } else {\r\n      // Fallback for older browsers\r\n      mediaQuery.addListener(handleSystemThemeChange);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Apply theme to the application\r\n   * @param {string} theme - Theme name ('light' or 'dark')\r\n   */\r\n  applyTheme(theme) {\r\n    if (theme !== 'light' && theme !== 'dark') {\r\n      theme = 'light';\r\n    }\r\n\r\n    this.currentTheme = theme;\r\n\r\n    // Apply theme class to body\r\n    if (theme === 'dark') {\r\n      document.body.classList.add('dark-mode');\r\n    } else {\r\n      document.body.classList.remove('dark-mode');\r\n    }\r\n\r\n    // Update meta theme-color for mobile browsers\r\n    this.updateMetaThemeColor(theme);\r\n\r\n    // Dispatch theme change event\r\n    this.dispatchThemeChangeEvent(theme);\r\n  }\r\n\r\n  /**\r\n   * Toggle between light and dark themes\r\n   */\r\n  toggleTheme() {\r\n    const newTheme = this.currentTheme === 'dark' ? 'light' : 'dark';\r\n    this.setTheme(newTheme);\r\n  }\r\n\r\n  /**\r\n   * Set specific theme\r\n   * @param {string} theme - Theme to set\r\n   */\r\n  setTheme(theme) {\r\n    return safeAsync(\r\n      async () => {\r\n        this.applyTheme(theme);\r\n        this.saveTheme(theme);\r\n        this.updateThemeButton();\r\n        return theme;\r\n      },\r\n      (error) =>\r\n        // Theme setting failed, keep current theme\r\n        this.currentTheme,\r\n      {\r\n        category: ERROR_CATEGORIES.STORAGE,\r\n        context: { operation: 'set_theme', theme },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Save theme preference to storage\r\n   * @param {string} theme - Theme to save\r\n   */\r\n  saveTheme(theme) {\r\n    try {\r\n      localStorage.setItem(this.storageKey, theme);\r\n    } catch (error) {\r\n      // Storage failed - continue without saving\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update theme toggle button\r\n   */\r\n  updateThemeButton() {\r\n    const darkModeToggle = document.getElementById('darkModeToggle');\r\n    if (darkModeToggle) {\r\n      const isDark = this.currentTheme === 'dark';\r\n      darkModeToggle.textContent = isDark ? '☀️' : '🌙';\r\n\r\n      // Update aria-label for accessibility\r\n      const label = isDark ? 'Switch to light mode' : 'Switch to dark mode';\r\n      darkModeToggle.setAttribute('aria-label', label);\r\n      darkModeToggle.title = label;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update meta theme-color for mobile browsers\r\n   * @param {string} theme - Current theme\r\n   */\r\n  updateMetaThemeColor(theme) {\r\n    let metaThemeColor = document.querySelector('meta[name=\"theme-color\"]');\r\n\r\n    if (!metaThemeColor) {\r\n      metaThemeColor = document.createElement('meta');\r\n      metaThemeColor.name = 'theme-color';\r\n      document.head.appendChild(metaThemeColor);\r\n    }\r\n\r\n    // Set appropriate theme color\r\n    const themeColors = {\r\n      light: '#ffffff',\r\n      dark: '#1a1a1a',\r\n    };\r\n\r\n    metaThemeColor.content = themeColors[theme] || themeColors.light;\r\n  }\r\n\r\n  /**\r\n   * Dispatch theme change event\r\n   * @param {string} theme - New theme\r\n   */\r\n  dispatchThemeChangeEvent(theme) {\r\n    try {\r\n      const event = new CustomEvent('themeChanged', {\r\n        detail: {\r\n          theme,\r\n          timestamp: Date.now(),\r\n        },\r\n      });\r\n      document.dispatchEvent(event);\r\n    } catch (error) {\r\n      // Event dispatch failed - continue silently\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get current theme\r\n   * @returns {string} - Current theme name\r\n   */\r\n  getCurrentTheme() {\r\n    return this.currentTheme;\r\n  }\r\n\r\n  /**\r\n   * Check if dark mode is active\r\n   * @returns {boolean} - True if dark mode is active\r\n   */\r\n  isDarkMode() {\r\n    return this.currentTheme === 'dark';\r\n  }\r\n\r\n  /**\r\n   * Get system preferred theme\r\n   * @returns {string} - System preferred theme\r\n   */\r\n  getSystemPreferredTheme() {\r\n    try {\r\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n      return prefersDark ? 'dark' : 'light';\r\n    } catch (error) {\r\n      return 'light';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset theme to system preference\r\n   */\r\n  resetToSystemTheme() {\r\n    const systemTheme = this.getSystemPreferredTheme();\r\n    this.setTheme(systemTheme);\r\n\r\n    // Remove explicit preference so it follows system changes\r\n    try {\r\n      localStorage.removeItem(this.storageKey);\r\n    } catch (error) {\r\n      // Storage operation failed - continue\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get theme status information\r\n   */\r\n  getStatus() {\r\n    return {\r\n      isInitialized: this.isInitialized,\r\n      currentTheme: this.currentTheme,\r\n      isDarkMode: this.isDarkMode(),\r\n      systemPreferred: this.getSystemPreferredTheme(),\r\n      hasExplicitPreference: !!localStorage.getItem(this.storageKey),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Cleanup when destroyed\r\n   */\r\n  destroy() {\r\n    this.isInitialized = false;\r\n  }\r\n}\r\n","/**\r\n * Session Management System\r\n * iGFAP Stroke Triage Assistant - Session & Data Persistence\r\n *\r\n * Handles session management, auto-save, and data persistence\r\n *\r\n * @author iGFAP Project Team\r\n * @contact Deepak Bos <bosdeepak@gmail.com>\r\n */\r\n\r\nimport { store } from '../state/store.js';\r\nimport { APP_CONFIG } from '../config.js';\r\nimport { authManager } from '../auth/authentication.js';\r\nimport { safeAsync, ERROR_CATEGORIES, ERROR_SEVERITY } from '../utils/error-handler.js';\r\nimport { secureStore, secureRetrieve, secureRemove } from '../security/data-encryption.js';\r\nimport { medicalLogger, LOG_CATEGORIES } from '../utils/medical-logger.js';\r\n\r\n/**\r\n * Manages session lifecycle and data persistence\r\n */\r\nexport class SessionManager {\r\n  constructor() {\r\n    this.autoSaveInterval = null;\r\n    this.sessionCheckInterval = null;\r\n    this.isInitialized = false;\r\n    this.lastAutoSave = 0;\r\n  }\r\n\r\n  /**\r\n   * Initialize session management\r\n   */\r\n  initialize() {\r\n    this.validateStoredSession();\r\n    this.startAutoSave();\r\n    this.setupSessionTimeout();\r\n    this.setupSessionValidation();\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  /**\r\n   * Validate stored session data\r\n   */\r\n  async validateStoredSession() {\r\n    return safeAsync(\r\n      async () => {\r\n        if (!authManager.isValidSession()) {\r\n          // Session invalid - clear any stored data\r\n          this.clearSessionData();\r\n          return false;\r\n        }\r\n\r\n        // Session valid - restore any saved form data\r\n        this.restoreFormData();\r\n        return true;\r\n      },\r\n      (error) => {\r\n        // Session validation failed - clear data for safety\r\n        this.clearSessionData();\r\n        return false;\r\n      },\r\n      {\r\n        category: ERROR_CATEGORIES.AUTHENTICATION,\r\n        severity: ERROR_SEVERITY.MEDIUM,\r\n        context: { operation: 'validate_stored_session' },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Start auto-save functionality\r\n   */\r\n  startAutoSave() {\r\n    if (this.autoSaveInterval) {\r\n      clearInterval(this.autoSaveInterval);\r\n    }\r\n\r\n    this.autoSaveInterval = setInterval(() => {\r\n      this.performAutoSave();\r\n    }, APP_CONFIG.autoSaveInterval);\r\n  }\r\n\r\n  /**\r\n   * Perform auto-save of current form data\r\n   */\r\n  async performAutoSave() {\r\n    return safeAsync(\r\n      async () => {\r\n        const container = document.getElementById('appContainer');\r\n        if (!container) {\r\n          return false;\r\n        }\r\n\r\n        const forms = container.querySelectorAll('form[data-module]');\r\n        let savedCount = 0;\r\n\r\n        for (const form of forms) {\r\n          try {\r\n            const { module } = form.dataset;\r\n            if (module) {\r\n              const formData = this.extractFormData(form);\r\n              const hasChanges = this.hasFormDataChanged(module, formData);\r\n\r\n              if (hasChanges) {\r\n                store.setFormData(module, formData);\r\n                savedCount++;\r\n              }\r\n            }\r\n          } catch (error) {\r\n            // Continue with other forms if one fails\r\n          }\r\n        }\r\n\r\n        this.lastAutoSave = Date.now();\r\n        return savedCount > 0;\r\n      },\r\n      (error) =>\r\n        // Auto-save failure is non-critical\r\n        false,\r\n      {\r\n        category: ERROR_CATEGORIES.STORAGE,\r\n        severity: ERROR_SEVERITY.LOW,\r\n        context: { operation: 'auto_save' },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Extract form data safely\r\n   * @param {HTMLFormElement} form - Form element\r\n   * @returns {Object} - Form data object\r\n   */\r\n  extractFormData(form) {\r\n    const formData = new FormData(form);\r\n    const data = {};\r\n\r\n    formData.forEach((value, key) => {\r\n      const element = form.elements[key];\r\n      if (element) {\r\n        if (element.type === 'checkbox') {\r\n          data[key] = element.checked;\r\n        } else if (element.type === 'number') {\r\n          const numValue = parseFloat(value);\r\n          data[key] = isNaN(numValue) ? value : numValue;\r\n        } else {\r\n          data[key] = value;\r\n        }\r\n      }\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Check if form data has changed\r\n   * @param {string} module - Module name\r\n   * @param {Object} newData - New form data\r\n   * @returns {boolean} - True if data has changed\r\n   */\r\n  hasFormDataChanged(module, newData) {\r\n    try {\r\n      const currentData = store.getFormData(module);\r\n      return JSON.stringify(currentData) !== JSON.stringify(newData);\r\n    } catch (error) {\r\n      // If comparison fails, assume data has changed\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Restore saved form data\r\n   */\r\n  restoreFormData() {\r\n    safeAsync(\r\n      async () => {\r\n        const container = document.getElementById('appContainer');\r\n        if (!container) {\r\n          return;\r\n        }\r\n\r\n        const forms = container.querySelectorAll('form[data-module]');\r\n\r\n        forms.forEach((form) => {\r\n          try {\r\n            const { module } = form.dataset;\r\n            if (module) {\r\n              const savedData = store.getFormData(module);\r\n              if (savedData && Object.keys(savedData).length > 0) {\r\n                this.populateForm(form, savedData);\r\n              }\r\n            }\r\n          } catch (error) {\r\n            // Continue with other forms if one fails\r\n          }\r\n        });\r\n      },\r\n      (error) => {\r\n        // Form restoration failure is non-critical\r\n      },\r\n      {\r\n        category: ERROR_CATEGORIES.STORAGE,\r\n        context: { operation: 'restore_form_data' },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Populate form with saved data\r\n   * @param {HTMLFormElement} form - Form to populate\r\n   * @param {Object} data - Data to populate with\r\n   */\r\n  populateForm(form, data) {\r\n    Object.entries(data).forEach(([key, value]) => {\r\n      const element = form.elements[key];\r\n      if (element) {\r\n        try {\r\n          if (element.type === 'checkbox') {\r\n            element.checked = Boolean(value);\r\n          } else if (element.type === 'radio') {\r\n            if (element.value === value) {\r\n              element.checked = true;\r\n            }\r\n          } else {\r\n            element.value = value;\r\n          }\r\n\r\n          // Trigger input event for any listeners\r\n          element.dispatchEvent(new Event('input', { bubbles: true }));\r\n        } catch (error) {\r\n          // Skip this field if population fails\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Setup session timeout monitoring\r\n   */\r\n  setupSessionTimeout() {\r\n    // Setup session timeout warning\r\n    setTimeout(() => {\r\n      this.showSessionTimeoutWarning();\r\n    }, APP_CONFIG.sessionTimeout - 60000); // Warn 1 minute before timeout\r\n  }\r\n\r\n  /**\r\n   * Setup periodic session validation\r\n   */\r\n  setupSessionValidation() {\r\n    // Check session validity every 5 minutes\r\n    this.sessionCheckInterval = setInterval(() => {\r\n      this.validateCurrentSession();\r\n    }, 5 * 60 * 1000);\r\n  }\r\n\r\n  /**\r\n   * Validate current session\r\n   */\r\n  async validateCurrentSession() {\r\n    return safeAsync(\r\n      async () => {\r\n        if (!authManager.isValidSession()) {\r\n          this.handleSessionExpiry();\r\n          return false;\r\n        }\r\n\r\n        // Optionally validate with server\r\n        const isValid = await authManager.validateSessionWithServer();\r\n        if (!isValid) {\r\n          this.handleSessionExpiry();\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      },\r\n      (error) =>\r\n        // Session validation failed - continue with local session\r\n        authManager.isValidSession(),\r\n      {\r\n        category: ERROR_CATEGORIES.AUTHENTICATION,\r\n        context: { operation: 'validate_current_session' },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Show session timeout warning\r\n   */\r\n  showSessionTimeoutWarning() {\r\n    safeAsync(\r\n      async () => {\r\n        const shouldContinue = confirm(\r\n          'Your session will expire in 1 minute. Would you like to continue?',\r\n        );\r\n\r\n        if (shouldContinue) {\r\n          // Extend session\r\n          authManager.updateActivity();\r\n          // Setup another timeout warning\r\n          this.setupSessionTimeout();\r\n        } else {\r\n          // User chose to end session\r\n          this.endSession();\r\n        }\r\n      },\r\n      (error) => {\r\n        // If warning fails, continue session\r\n      },\r\n      {\r\n        category: ERROR_CATEGORIES.AUTHENTICATION,\r\n        context: { operation: 'session_timeout_warning' },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handle session expiry\r\n   */\r\n  handleSessionExpiry() {\r\n    this.clearSessionData();\r\n    store.navigate('login');\r\n\r\n    // Show expiry message\r\n    this.showSessionExpiredMessage();\r\n  }\r\n\r\n  /**\r\n   * Show session expired message\r\n   */\r\n  showSessionExpiredMessage() {\r\n    // Create a temporary message\r\n    const message = document.createElement('div');\r\n    message.style.cssText = `\r\n      position: fixed;\r\n      top: 20px;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      background: #ff9800;\r\n      color: white;\r\n      padding: 15px 20px;\r\n      border-radius: 8px;\r\n      z-index: 10000;\r\n      box-shadow: 0 4px 12px rgba(0,0,0,0.3);\r\n    `;\r\n    message.textContent = '⏰ Session expired. Please log in again.';\r\n\r\n    document.body.appendChild(message);\r\n\r\n    setTimeout(() => {\r\n      if (document.body.contains(message)) {\r\n        document.body.removeChild(message);\r\n      }\r\n    }, 5000);\r\n  }\r\n\r\n  /**\r\n   * End session manually\r\n   */\r\n  endSession() {\r\n    authManager.logout();\r\n    this.clearSessionData();\r\n    store.reset();\r\n    store.navigate('login');\r\n  }\r\n\r\n  /**\r\n   * Clear all session data\r\n   */\r\n  async clearSessionData() {\r\n    try {\r\n      medicalLogger.info('Clearing session data', {\r\n        category: LOG_CATEGORIES.SECURITY,\r\n      });\r\n\r\n      // Clear form data from store\r\n      store.clearAllFormData();\r\n\r\n      // Clear encrypted temporary data\r\n      await secureRemove('temp_data', true); // Use sessionStorage\r\n      await secureRemove('research_data', true);\r\n\r\n      // Clear any legacy unencrypted data\r\n      sessionStorage.removeItem('temp_data');\r\n      sessionStorage.removeItem('research_data');\r\n\r\n      medicalLogger.info('Session data cleared successfully', {\r\n        category: LOG_CATEGORIES.SECURITY,\r\n      });\r\n    } catch (error) {\r\n      medicalLogger.warn('Failed to clear some session data', {\r\n        category: LOG_CATEGORIES.SECURITY,\r\n        error: error.message,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Force save current state\r\n   */\r\n  async forceSave() {\r\n    return this.performAutoSave();\r\n  }\r\n\r\n  /**\r\n   * Get session status\r\n   */\r\n  getStatus() {\r\n    return {\r\n      isInitialized: this.isInitialized,\r\n      isAuthenticated: authManager.isValidSession(),\r\n      lastAutoSave: this.lastAutoSave,\r\n      autoSaveActive: !!this.autoSaveInterval,\r\n      sessionCheckActive: !!this.sessionCheckInterval,\r\n      sessionInfo: authManager.getSessionInfo?.() || {},\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Cleanup when destroyed\r\n   */\r\n  destroy() {\r\n    if (this.autoSaveInterval) {\r\n      clearInterval(this.autoSaveInterval);\r\n      this.autoSaveInterval = null;\r\n    }\r\n\r\n    if (this.sessionCheckInterval) {\r\n      clearInterval(this.sessionCheckInterval);\r\n      this.sessionCheckInterval = null;\r\n    }\r\n\r\n    this.isInitialized = false;\r\n  }\r\n}\r\n","/**\r\n * Medical Data Caching System\r\n * iGFAP Stroke Triage Assistant - Enterprise Caching Architecture\r\n *\r\n * Provides HIPAA-compliant caching with TTL and secure data handling\r\n */\r\n\r\nimport { medicalEventObserver, MEDICAL_EVENTS } from '../patterns/observer.js';\r\n\r\nimport { medicalPerformanceMonitor, PerformanceMetricType } from './medical-performance-monitor.js';\r\n\r\n/**\r\n * Cache storage types for different data sensitivity levels\r\n */\r\nexport const CacheStorageType = {\r\n  MEMORY: 'memory',\r\n  SESSION: 'session',\r\n  LOCAL: 'local',\r\n  INDEXED_DB: 'indexed_db',\r\n};\r\n\r\n/**\r\n * Cache entry priorities for medical data\r\n */\r\nexport const CachePriority = {\r\n  CRITICAL: 'critical', // Emergency data, never evict\r\n  HIGH: 'high', // Important medical data\r\n  NORMAL: 'normal', // Standard application data\r\n  LOW: 'low', // Non-critical data, evict first\r\n};\r\n\r\n/**\r\n * Default TTL values for different types of medical data (in milliseconds)\r\n */\r\nexport const MedicalCacheTTL = {\r\n  PATIENT_DATA: 30 * 60 * 1000, // 30 minutes\r\n  PREDICTION_RESULTS: 60 * 60 * 1000, // 1 hour\r\n  VALIDATION_RULES: 24 * 60 * 60 * 1000, // 24 hours\r\n  API_RESPONSES: 15 * 60 * 1000, // 15 minutes\r\n  UI_STATE: 10 * 60 * 1000, // 10 minutes\r\n  STATIC_CONFIG: 7 * 24 * 60 * 60 * 1000, // 7 days\r\n};\r\n\r\n/**\r\n * Cache entry with metadata and security features\r\n */\r\nclass CacheEntry {\r\n  constructor(key, value, ttl, priority = CachePriority.NORMAL, metadata = {}) {\r\n    this.key = key;\r\n    this.value = this.sanitizeValue(value);\r\n    this.ttl = ttl;\r\n    this.priority = priority;\r\n    this.metadata = {\r\n      ...metadata,\r\n      createdAt: Date.now(),\r\n      accessCount: 0,\r\n      lastAccessed: Date.now(),\r\n    };\r\n    this.expiresAt = ttl > 0 ? Date.now() + ttl : null;\r\n    this.encrypted = false;\r\n  }\r\n\r\n  /**\r\n   * Sanitize sensitive data before caching\r\n   */\r\n  sanitizeValue(value) {\r\n    if (typeof value !== 'object' || value === null) {\r\n      return value;\r\n    }\r\n\r\n    // Deep clone to avoid reference issues\r\n    const sanitized = JSON.parse(JSON.stringify(value));\r\n\r\n    // Remove or mask sensitive fields\r\n    const sensitiveFields = ['ssn', 'mrn', 'patient_id', 'user_id', 'session_token'];\r\n    this.removeSensitiveFields(sanitized, sensitiveFields);\r\n\r\n    return sanitized;\r\n  }\r\n\r\n  /**\r\n   * Recursively remove sensitive fields\r\n   */\r\n  removeSensitiveFields(obj, sensitiveFields) {\r\n    Object.keys(obj).forEach((key) => {\r\n      if (sensitiveFields.some((field) => key.toLowerCase().includes(field))) {\r\n        obj[key] = '[REDACTED]';\r\n      } else if (typeof obj[key] === 'object' && obj[key] !== null) {\r\n        this.removeSensitiveFields(obj[key], sensitiveFields);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Check if cache entry has expired\r\n   */\r\n  isExpired() {\r\n    return this.expiresAt !== null && Date.now() > this.expiresAt;\r\n  }\r\n\r\n  /**\r\n   * Mark entry as accessed\r\n   */\r\n  markAccessed() {\r\n    this.metadata.accessCount += 1;\r\n    this.metadata.lastAccessed = Date.now();\r\n  }\r\n\r\n  /**\r\n   * Get entry age in milliseconds\r\n   */\r\n  getAge() {\r\n    return Date.now() - this.metadata.createdAt;\r\n  }\r\n\r\n  /**\r\n   * Get time until expiration\r\n   */\r\n  getTimeToExpiration() {\r\n    if (this.expiresAt === null) {\r\n      return Infinity;\r\n    }\r\n    return Math.max(0, this.expiresAt - Date.now());\r\n  }\r\n\r\n  /**\r\n   * Calculate entry score for eviction (lower score = evict first)\r\n   */\r\n  getEvictionScore() {\r\n    const priorityWeights = {\r\n      [CachePriority.CRITICAL]: 1000,\r\n      [CachePriority.HIGH]: 100,\r\n      [CachePriority.NORMAL]: 10,\r\n      [CachePriority.LOW]: 1,\r\n    };\r\n\r\n    const priorityWeight = priorityWeights[this.priority] || 1;\r\n    const accessWeight = Math.log(this.metadata.accessCount + 1);\r\n    const ageWeight = 1 / (this.getAge() + 1);\r\n\r\n    return priorityWeight * accessWeight * ageWeight;\r\n  }\r\n}\r\n\r\n/**\r\n * Medical Cache Manager with HIPAA compliance\r\n */\r\nexport class MedicalCache {\r\n  constructor(storageType = CacheStorageType.MEMORY, options = {}) {\r\n    this.storageType = storageType;\r\n    this.options = {\r\n      maxSize: 100 * 1024 * 1024, // 100MB max cache size\r\n      maxEntries: 1000, // Maximum number of entries\r\n      cleanupInterval: 5 * 60 * 1000, // Cleanup every 5 minutes\r\n      enableEncryption: false, // Enable for sensitive data\r\n      enableMetrics: true,\r\n      ...options,\r\n    };\r\n\r\n    this.cache = new Map();\r\n    this.cleanupTimer = null;\r\n    this.totalSize = 0;\r\n    this.hitCount = 0;\r\n    this.missCount = 0;\r\n    this.evictionCount = 0;\r\n\r\n    this.initializeStorage();\r\n    this.startCleanupTimer();\r\n  }\r\n\r\n  /**\r\n   * Initialize storage backend\r\n   */\r\n  initializeStorage() {\r\n    switch (this.storageType) {\r\n      case CacheStorageType.SESSION:\r\n        this.storage = sessionStorage;\r\n        this.loadFromStorage();\r\n        break;\r\n      case CacheStorageType.LOCAL:\r\n        this.storage = localStorage;\r\n        this.loadFromStorage();\r\n        break;\r\n      case CacheStorageType.INDEXED_DB:\r\n        this.initializeIndexedDB();\r\n        break;\r\n      default:\r\n        this.storage = null; // Memory only\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load cache from storage\r\n   */\r\n  loadFromStorage() {\r\n    if (!this.storage) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const cacheData = this.storage.getItem('medical_cache');\r\n      if (cacheData) {\r\n        const parsed = JSON.parse(cacheData);\r\n        Object.entries(parsed).forEach(([key, entryData]) => {\r\n          const entry = new CacheEntry(\r\n            entryData.key,\r\n            entryData.value,\r\n            entryData.ttl,\r\n            entryData.priority,\r\n            entryData.metadata,\r\n          );\r\n          entry.expiresAt = entryData.expiresAt;\r\n\r\n          if (!entry.isExpired()) {\r\n            this.cache.set(key, entry);\r\n            this.totalSize += this.calculateSize(entry.value);\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      // ('Failed to load cache from storage:', error.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Save cache to storage\r\n   */\r\n  saveToStorage() {\r\n    if (!this.storage) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const cacheData = {};\r\n      this.cache.forEach((entry, key) => {\r\n        cacheData[key] = {\r\n          key: entry.key,\r\n          value: entry.value,\r\n          ttl: entry.ttl,\r\n          priority: entry.priority,\r\n          metadata: entry.metadata,\r\n          expiresAt: entry.expiresAt,\r\n        };\r\n      });\r\n\r\n      this.storage.setItem('medical_cache', JSON.stringify(cacheData));\r\n    } catch (error) {\r\n      // ('Failed to save cache to storage:', error.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize IndexedDB for large data caching\r\n   */\r\n  async initializeIndexedDB() {\r\n    // IndexedDB implementation for future enhancement\r\n    // ('IndexedDB cache initialization planned for future implementation');\r\n  }\r\n\r\n  /**\r\n   * Set cache entry\r\n   */\r\n  set(key, value, ttl = MedicalCacheTTL.API_RESPONSES, priority = CachePriority.NORMAL, metadata = {}) {\r\n    const metricId = medicalPerformanceMonitor.startMeasurement(\r\n      PerformanceMetricType.CACHE,\r\n      'cache_set',\r\n      { key, priority },\r\n    );\r\n\r\n    try {\r\n      // Check if we need to make space\r\n      this.ensureCapacity();\r\n\r\n      const entry = new CacheEntry(key, value, ttl, priority, metadata);\r\n      const size = this.calculateSize(value);\r\n\r\n      // Remove existing entry if present\r\n      if (this.cache.has(key)) {\r\n        const oldEntry = this.cache.get(key);\r\n        this.totalSize -= this.calculateSize(oldEntry.value);\r\n      }\r\n\r\n      this.cache.set(key, entry);\r\n      this.totalSize += size;\r\n\r\n      // Save to persistent storage\r\n      if (this.storageType !== CacheStorageType.MEMORY) {\r\n        this.saveToStorage();\r\n      }\r\n\r\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\r\n        action: 'cache_set',\r\n        key,\r\n        size,\r\n        ttl,\r\n        priority,\r\n      });\r\n\r\n      medicalPerformanceMonitor.endMeasurement(metricId, { success: true });\r\n      return true;\r\n    } catch (error) {\r\n      medicalPerformanceMonitor.endMeasurement(metricId, { success: false, error: error.message });\r\n      // ('Cache set error:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get cache entry\r\n   */\r\n  get(key) {\r\n    const metricId = medicalPerformanceMonitor.startMeasurement(\r\n      PerformanceMetricType.CACHE,\r\n      'cache_get',\r\n      { key },\r\n    );\r\n\r\n    try {\r\n      const entry = this.cache.get(key);\r\n\r\n      if (!entry) {\r\n        this.missCount += 1;\r\n        medicalPerformanceMonitor.endMeasurement(metricId, { hit: false });\r\n        return null;\r\n      }\r\n\r\n      if (entry.isExpired()) {\r\n        this.cache.delete(key);\r\n        this.totalSize -= this.calculateSize(entry.value);\r\n        this.missCount += 1;\r\n        medicalPerformanceMonitor.endMeasurement(metricId, { hit: false, expired: true });\r\n        return null;\r\n      }\r\n\r\n      entry.markAccessed();\r\n      this.hitCount += 1;\r\n\r\n      medicalPerformanceMonitor.endMeasurement(metricId, { hit: true });\r\n      return entry.value;\r\n    } catch (error) {\r\n      medicalPerformanceMonitor.endMeasurement(metricId, { hit: false, error: error.message });\r\n      // ('Cache get error:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if key exists and is not expired\r\n   */\r\n  has(key) {\r\n    const entry = this.cache.get(key);\r\n    return entry && !entry.isExpired();\r\n  }\r\n\r\n  /**\r\n   * Delete cache entry\r\n   */\r\n  delete(key) {\r\n    const entry = this.cache.get(key);\r\n    if (entry) {\r\n      this.totalSize -= this.calculateSize(entry.value);\r\n      this.cache.delete(key);\r\n\r\n      if (this.storageType !== CacheStorageType.MEMORY) {\r\n        this.saveToStorage();\r\n      }\r\n\r\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\r\n        action: 'cache_delete',\r\n        key,\r\n      });\r\n\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Clear all cache entries\r\n   */\r\n  clear() {\r\n    const entriesCleared = this.cache.size;\r\n    this.cache.clear();\r\n    this.totalSize = 0;\r\n\r\n    if (this.storage) {\r\n      this.storage.removeItem('medical_cache');\r\n    }\r\n\r\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\r\n      action: 'cache_cleared',\r\n      entriesCleared,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Ensure cache capacity by evicting entries\r\n   */\r\n  ensureCapacity() {\r\n    // Check size limit\r\n    while (this.totalSize > this.options.maxSize) {\r\n      this.evictLeastImportant();\r\n    }\r\n\r\n    // Check entry count limit\r\n    while (this.cache.size >= this.options.maxEntries) {\r\n      this.evictLeastImportant();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Evict least important entry based on priority and access patterns\r\n   */\r\n  evictLeastImportant() {\r\n    let lowestScore = Infinity;\r\n    let keyToEvict = null;\r\n\r\n    this.cache.forEach((entry, key) => {\r\n      // Never evict critical priority items unless expired\r\n      if (entry.priority === CachePriority.CRITICAL && !entry.isExpired()) {\r\n        return;\r\n      }\r\n\r\n      const score = entry.getEvictionScore();\r\n      if (score < lowestScore) {\r\n        lowestScore = score;\r\n        keyToEvict = key;\r\n      }\r\n    });\r\n\r\n    if (keyToEvict) {\r\n      this.delete(keyToEvict);\r\n      this.evictionCount += 1;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clean up expired entries\r\n   */\r\n  cleanup() {\r\n    const startTime = performance.now();\r\n    let cleanedCount = 0;\r\n\r\n    this.cache.forEach((entry, key) => {\r\n      if (entry.isExpired()) {\r\n        this.delete(key);\r\n        cleanedCount += 1;\r\n      }\r\n    });\r\n\r\n    const duration = performance.now() - startTime;\r\n\r\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\r\n      action: 'cache_cleanup',\r\n      cleanedCount,\r\n      duration,\r\n      remainingEntries: this.cache.size,\r\n    });\r\n\r\n    return cleanedCount;\r\n  }\r\n\r\n  /**\r\n   * Start automatic cleanup timer\r\n   */\r\n  startCleanupTimer() {\r\n    if (this.cleanupTimer) {\r\n      clearInterval(this.cleanupTimer);\r\n    }\r\n\r\n    this.cleanupTimer = setInterval(() => {\r\n      this.cleanup();\r\n    }, this.options.cleanupInterval);\r\n  }\r\n\r\n  /**\r\n   * Stop cleanup timer\r\n   */\r\n  stopCleanupTimer() {\r\n    if (this.cleanupTimer) {\r\n      clearInterval(this.cleanupTimer);\r\n      this.cleanupTimer = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate size of cached value (approximate)\r\n   */\r\n  calculateSize(value) {\r\n    try {\r\n      return JSON.stringify(value).length * 2; // Rough estimate (UTF-16)\r\n    } catch {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get cache statistics\r\n   */\r\n  getStats() {\r\n    const hitRate = this.hitCount + this.missCount > 0\r\n      ? (this.hitCount / (this.hitCount + this.missCount)) * 100\r\n      : 0;\r\n\r\n    return {\r\n      entries: this.cache.size,\r\n      totalSize: this.totalSize,\r\n      maxSize: this.options.maxSize,\r\n      hitCount: this.hitCount,\r\n      missCount: this.missCount,\r\n      hitRate: `${hitRate.toFixed(2)}%`,\r\n      evictionCount: this.evictionCount,\r\n      storageType: this.storageType,\r\n      utilizationPercent: `${((this.totalSize / this.options.maxSize) * 100).toFixed(2)}%`,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get cache entry information\r\n   */\r\n  getEntryInfo(key) {\r\n    const entry = this.cache.get(key);\r\n    if (!entry) {\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      key: entry.key,\r\n      size: this.calculateSize(entry.value),\r\n      priority: entry.priority,\r\n      ttl: entry.ttl,\r\n      age: entry.getAge(),\r\n      timeToExpiration: entry.getTimeToExpiration(),\r\n      accessCount: entry.metadata.accessCount,\r\n      lastAccessed: new Date(entry.metadata.lastAccessed).toISOString(),\r\n      isExpired: entry.isExpired(),\r\n      evictionScore: entry.getEvictionScore(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Dispose of cache and cleanup resources\r\n   */\r\n  dispose() {\r\n    this.stopCleanupTimer();\r\n    this.clear();\r\n  }\r\n}\r\n\r\n/**\r\n * Medical cache factory for different data types\r\n */\r\nexport class MedicalCacheFactory {\r\n  static patientDataCache = null;\r\n\r\n  static predictionCache = null;\r\n\r\n  static validationCache = null;\r\n\r\n  static apiCache = null;\r\n\r\n  /**\r\n   * Get or create patient data cache (session storage, short TTL)\r\n   */\r\n  static getPatientDataCache() {\r\n    if (!this.patientDataCache) {\r\n      this.patientDataCache = new MedicalCache(CacheStorageType.SESSION, {\r\n        maxSize: 10 * 1024 * 1024, // 10MB\r\n        maxEntries: 100,\r\n        enableEncryption: true,\r\n      });\r\n    }\r\n    return this.patientDataCache;\r\n  }\r\n\r\n  /**\r\n   * Get or create prediction results cache (memory only, medium TTL)\r\n   */\r\n  static getPredictionCache() {\r\n    if (!this.predictionCache) {\r\n      this.predictionCache = new MedicalCache(CacheStorageType.MEMORY, {\r\n        maxSize: 50 * 1024 * 1024, // 50MB\r\n        maxEntries: 500,\r\n      });\r\n    }\r\n    return this.predictionCache;\r\n  }\r\n\r\n  /**\r\n   * Get or create validation rules cache (local storage, long TTL)\r\n   */\r\n  static getValidationCache() {\r\n    if (!this.validationCache) {\r\n      this.validationCache = new MedicalCache(CacheStorageType.LOCAL, {\r\n        maxSize: 5 * 1024 * 1024, // 5MB\r\n        maxEntries: 200,\r\n      });\r\n    }\r\n    return this.validationCache;\r\n  }\r\n\r\n  /**\r\n   * Get or create API response cache (session storage, short TTL)\r\n   */\r\n  static getApiCache() {\r\n    if (!this.apiCache) {\r\n      this.apiCache = new MedicalCache(CacheStorageType.SESSION, {\r\n        maxSize: 20 * 1024 * 1024, // 20MB\r\n        maxEntries: 300,\r\n      });\r\n    }\r\n    return this.apiCache;\r\n  }\r\n\r\n  /**\r\n   * Clear all caches (privacy compliance)\r\n   */\r\n  static clearAllCaches() {\r\n    [\r\n      this.patientDataCache,\r\n      this.predictionCache,\r\n      this.validationCache,\r\n      this.apiCache,\r\n    ].forEach((cache) => {\r\n      if (cache) {\r\n        cache.clear();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Dispose all caches\r\n   */\r\n  static disposeAllCaches() {\r\n    [\r\n      this.patientDataCache,\r\n      this.predictionCache,\r\n      this.validationCache,\r\n      this.apiCache,\r\n    ].forEach((cache) => {\r\n      if (cache) {\r\n        cache.dispose();\r\n      }\r\n    });\r\n\r\n    this.patientDataCache = null;\r\n    this.predictionCache = null;\r\n    this.validationCache = null;\r\n    this.apiCache = null;\r\n  }\r\n}\r\n\r\n// Export convenience instances\r\nexport const patientDataCache = MedicalCacheFactory.getPatientDataCache();\r\nexport const predictionCache = MedicalCacheFactory.getPredictionCache();\r\nexport const validationCache = MedicalCacheFactory.getValidationCache();\r\nexport const apiCache = MedicalCacheFactory.getApiCache();\r\n","/**\r\n * Progressive Loading and Lazy Component System\r\n * iGFAP Stroke Triage Assistant - Phase 3 Advanced Features\r\n *\r\n * Provides intelligent component loading for optimal performance\r\n */\r\n\r\nimport { medicalEventObserver, MEDICAL_EVENTS } from '../patterns/observer.js';\r\nimport { medicalPerformanceMonitor, PerformanceMetricType } from '../performance/medical-performance-monitor.js';\r\n\r\n/**\r\n * Component loading priorities\r\n */\r\nexport const LoadPriority = {\r\n  CRITICAL: 'critical', // Load immediately\r\n  HIGH: 'high', // Load on interaction\r\n  NORMAL: 'normal', // Load on viewport\r\n  LOW: 'low', // Load on idle\r\n};\r\n\r\n/**\r\n * Component loading states\r\n */\r\nexport const LoadState = {\r\n  PENDING: 'pending',\r\n  LOADING: 'loading',\r\n  LOADED: 'loaded',\r\n  ERROR: 'error',\r\n};\r\n\r\n/**\r\n * Lazy component definition\r\n */\r\nclass LazyComponent {\r\n  constructor(name, loader, options = {}) {\r\n    this.name = name;\r\n    this.loader = loader;\r\n    this.priority = options.priority || LoadPriority.NORMAL;\r\n    this.state = LoadState.PENDING;\r\n    this.component = null;\r\n    this.error = null;\r\n    this.loadTime = null;\r\n    this.dependencies = options.dependencies || [];\r\n    this.retryCount = 0;\r\n    this.maxRetries = options.maxRetries || 3;\r\n    this.loadPromise = null;\r\n  }\r\n\r\n  /**\r\n   * Load the component\r\n   */\r\n  async load() {\r\n    if (this.state === LoadState.LOADED) {\r\n      return this.component;\r\n    }\r\n\r\n    if (this.loadPromise) {\r\n      return this.loadPromise;\r\n    }\r\n\r\n    const metricId = medicalPerformanceMonitor.startMeasurement(\r\n      PerformanceMetricType.USER_INTERACTION,\r\n      `lazy_load_${this.name}`,\r\n      { priority: this.priority },\r\n    );\r\n\r\n    this.state = LoadState.LOADING;\r\n    this.loadPromise = this.executeLoad(metricId);\r\n\r\n    return this.loadPromise;\r\n  }\r\n\r\n  /**\r\n   * Execute component loading with error handling\r\n   */\r\n  async executeLoad(metricId) {\r\n    try {\r\n      const startTime = performance.now();\r\n\r\n      // Load dependencies first\r\n      await this.loadDependencies();\r\n\r\n      // Load the component\r\n      this.component = await this.loader();\r\n      this.loadTime = performance.now() - startTime;\r\n      this.state = LoadState.LOADED;\r\n\r\n      medicalPerformanceMonitor.endMeasurement(metricId, {\r\n        success: true,\r\n        loadTime: this.loadTime,\r\n        retryCount: this.retryCount,\r\n      });\r\n\r\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\r\n        action: 'lazy_component_loaded',\r\n        component: this.name,\r\n        loadTime: this.loadTime,\r\n        priority: this.priority,\r\n      });\r\n\r\n      return this.component;\r\n    } catch (error) {\r\n      this.error = error;\r\n      this.retryCount++;\r\n\r\n      medicalPerformanceMonitor.endMeasurement(metricId, {\r\n        success: false,\r\n        error: error.message,\r\n        retryCount: this.retryCount,\r\n      });\r\n\r\n      if (this.retryCount < this.maxRetries) {\r\n        // (`⚠️ Component ${this.name} load failed, retrying (${this.retryCount}/${this.maxRetries}):`, error);\r\n\r\n        // Exponential backoff\r\n        const delay = Math.min(1000 * 2 ** (this.retryCount - 1), 5000);\r\n        await new Promise((resolve) => setTimeout(resolve, delay));\r\n\r\n        this.loadPromise = null;\r\n        return this.load();\r\n      }\r\n      this.state = LoadState.ERROR;\r\n      // (`❌ Component ${this.name} failed to load after ${this.maxRetries} attempts:`, error);\r\n\r\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\r\n        action: 'lazy_component_load_failed',\r\n        component: this.name,\r\n        error: error.message,\r\n        retryCount: this.retryCount,\r\n      });\r\n\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load component dependencies\r\n   */\r\n  async loadDependencies() {\r\n    if (this.dependencies.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const dependencyPromises = this.dependencies.map((dep) => {\r\n      if (typeof dep === 'string') {\r\n        // Load dependency by name\r\n        return LazyLoader.load(dep);\r\n      } if (typeof dep === 'function') {\r\n        // Load dependency function\r\n        return dep();\r\n      }\r\n      // Assume it's a lazy component\r\n      return dep.load();\r\n    });\r\n\r\n    await Promise.all(dependencyPromises);\r\n  }\r\n\r\n  /**\r\n   * Get component status\r\n   */\r\n  getStatus() {\r\n    return {\r\n      name: this.name,\r\n      state: this.state,\r\n      priority: this.priority,\r\n      loadTime: this.loadTime,\r\n      error: this.error?.message,\r\n      retryCount: this.retryCount,\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Progressive component loader with intelligent scheduling\r\n */\r\nexport class LazyLoader {\r\n  constructor() {\r\n    this.components = new Map();\r\n    this.intersectionObserver = null;\r\n    this.idleCallback = null;\r\n    this.loadQueue = {\r\n      [LoadPriority.CRITICAL]: [],\r\n      [LoadPriority.HIGH]: [],\r\n      [LoadPriority.NORMAL]: [],\r\n      [LoadPriority.LOW]: [],\r\n    };\r\n    this.isProcessingQueue = false;\r\n\r\n    this.initializeObservers();\r\n  }\r\n\r\n  /**\r\n   * Initialize viewport and idle observers\r\n   */\r\n  initializeObservers() {\r\n    // Intersection Observer for viewport-based loading\r\n    if ('IntersectionObserver' in window) {\r\n      this.intersectionObserver = new IntersectionObserver(\r\n        (entries) => this.handleIntersectionChanges(entries),\r\n        {\r\n          rootMargin: '50px',\r\n          threshold: 0.1,\r\n        },\r\n      );\r\n    }\r\n\r\n    // Idle callback for low-priority loading\r\n    this.scheduleIdleLoading();\r\n  }\r\n\r\n  /**\r\n   * Register a lazy component\r\n   */\r\n  register(name, loader, options = {}) {\r\n    const component = new LazyComponent(name, loader, options);\r\n    this.components.set(name, component);\r\n\r\n    // Add to appropriate load queue\r\n    this.loadQueue[component.priority].push(component);\r\n\r\n    // Start loading critical components immediately\r\n    if (component.priority === LoadPriority.CRITICAL) {\r\n      this.processLoadQueue();\r\n    }\r\n\r\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\r\n      action: 'lazy_component_registered',\r\n      component: name,\r\n      priority: component.priority,\r\n    });\r\n\r\n    return component;\r\n  }\r\n\r\n  /**\r\n   * Load a component by name\r\n   */\r\n  async load(name) {\r\n    const component = this.components.get(name);\r\n    if (!component) {\r\n      throw new Error(`Component '${name}' not registered`);\r\n    }\r\n\r\n    return component.load();\r\n  }\r\n\r\n  /**\r\n   * Preload components based on priority\r\n   */\r\n  async preload(priority = LoadPriority.HIGH) {\r\n    const priorities = [LoadPriority.CRITICAL, LoadPriority.HIGH, LoadPriority.NORMAL, LoadPriority.LOW];\r\n    const targetPriorities = priorities.slice(0, priorities.indexOf(priority) + 1);\r\n\r\n    const preloadPromises = [];\r\n\r\n    targetPriorities.forEach((pri) => {\r\n      this.loadQueue[pri].forEach((component) => {\r\n        if (component.state === LoadState.PENDING) {\r\n          preloadPromises.push(component.load());\r\n        }\r\n      });\r\n    });\r\n\r\n    await Promise.allSettled(preloadPromises);\r\n\r\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\r\n      action: 'lazy_components_preloaded',\r\n      priority,\r\n      count: preloadPromises.length,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Observe element for viewport-based loading\r\n   */\r\n  observeElement(element, componentName) {\r\n    if (!this.intersectionObserver) {\r\n      return;\r\n    }\r\n\r\n    element.dataset.lazyComponent = componentName;\r\n    this.intersectionObserver.observe(element);\r\n  }\r\n\r\n  /**\r\n   * Handle intersection observer changes\r\n   */\r\n  handleIntersectionChanges(entries) {\r\n    entries.forEach((entry) => {\r\n      if (entry.isIntersecting) {\r\n        const componentName = entry.target.dataset.lazyComponent;\r\n        if (componentName) {\r\n          this.load(componentName).catch((error) => {\r\n            // (`Failed to load component ${componentName}:`, error);\r\n          });\r\n\r\n          // Stop observing once loaded\r\n          this.intersectionObserver.unobserve(entry.target);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Process load queue based on priority\r\n   */\r\n  async processLoadQueue() {\r\n    if (this.isProcessingQueue) {\r\n      return;\r\n    }\r\n\r\n    this.isProcessingQueue = true;\r\n\r\n    try {\r\n      // Process critical components first\r\n      await this.processQueueByPriority(LoadPriority.CRITICAL);\r\n\r\n      // Process high priority components\r\n      await this.processQueueByPriority(LoadPriority.HIGH);\r\n    } catch (error) {\r\n      // ('Error processing load queue:', error);\r\n    } finally {\r\n      this.isProcessingQueue = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Process components of specific priority\r\n   */\r\n  async processQueueByPriority(priority) {\r\n    const queue = this.loadQueue[priority];\r\n    const pendingComponents = queue.filter((comp) => comp.state === LoadState.PENDING);\r\n\r\n    if (pendingComponents.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const loadPromises = pendingComponents.map((component) => component.load().catch((error) =>\r\n      // (`Component ${component.name} failed to load:`, error);\r\n      null));\r\n\r\n    await Promise.allSettled(loadPromises);\r\n  }\r\n\r\n  /**\r\n   * Schedule idle loading for low-priority components\r\n   */\r\n  scheduleIdleLoading() {\r\n    const scheduleNext = () => {\r\n      if ('requestIdleCallback' in window) {\r\n        this.idleCallback = requestIdleCallback((deadline) => {\r\n          this.processIdleQueue(deadline);\r\n          scheduleNext();\r\n        }, { timeout: 5000 });\r\n      } else {\r\n        // Fallback for browsers without requestIdleCallback\r\n        setTimeout(() => {\r\n          this.processIdleQueue({ timeRemaining: () => 50 });\r\n          scheduleNext();\r\n        }, 100);\r\n      }\r\n    };\r\n\r\n    scheduleNext();\r\n  }\r\n\r\n  /**\r\n   * Process low-priority components during idle time\r\n   */\r\n  async processIdleQueue(deadline) {\r\n    const normalQueue = this.loadQueue[LoadPriority.NORMAL];\r\n    const lowQueue = this.loadQueue[LoadPriority.LOW];\r\n\r\n    // Process normal priority first, then low priority\r\n    const pendingComponents = [\r\n      ...normalQueue.filter((comp) => comp.state === LoadState.PENDING),\r\n      ...lowQueue.filter((comp) => comp.state === LoadState.PENDING),\r\n    ];\r\n\r\n    for (const component of pendingComponents) {\r\n      if (deadline.timeRemaining() > 10) { // Need at least 10ms\r\n        try {\r\n          await component.load();\r\n        } catch (error) {\r\n          // (`Idle loading failed for ${component.name}:`, error);\r\n        }\r\n      } else {\r\n        break; // No more time available\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get loader statistics\r\n   */\r\n  getStats() {\r\n    const stats = {\r\n      total: this.components.size,\r\n      byState: {\r\n        pending: 0, loading: 0, loaded: 0, error: 0,\r\n      },\r\n      byPriority: {\r\n        critical: 0, high: 0, normal: 0, low: 0,\r\n      },\r\n      totalLoadTime: 0,\r\n      averageLoadTime: 0,\r\n    };\r\n\r\n    let totalLoadTime = 0;\r\n    let loadedCount = 0;\r\n\r\n    this.components.forEach((component) => {\r\n      stats.byState[component.state]++;\r\n      stats.byPriority[component.priority]++;\r\n\r\n      if (component.loadTime) {\r\n        totalLoadTime += component.loadTime;\r\n        loadedCount++;\r\n      }\r\n    });\r\n\r\n    stats.totalLoadTime = totalLoadTime;\r\n    stats.averageLoadTime = loadedCount > 0 ? totalLoadTime / loadedCount : 0;\r\n\r\n    return stats;\r\n  }\r\n\r\n  /**\r\n   * Force reload a component\r\n   */\r\n  async reload(name) {\r\n    const component = this.components.get(name);\r\n    if (!component) {\r\n      throw new Error(`Component '${name}' not registered`);\r\n    }\r\n\r\n    // Reset component state\r\n    component.state = LoadState.PENDING;\r\n    component.component = null;\r\n    component.error = null;\r\n    component.loadTime = null;\r\n    component.retryCount = 0;\r\n    component.loadPromise = null;\r\n\r\n    return component.load();\r\n  }\r\n\r\n  /**\r\n   * Dispose and cleanup\r\n   */\r\n  dispose() {\r\n    if (this.intersectionObserver) {\r\n      this.intersectionObserver.disconnect();\r\n    }\r\n\r\n    if (this.idleCallback) {\r\n      cancelIdleCallback(this.idleCallback);\r\n    }\r\n\r\n    this.components.clear();\r\n    Object.values(this.loadQueue).forEach((queue) => queue.length = 0);\r\n\r\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\r\n      action: 'lazy_loader_disposed',\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Medical component lazy loaders\r\n */\r\nexport class MedicalComponentLoader {\r\n  constructor(lazyLoader) {\r\n    this.lazyLoader = lazyLoader;\r\n    this.registerMedicalComponents();\r\n  }\r\n\r\n  /**\r\n   * Register all medical components (only for truly lazy-loaded modules)\r\n   */\r\n  registerMedicalComponents() {\r\n    // Only register components that are NOT statically imported elsewhere\r\n    // This prevents the build warnings about mixed static/dynamic imports\r\n\r\n    // Advanced features chunk (only loaded when research mode is activated)\r\n    this.lazyLoader.register(\r\n      'advanced-analytics',\r\n      () => import('../analytics/quality-metrics.js'),\r\n      { priority: LoadPriority.LOW },\r\n    );\r\n\r\n    this.lazyLoader.register(\r\n      'clinical-reporting',\r\n      () => import('../analytics/clinical-reporting.js'),\r\n      { priority: LoadPriority.LOW },\r\n    );\r\n\r\n    this.lazyLoader.register(\r\n      'audit-trail',\r\n      () => import('../analytics/audit-trail.js'),\r\n      { priority: LoadPriority.LOW },\r\n    );\r\n\r\n    // Service workers and background features\r\n    this.lazyLoader.register(\r\n      'medical-service-worker',\r\n      () => import('../workers/medical-service-worker.js'),\r\n      { priority: LoadPriority.LOW },\r\n    );\r\n\r\n    this.lazyLoader.register(\r\n      'sw-manager',\r\n      () => import('../workers/sw-manager.js'),\r\n      { priority: LoadPriority.LOW },\r\n    );\r\n\r\n    // Advanced architectural patterns (loaded only when needed)\r\n    this.lazyLoader.register(\r\n      'command-pattern',\r\n      () => import('../patterns/command.js'),\r\n      { priority: LoadPriority.NORMAL },\r\n    );\r\n\r\n    this.lazyLoader.register(\r\n      'prediction-strategy',\r\n      () => import('../patterns/prediction-strategy.js'),\r\n      { priority: LoadPriority.NORMAL },\r\n    );\r\n\r\n    this.lazyLoader.register(\r\n      'validation-factory',\r\n      () => import('../patterns/validation-factory.js'),\r\n      { priority: LoadPriority.NORMAL },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Load medical component by clinical priority\r\n   */\r\n  async loadByClinicalPriority(clinicalSituation) {\r\n    switch (clinicalSituation) {\r\n      case 'emergency':\r\n        // Load high-priority architectural patterns\r\n        await this.lazyLoader.preload(LoadPriority.HIGH);\r\n        break;\r\n\r\n      case 'routine':\r\n        // Load normal priority patterns and command structures\r\n        await this.lazyLoader.preload(LoadPriority.NORMAL);\r\n        break;\r\n\r\n      case 'research':\r\n        // Load research and analytics tools\r\n        await this.lazyLoader.load('advanced-analytics');\r\n        await this.lazyLoader.load('clinical-reporting');\r\n        await this.lazyLoader.load('audit-trail');\r\n        break;\r\n\r\n      case 'background':\r\n        // Load service workers and background features\r\n        await this.lazyLoader.load('medical-service-worker');\r\n        await this.lazyLoader.load('sw-manager');\r\n        break;\r\n\r\n      default:\r\n        await this.lazyLoader.preload(LoadPriority.NORMAL);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload components for specific medical module\r\n   */\r\n  async preloadForModule(moduleType) {\r\n    // Since core components are now statically imported,\r\n    // we only need to load advanced features\r\n    const moduleComponents = {\r\n      coma: ['command-pattern'],\r\n      limited: ['prediction-strategy'],\r\n      full: ['command-pattern', 'prediction-strategy', 'validation-factory'],\r\n      research: ['advanced-analytics', 'clinical-reporting', 'audit-trail'],\r\n    };\r\n\r\n    const components = moduleComponents[moduleType] || [];\r\n    const loadPromises = components.map((comp) => this.lazyLoader.load(comp));\r\n\r\n    await Promise.allSettled(loadPromises);\r\n\r\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\r\n      action: 'medical_components_preloaded',\r\n      moduleType,\r\n      components,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Load enterprise features for production deployment\r\n   */\r\n  async loadEnterpriseFeatures() {\r\n    const enterpriseComponents = [\r\n      'medical-service-worker',\r\n      'sw-manager',\r\n      'advanced-analytics',\r\n      'clinical-reporting',\r\n      'audit-trail',\r\n    ];\r\n\r\n    const loadPromises = enterpriseComponents.map((comp) => this.lazyLoader.load(comp).catch((error) => {\r\n      console.warn(`Enterprise feature ${comp} failed to load:`, error);\r\n      return null;\r\n    }));\r\n\r\n    const results = await Promise.allSettled(loadPromises);\r\n    const loadedCount = results.filter((r) => r.status === 'fulfilled' && r.value !== null).length;\r\n\r\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\r\n      action: 'enterprise_features_loaded',\r\n      requested: enterpriseComponents.length,\r\n      loaded: loadedCount,\r\n    });\r\n\r\n    return loadedCount;\r\n  }\r\n}\r\n\r\n// Export singleton instances\r\nexport const lazyLoader = new LazyLoader();\r\nexport const medicalComponentLoader = new MedicalComponentLoader(lazyLoader);\r\n","/**\r\n * Advanced Features Management System\r\n * iGFAP Stroke Triage Assistant - Phase 3 & 4 Feature Coordination\r\n *\r\n * Handles initialization and management of advanced features\r\n *\r\n * @author iGFAP Project Team\r\n * @contact Deepak Bos <bosdeepak@gmail.com>\r\n */\r\n\r\nimport { safeAsync, ERROR_CATEGORIES, ERROR_SEVERITY } from '../utils/error-handler.js';\r\n\r\n// Phase 3: Advanced offline capabilities\r\nimport { medicalSWManager } from '../workers/sw-manager.js';\r\nimport { medicalPerformanceMonitor } from '../performance/medical-performance-monitor.js';\r\nimport { medicalSyncManager } from '../sync/medical-sync-manager.js';\r\nimport { lazyLoader } from '../components/lazy-loader.js';\r\n\r\n// Phase 4: Medical Intelligence & Analytics - Selected Features\r\nimport { clinicalReportingSystem } from '../analytics/clinical-reporting.js';\r\nimport { qualityMetricsTracker } from '../analytics/quality-metrics.js';\r\nimport { clinicalAuditTrail } from '../analytics/audit-trail.js';\r\n\r\n/**\r\n * Manages advanced features initialization and coordination\r\n */\r\nexport class AdvancedFeaturesManager {\r\n  constructor() {\r\n    this.isInitialized = false;\r\n    this.phase3Status = {\r\n      serviceWorker: false,\r\n      performanceMonitor: false,\r\n      syncManager: false,\r\n      lazyLoader: false,\r\n    };\r\n    this.phase4Status = {\r\n      reportingSystem: false,\r\n      qualityMetrics: false,\r\n      auditTrail: false,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Initialize all advanced features\r\n   */\r\n  async initialize() {\r\n    return safeAsync(\r\n      async () => {\r\n        // Initialize Phase 3 features\r\n        await this.initializePhase3Features();\r\n\r\n        // Initialize Phase 4 features\r\n        await this.initializePhase4Features();\r\n\r\n        this.isInitialized = true;\r\n        return true;\r\n      },\r\n      (error) =>\r\n        // Advanced features failure doesn't block core functionality\r\n        false,\r\n      {\r\n        category: ERROR_CATEGORIES.RENDERING,\r\n        severity: ERROR_SEVERITY.MEDIUM,\r\n        timeout: 60000, // Allow more time for advanced features\r\n        context: {\r\n          operation: 'initialize_advanced_features',\r\n        },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Initialize Phase 3 Advanced Features\r\n   */\r\n  async initializePhase3Features() {\r\n    return safeAsync(\r\n      async () => {\r\n        // Start performance monitoring first\r\n        await this.initializePerformanceMonitor();\r\n\r\n        // Initialize service worker (non-blocking)\r\n        this.initializeServiceWorker();\r\n\r\n        // Initialize sync manager\r\n        await this.initializeSyncManager();\r\n\r\n        // Initialize progressive loading\r\n        await this.initializeProgressiveLoading();\r\n\r\n        return true;\r\n      },\r\n      (error) =>\r\n        // Phase 3 failure is non-critical\r\n        false,\r\n      {\r\n        category: ERROR_CATEGORIES.RENDERING,\r\n        context: { operation: 'initialize_phase3_features' },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Initialize performance monitoring\r\n   */\r\n  async initializePerformanceMonitor() {\r\n    return safeAsync(\r\n      async () => {\r\n        medicalPerformanceMonitor.start();\r\n        this.phase3Status.performanceMonitor = true;\r\n        return true;\r\n      },\r\n      (error) => {\r\n        this.phase3Status.performanceMonitor = false;\r\n        return false;\r\n      },\r\n      {\r\n        category: ERROR_CATEGORIES.RENDERING,\r\n        context: { operation: 'initialize_performance_monitor' },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Initialize service worker\r\n   */\r\n  async initializeServiceWorker() {\r\n    // Run in background without blocking\r\n    safeAsync(\r\n      async () => {\r\n        const swInitialized = await medicalSWManager.initialize();\r\n        this.phase3Status.serviceWorker = swInitialized;\r\n\r\n        if (swInitialized) {\r\n          // Prefetch critical medical resources\r\n          await this.prefetchCriticalResources();\r\n        }\r\n\r\n        return swInitialized;\r\n      },\r\n      (error) => {\r\n        this.phase3Status.serviceWorker = false;\r\n        return false;\r\n      },\r\n      {\r\n        category: ERROR_CATEGORIES.NETWORK,\r\n        context: { operation: 'initialize_service_worker' },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Initialize sync manager\r\n   */\r\n  async initializeSyncManager() {\r\n    return safeAsync(\r\n      async () => {\r\n        const syncInitialized = await medicalSyncManager.initialize();\r\n        this.phase3Status.syncManager = syncInitialized;\r\n        return syncInitialized;\r\n      },\r\n      (error) => {\r\n        this.phase3Status.syncManager = false;\r\n        return false;\r\n      },\r\n      {\r\n        category: ERROR_CATEGORIES.NETWORK,\r\n        context: { operation: 'initialize_sync_manager' },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Initialize progressive loading\r\n   */\r\n  async initializeProgressiveLoading() {\r\n    return safeAsync(\r\n      async () => {\r\n        // Preload critical components immediately\r\n        await lazyLoader.preload('critical');\r\n\r\n        // Setup viewport-based loading for result visualizations\r\n        setTimeout(() => this.setupViewportLoading(), 100);\r\n\r\n        this.phase3Status.lazyLoader = true;\r\n        return true;\r\n      },\r\n      (error) => {\r\n        this.phase3Status.lazyLoader = false;\r\n        return false;\r\n      },\r\n      {\r\n        category: ERROR_CATEGORIES.RENDERING,\r\n        context: { operation: 'initialize_progressive_loading' },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Setup viewport-based loading\r\n   */\r\n  setupViewportLoading() {\r\n    try {\r\n      const brainVizElements = document.querySelectorAll('.brain-visualization-placeholder');\r\n      brainVizElements.forEach((element) => {\r\n        lazyLoader.observeElement(element, 'brain-visualization');\r\n      });\r\n\r\n      const mapElements = document.querySelectorAll('.stroke-center-map-placeholder');\r\n      mapElements.forEach((element) => {\r\n        lazyLoader.observeElement(element, 'stroke-center-map');\r\n      });\r\n    } catch (error) {\r\n      // Viewport loading setup failed - continue without it\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Prefetch critical resources for offline use\r\n   */\r\n  async prefetchCriticalResources() {\r\n    return safeAsync(\r\n      async () => {\r\n        const criticalResources = [\r\n          '/0925/src/logic/lvo-local-model.js',\r\n          '/0925/src/logic/ich-volume-calculator.js',\r\n          '/0925/src/patterns/prediction-strategy.js',\r\n          '/0925/src/performance/medical-cache.js',\r\n        ];\r\n\r\n        await medicalSWManager.prefetchResources(criticalResources);\r\n        return true;\r\n      },\r\n      (error) =>\r\n        // Prefetch failure is non-critical\r\n        false,\r\n      {\r\n        category: ERROR_CATEGORIES.NETWORK,\r\n        context: { operation: 'prefetch_critical_resources' },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Initialize Phase 4 Selected Features\r\n   */\r\n  async initializePhase4Features() {\r\n    return safeAsync(\r\n      async () => {\r\n        // Initialize clinical audit trail first (for compliance)\r\n        await this.initializeAuditTrail();\r\n\r\n        // Start clinical reporting system\r\n        await this.initializeReportingSystem();\r\n\r\n        // Initialize quality metrics tracking\r\n        await this.initializeQualityMetrics();\r\n\r\n        // Setup integration event handlers\r\n        this.setupPhase4EventHandlers();\r\n\r\n        return true;\r\n      },\r\n      (error) =>\r\n        // Phase 4 failure is non-critical\r\n        false,\r\n      {\r\n        category: ERROR_CATEGORIES.RENDERING,\r\n        context: { operation: 'initialize_phase4_features' },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Initialize audit trail\r\n   */\r\n  async initializeAuditTrail() {\r\n    return safeAsync(\r\n      async () => {\r\n        await clinicalAuditTrail.initialize();\r\n        this.phase4Status.auditTrail = true;\r\n        return true;\r\n      },\r\n      (error) => {\r\n        this.phase4Status.auditTrail = false;\r\n        return false;\r\n      },\r\n      {\r\n        category: ERROR_CATEGORIES.MEDICAL,\r\n        context: { operation: 'initialize_audit_trail' },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Initialize reporting system\r\n   */\r\n  async initializeReportingSystem() {\r\n    return safeAsync(\r\n      async () => {\r\n        clinicalReportingSystem.start();\r\n        this.phase4Status.reportingSystem = true;\r\n        return true;\r\n      },\r\n      (error) => {\r\n        this.phase4Status.reportingSystem = false;\r\n        return false;\r\n      },\r\n      {\r\n        category: ERROR_CATEGORIES.MEDICAL,\r\n        context: { operation: 'initialize_reporting_system' },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Initialize quality metrics\r\n   */\r\n  async initializeQualityMetrics() {\r\n    return safeAsync(\r\n      async () => {\r\n        await qualityMetricsTracker.initialize();\r\n        this.phase4Status.qualityMetrics = true;\r\n        return true;\r\n      },\r\n      (error) => {\r\n        this.phase4Status.qualityMetrics = false;\r\n        return false;\r\n      },\r\n      {\r\n        category: ERROR_CATEGORIES.MEDICAL,\r\n        context: { operation: 'initialize_quality_metrics' },\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Setup Phase 4 event handlers\r\n   */\r\n  setupPhase4EventHandlers() {\r\n    // Listen for form submissions to trigger quality metrics and audit logging\r\n    document.addEventListener('submit', async (event) => {\r\n      const form = event.target;\r\n      if (form.dataset.module) {\r\n        await safeAsync(\r\n          async () => {\r\n            const formData = new FormData(form);\r\n            const patientData = Object.fromEntries(formData.entries());\r\n\r\n            // Log audit trail\r\n            if (this.phase4Status.auditTrail) {\r\n              clinicalAuditTrail.logEvent('data_entry', {\r\n                module: form.dataset.module,\r\n                timestamp: new Date().toISOString(),\r\n                data_points: Object.keys(patientData).length,\r\n              });\r\n            }\r\n\r\n            // Record quality metrics\r\n            if (this.phase4Status.qualityMetrics) {\r\n              qualityMetricsTracker.recordMetric('form_completion', 'count', 1);\r\n              qualityMetricsTracker.recordMetric(\r\n                'data_quality',\r\n                'completeness',\r\n                Object.values(patientData).filter((v) => v && v.trim()).length / Object.keys(patientData).length * 100,\r\n              );\r\n            }\r\n\r\n            return true;\r\n          },\r\n          (error) =>\r\n            // Phase 4 event handling failed - continue silently\r\n            false,\r\n          {\r\n            category: ERROR_CATEGORIES.MEDICAL,\r\n            context: { operation: 'phase4_event_handling' },\r\n          },\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get comprehensive status of all advanced features\r\n   */\r\n  getStatus() {\r\n    return {\r\n      isInitialized: this.isInitialized,\r\n      phase3: {\r\n        ...this.phase3Status,\r\n        overall: Object.values(this.phase3Status).some((status) => status),\r\n      },\r\n      phase4: {\r\n        ...this.phase4Status,\r\n        overall: Object.values(this.phase4Status).some((status) => status),\r\n      },\r\n      systemStatus: this.getSystemStatus(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get detailed system status\r\n   */\r\n  getSystemStatus() {\r\n    return {\r\n      serviceWorkerSupported: 'serviceWorker' in navigator,\r\n      indexedDBSupported: 'indexedDB' in window,\r\n      notificationSupported: 'Notification' in window,\r\n      cacheSupported: 'caches' in window,\r\n      webLockSupported: 'locks' in navigator,\r\n      performanceSupported: 'performance' in window,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Restart advanced features\r\n   */\r\n  async restart() {\r\n    this.destroy();\r\n    return this.initialize();\r\n  }\r\n\r\n  /**\r\n   * Cleanup when destroyed\r\n   */\r\n  destroy() {\r\n    // Cleanup Phase 3 features\r\n    if (this.phase3Status.performanceMonitor) {\r\n      try {\r\n        medicalPerformanceMonitor.stop?.();\r\n      } catch (error) {\r\n        // Cleanup error - continue\r\n      }\r\n    }\r\n\r\n    if (this.phase3Status.syncManager) {\r\n      try {\r\n        medicalSyncManager.destroy?.();\r\n      } catch (error) {\r\n        // Cleanup error - continue\r\n      }\r\n    }\r\n\r\n    // Cleanup Phase 4 features\r\n    if (this.phase4Status.reportingSystem) {\r\n      try {\r\n        clinicalReportingSystem.stop?.();\r\n      } catch (error) {\r\n        // Cleanup error - continue\r\n      }\r\n    }\r\n\r\n    // Reset status\r\n    this.phase3Status = {\r\n      serviceWorker: false,\r\n      performanceMonitor: false,\r\n      syncManager: false,\r\n      lazyLoader: false,\r\n    };\r\n\r\n    this.phase4Status = {\r\n      reportingSystem: false,\r\n      qualityMetrics: false,\r\n      auditTrail: false,\r\n    };\r\n\r\n    this.isInitialized = false;\r\n  }\r\n}\r\n","/**\r\n * Main Application Controller\r\n * iGFAP Stroke Triage Assistant - Modular Architecture\r\n *\r\n * Handles core application lifecycle and coordination\r\n *\r\n * @author iGFAP Project Team\r\n * @contact Deepak Bos <bosdeepak@gmail.com>\r\n */\r\n\r\nimport { store } from '../state/store.js';\r\nimport { render } from '../ui/render.js';\r\nimport { authManager } from '../auth/authentication.js';\r\nimport { warmUpFunctions } from '../api/client.js';\r\nimport { safeAsync, ERROR_CATEGORIES, ERROR_SEVERITY } from '../utils/error-handler.js';\r\nimport { medicalLogger, LOG_CATEGORIES } from '../utils/medical-logger.js';\r\n\r\nimport { UIManager } from './ui-manager.js';\r\nimport { ThemeManager } from './theme-manager.js';\r\nimport { SessionManager } from './session-manager.js';\r\nimport { AdvancedFeaturesManager } from './advanced-features-manager.js';\r\n\r\n/**\r\n * Main application controller - coordinates all subsystems\r\n */\r\nexport class AppController {\r\n  constructor() {\r\n    this.container = null;\r\n    this.unsubscribe = null;\r\n    this.isInitialized = false;\r\n\r\n    // Initialize managers\r\n    this.uiManager = new UIManager();\r\n    this.themeManager = new ThemeManager();\r\n    this.sessionManager = new SessionManager();\r\n    this.advancedFeaturesManager = new AdvancedFeaturesManager();\r\n  }\r\n\r\n  /**\r\n   * Initialize the application\r\n   * @returns {Promise<boolean>} - Initialization success\r\n   */\r\n  async init() {\r\n    return safeAsync(\r\n      async () => {\r\n        medicalLogger.info('Application initialization started', {\r\n          category: LOG_CATEGORIES.SYSTEM,\r\n          version: '2.1.0',\r\n          userAgent: navigator.userAgent.substring(0, 100),\r\n        });\r\n\r\n        // Wait for DOM to be ready\r\n        if (document.readyState === 'loading') {\r\n          medicalLogger.debug('Waiting for DOM ready', { category: LOG_CATEGORIES.SYSTEM });\r\n          return new Promise(resolve => {\r\n            document.addEventListener('DOMContentLoaded', () => resolve(this.init()));\r\n          });\r\n        }\r\n\r\n        // Find app container\r\n        this.container = document.getElementById('appContainer');\r\n        if (!this.container) {\r\n          medicalLogger.critical('App container not found', {\r\n            category: LOG_CATEGORIES.SYSTEM,\r\n            containerId: 'appContainer',\r\n          });\r\n          throw new Error('Critical initialization failure: App container not found');\r\n        }\r\n        medicalLogger.debug('App container found', { category: LOG_CATEGORIES.SYSTEM });\r\n\r\n        // Check authentication before proceeding\r\n        if (!authManager.isValidSession()) {\r\n          medicalLogger.info('No valid session, redirecting to login', {\r\n            category: LOG_CATEGORIES.AUTHENTICATION,\r\n          });\r\n          store.navigate('login');\r\n        }\r\n\r\n        // Initialize core systems\r\n        medicalLogger.info('Initializing core features', { category: LOG_CATEGORIES.SYSTEM });\r\n        await this.initializeCoreFeatures();\r\n\r\n        // Advanced features disabled to prevent sync manager errors\r\n        medicalLogger.info('Skipping advanced features initialization', {\r\n          category: LOG_CATEGORIES.SYSTEM,\r\n        });\r\n        // this.initializeAdvancedFeatures();\r\n\r\n        // Setup rendering system FIRST so navigation works\r\n        this.setupRenderingSystem();\r\n\r\n        // Initialize UI components\r\n        medicalLogger.debug('Initializing UI manager', { category: LOG_CATEGORIES.SYSTEM });\r\n        this.uiManager.initialize(this.container);\r\n\r\n        // Initialize theme system\r\n        medicalLogger.debug('Initializing theme manager', { category: LOG_CATEGORIES.SYSTEM });\r\n        this.themeManager.initialize();\r\n\r\n        // Setup session management\r\n        medicalLogger.debug('Initializing session manager', { category: LOG_CATEGORIES.SYSTEM });\r\n        this.sessionManager.initialize();\r\n\r\n        // Warm up Cloud Functions in background (dev only)\r\n        if (import.meta && import.meta.env && import.meta.env.DEV) {\r\n          medicalLogger.info('Starting Cloud Functions warm-up (dev only)', {\r\n            category: LOG_CATEGORIES.NETWORK,\r\n          });\r\n          warmUpFunctions();\r\n        }\r\n\r\n        // Initial render (store subscription is now active)\r\n        render(this.container);\r\n\r\n        this.isInitialized = true;\r\n        medicalLogger.info('Application initialization completed successfully', {\r\n          category: LOG_CATEGORIES.SYSTEM,\r\n          initializationTime: performance.now(),\r\n        });\r\n\r\n        return true;\r\n      },\r\n      error => {\r\n        medicalLogger.critical('Application initialization failed', {\r\n          category: LOG_CATEGORIES.SYSTEM,\r\n          error: error.message,\r\n          stack: error.stack,\r\n        });\r\n        throw new Error(`App initialization failed: ${error.message}`);\r\n      },\r\n      {\r\n        category: ERROR_CATEGORIES.RENDERING,\r\n        severity: ERROR_SEVERITY.CRITICAL,\r\n        timeout: 30000,\r\n        context: {\r\n          operation: 'app_initialization',\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Initialize core application features\r\n   */\r\n  async initializeCoreFeatures() {\r\n    return safeAsync(\r\n      async () => {\r\n        // Core features that must be available immediately\r\n        const coreInitTasks = [\r\n          this.uiManager.preloadCriticalComponents(),\r\n          this.themeManager.loadSavedTheme(),\r\n          this.sessionManager.validateStoredSession(),\r\n        ];\r\n\r\n        const results = await Promise.allSettled(coreInitTasks);\r\n\r\n        // Check if any critical feature failed\r\n        const failures = results.filter(result => result.status === 'rejected');\r\n        if (failures.length > 0) {\r\n          throw new Error(`${failures.length} core features failed to initialize`);\r\n        }\r\n\r\n        return true;\r\n      },\r\n      error =>\r\n        // Continue with degraded functionality on core feature failure\r\n        false,\r\n      {\r\n        category: ERROR_CATEGORIES.RENDERING,\r\n        severity: ERROR_SEVERITY.HIGH,\r\n        context: {\r\n          operation: 'core_features_init',\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Initialize advanced features (non-blocking)\r\n   */\r\n  async initializeAdvancedFeatures() {\r\n    // Run in background without blocking main app\r\n    safeAsync(\r\n      async () => {\r\n        await this.advancedFeaturesManager.initialize();\r\n        return true;\r\n      },\r\n      error =>\r\n        // Advanced features failure doesn't block core functionality\r\n        false,\r\n      {\r\n        category: ERROR_CATEGORIES.RENDERING,\r\n        severity: ERROR_SEVERITY.MEDIUM,\r\n        context: {\r\n          operation: 'advanced_features_init',\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Setup the rendering system\r\n   */\r\n  setupRenderingSystem() {\r\n    // Subscribe to store changes\r\n    this.unsubscribe = store.subscribe(() => {\r\n      render(this.container);\r\n      // Update research button visibility after each render\r\n      setTimeout(() => this.uiManager.updateResearchMode(), 200);\r\n    });\r\n\r\n    // Subscribe to language changes\r\n    window.addEventListener('languageChanged', () => {\r\n      this.uiManager.updateLanguage();\r\n      render(this.container);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get application status\r\n   * @returns {Object} - Application status information\r\n   */\r\n  getStatus() {\r\n    return {\r\n      isInitialized: this.isInitialized,\r\n      hasContainer: !!this.container,\r\n      isAuthenticated: authManager.isValidSession(),\r\n      ui: this.uiManager.getStatus(),\r\n      theme: this.themeManager.getStatus(),\r\n      session: this.sessionManager.getStatus(),\r\n      advancedFeatures: this.advancedFeaturesManager.getStatus(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Cleanup when app is destroyed\r\n   */\r\n  destroy() {\r\n    if (this.unsubscribe) {\r\n      this.unsubscribe();\r\n    }\r\n\r\n    this.uiManager.destroy();\r\n    this.themeManager.destroy();\r\n    this.sessionManager.destroy();\r\n    this.advancedFeaturesManager.destroy();\r\n\r\n    this.isInitialized = false;\r\n  }\r\n}\r\n\r\n/**\r\n * Create and initialize the main application\r\n */\r\nexport async function createApp() {\r\n  const app = new AppController();\r\n\r\n  try {\r\n    await app.init();\r\n    return app;\r\n  } catch (error) {\r\n    throw new Error(`Failed to create application: ${error.message}`);\r\n  }\r\n}\r\n","/**\r\n * API Warm-up Service\r\n * Prevents cold start delays by warming up Cloud Functions on app initialization\r\n */\r\n\r\nimport { medicalLogger } from '../utils/medical-logger.js';\r\n\r\n// Cloud Function endpoints that need warming up\r\nconst API_ENDPOINTS = {\r\n  authentication: 'https://europe-west3-igfap-452720.cloudfunctions.net/authenticate-research-access',\r\n  comaIch: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_coma_ich',\r\n  limitedIch: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_limited_data_ich',\r\n  fullStroke: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_full_stroke',\r\n  lvo: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_lvo',\r\n};\r\n\r\n// Lightweight test payloads to warm up APIs\r\nconst WARMUP_PAYLOADS = {\r\n  authentication: {\r\n    action: 'validate_session',\r\n    session_token: 'warmup-test-token',\r\n  },\r\n  comaIch: {\r\n    gfap_value: 100,\r\n  },\r\n  limitedIch: {\r\n    age_years: 65,\r\n    systolic_bp: 140,\r\n    diastolic_bp: 80,\r\n    gfap_value: 100,\r\n    vigilanzminderung: 0,\r\n  },\r\n  fullStroke: {\r\n    age_years: 65,\r\n    systolic_bp: 140,\r\n    diastolic_bp: 80,\r\n    gfap_value: 100,\r\n    fast_ed_score: 4,\r\n    headache: 0,\r\n    vigilanzminderung: 0,\r\n    armparese: 0,\r\n    beinparese: 0,\r\n    eye_deviation: 0,\r\n    atrial_fibrillation: 0,\r\n    anticoagulated_noak: 0,\r\n    antiplatelets: 0,\r\n  },\r\n  lvo: {\r\n    gfap_value: 100,\r\n    fast_ed_score: 4,\r\n  },\r\n};\r\n\r\nclass APIWarmupService {\r\n  constructor() {\r\n    this.warmupAttempts = 0;\r\n    this.successfulWarmups = 0;\r\n    this.warmupResults = {};\r\n    this.isWarming = false;\r\n  }\r\n\r\n  /**\r\n   * Start warming up all APIs\r\n   * @param {boolean} background - Whether to run in background (default: true)\r\n   * @returns {Promise<Object>} Results of warmup attempts\r\n   */\r\n  async warmupAllAPIs(background = true) {\r\n    if (this.isWarming) {\r\n      medicalLogger.info('API warmup already in progress', { category: 'WARMUP' });\r\n      return this.warmupResults;\r\n    }\r\n\r\n    this.isWarming = true;\r\n    this.warmupAttempts = 0;\r\n    this.successfulWarmups = 0;\r\n    this.warmupResults = {};\r\n\r\n    medicalLogger.info('Starting API warmup process', {\r\n      category: 'WARMUP',\r\n      endpoints: Object.keys(API_ENDPOINTS).length,\r\n    });\r\n\r\n    const warmupPromises = Object.entries(API_ENDPOINTS).map(async ([name, url]) => {\r\n      try {\r\n        const result = await this.warmupSingleAPI(name, url, WARMUP_PAYLOADS[name]);\r\n        this.warmupResults[name] = result;\r\n        if (result.success) {\r\n          this.successfulWarmups++;\r\n        }\r\n        return result;\r\n      } catch (error) {\r\n        const errorResult = {\r\n          success: false,\r\n          error: error.message,\r\n          duration: 0,\r\n          timestamp: new Date().toISOString(),\r\n        };\r\n        this.warmupResults[name] = errorResult;\r\n        return errorResult;\r\n      }\r\n    });\r\n\r\n    if (background) {\r\n      // Don't await in background mode - let it run asynchronously\r\n      Promise.all(warmupPromises).then(() => {\r\n        this.completeWarmup();\r\n      }).catch((error) => {\r\n        medicalLogger.error('Background API warmup failed', {\r\n          category: 'WARMUP',\r\n          error: error.message,\r\n        });\r\n        this.isWarming = false;\r\n      });\r\n\r\n      return { status: 'warming', message: 'APIs warming up in background' };\r\n    }\r\n    // Wait for all warmups to complete\r\n    await Promise.all(warmupPromises);\r\n    this.completeWarmup();\r\n    return this.warmupResults;\r\n  }\r\n\r\n  /**\r\n   * Warm up a single API endpoint\r\n   * @param {string} name - API name\r\n   * @param {string} url - API URL\r\n   * @param {Object} payload - Test payload\r\n   * @returns {Promise<Object>} Warmup result\r\n   */\r\n  async warmupSingleAPI(name, url, payload) {\r\n    const startTime = Date.now();\r\n    this.warmupAttempts++;\r\n\r\n    try {\r\n      medicalLogger.info(`Warming up ${name} API`, { category: 'WARMUP', url });\r\n\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'User-Agent': 'iGFAP-Warmup/2.1.0',\r\n        },\r\n        body: JSON.stringify(payload),\r\n        signal: AbortSignal.timeout(10000), // 10 second timeout\r\n      });\r\n\r\n      const duration = Date.now() - startTime;\r\n\r\n      // We expect most warmup calls to return errors (since they're test data)\r\n      // The important thing is that the function responds, not that it succeeds\r\n      const result = {\r\n        success: true,\r\n        status: response.status,\r\n        duration,\r\n        message: `${name} API warmed up`,\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n\r\n      medicalLogger.info(`Successfully warmed up ${name} API`, {\r\n        category: 'WARMUP',\r\n        duration,\r\n        status: response.status,\r\n      });\r\n\r\n      return result;\r\n    } catch (error) {\r\n      const duration = Date.now() - startTime;\r\n\r\n      // Network errors are expected for CORS issues, but the function still gets warmed up\r\n      if (error.name === 'TypeError' && error.message.includes('Failed to fetch')) {\r\n        medicalLogger.info(`${name} API warmup encountered CORS (expected), function still warmed`, {\r\n          category: 'WARMUP',\r\n          duration,\r\n        });\r\n\r\n        return {\r\n          success: true, // Consider CORS as successful warmup\r\n          status: 'cors-blocked',\r\n          duration,\r\n          message: `${name} API warmed (CORS blocked but function activated)`,\r\n          timestamp: new Date().toISOString(),\r\n        };\r\n      }\r\n\r\n      medicalLogger.warn(`Failed to warm up ${name} API`, {\r\n        category: 'WARMUP',\r\n        error: error.message,\r\n        duration,\r\n      });\r\n\r\n      return {\r\n        success: false,\r\n        error: error.message,\r\n        duration,\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Complete the warmup process and log results\r\n   */\r\n  completeWarmup() {\r\n    this.isWarming = false;\r\n\r\n    const summary = {\r\n      total: this.warmupAttempts,\r\n      successful: this.successfulWarmups,\r\n      failed: this.warmupAttempts - this.successfulWarmups,\r\n      results: this.warmupResults,\r\n    };\r\n\r\n    medicalLogger.info('API warmup process completed', {\r\n      category: 'WARMUP',\r\n      summary,\r\n    });\r\n\r\n    // Dispatch custom event for UI feedback\r\n    if (typeof window !== 'undefined') {\r\n      window.dispatchEvent(new CustomEvent('api-warmup-complete', {\r\n        detail: summary,\r\n      }));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get current warmup status\r\n   * @returns {Object} Current status and results\r\n   */\r\n  getWarmupStatus() {\r\n    return {\r\n      isWarming: this.isWarming,\r\n      attempts: this.warmupAttempts,\r\n      successful: this.successfulWarmups,\r\n      results: this.warmupResults,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Quick warmup for critical APIs only (authentication, ICH prediction)\r\n   * @returns {Promise<Object>} Results of critical API warmup\r\n   */\r\n  async warmupCriticalAPIs() {\r\n    const criticalAPIs = ['authentication', 'comaIch', 'limitedIch'];\r\n\r\n    medicalLogger.info('Starting critical API warmup', {\r\n      category: 'WARMUP',\r\n      apis: criticalAPIs,\r\n    });\r\n\r\n    const results = {};\r\n\r\n    for (const apiName of criticalAPIs) {\r\n      if (API_ENDPOINTS[apiName]) {\r\n        results[apiName] = await this.warmupSingleAPI(\r\n          apiName,\r\n          API_ENDPOINTS[apiName],\r\n          WARMUP_PAYLOADS[apiName],\r\n        );\r\n      }\r\n    }\r\n\r\n    medicalLogger.info('Critical API warmup completed', {\r\n      category: 'WARMUP',\r\n      results,\r\n    });\r\n\r\n    return results;\r\n  }\r\n}\r\n\r\n// Create singleton instance\r\nexport const apiWarmupService = new APIWarmupService();\r\n\r\n/**\r\n * Initialize API warmup on app startup\r\n * @param {Object} options - Warmup options\r\n * @param {boolean} options.background - Run in background (default: true)\r\n * @param {boolean} options.criticalOnly - Only warm critical APIs (default: false)\r\n * @returns {Promise<Object>} Warmup results\r\n */\r\nexport async function initializeAPIWarmup(options = {}) {\r\n  const { background = true, criticalOnly = false } = options;\r\n\r\n  try {\r\n    if (criticalOnly) {\r\n      return await apiWarmupService.warmupCriticalAPIs();\r\n    }\r\n    return await apiWarmupService.warmupAllAPIs(background);\r\n  } catch (error) {\r\n    medicalLogger.error('API warmup initialization failed', {\r\n      category: 'WARMUP',\r\n      error: error.message,\r\n    });\r\n    return { error: error.message };\r\n  }\r\n}\r\n\r\n/**\r\n * Warm up APIs before making actual requests (for better UX)\r\n * @param {Array<string>} apiNames - Names of APIs to warm up\r\n * @returns {Promise<Object>} Warmup results\r\n */\r\nexport async function warmupSpecificAPIs(apiNames) {\r\n  const results = {};\r\n\r\n  for (const apiName of apiNames) {\r\n    if (API_ENDPOINTS[apiName]) {\r\n      results[apiName] = await apiWarmupService.warmupSingleAPI(\r\n        apiName,\r\n        API_ENDPOINTS[apiName],\r\n        WARMUP_PAYLOADS[apiName],\r\n      );\r\n    } else {\r\n      results[apiName] = {\r\n        success: false,\r\n        error: `Unknown API: ${apiName}`,\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n    }\r\n  }\r\n\r\n  return results;\r\n}\r\n\r\n// Auto-start warmup when module loads (background mode)\r\nif (typeof window !== 'undefined') {\r\n  // Only in browser environment\r\n  setTimeout(() => {\r\n    initializeAPIWarmup({ background: true, criticalOnly: false });\r\n  }, 1000); // Start warmup 1 second after page load\r\n}\r\n","/**\r\n * Main Application Entry Point - Clean Modular Architecture\r\n * iGFAP Stroke Triage Assistant - Production Ready\r\n *\r\n * Uses the new modular app-controller.js system for better maintainability\r\n *\r\n * @author iGFAP Project Team\r\n * @contact Deepak Bos <bosdeepak@gmail.com>\r\n */\r\n\r\nimport { createApp } from './core/app-controller.js';\r\nimport { store } from './state/store.js';\r\nimport { render } from './ui/render.js';\r\nimport { safeAsync, ERROR_CATEGORIES, ERROR_SEVERITY } from './utils/error-handler.js';\r\nimport { initializeAPIWarmup } from './core/api-warmup.js';\r\nimport './index.css'; // Tailwind CSS\r\n\r\n/**\r\n * Application instance\r\n */\r\nlet app = null;\r\n\r\n/**\r\n * Initialize the iGFAP Stroke Triage Assistant\r\n */\r\nasync function initializeApplication() {\r\n  return safeAsync(\r\n    async () => {\r\n      // Create and initialize the main application\r\n      app = await createApp();\r\n\r\n      // Start API warmup in background to prevent cold starts\r\n      setTimeout(() => {\r\n        initializeAPIWarmup({ background: true, criticalOnly: false })\r\n          .then(result => {\r\n            console.info('[Main] API warmup started:', result.status || 'completed');\r\n          })\r\n          .catch(error => {\r\n            console.warn('[Main] API warmup failed:', error.message);\r\n          });\r\n      }, 2000); // Start warmup 2 seconds after app initialization\r\n\r\n      // Log successful initialization\r\n      const status = app.getStatus();\r\n      const startupEvent = new CustomEvent('appInitialized', {\r\n        detail: {\r\n          timestamp: new Date().toISOString(),\r\n          status,\r\n          version: '2.1.0',\r\n          build: 'production',\r\n        },\r\n      });\r\n      document.dispatchEvent(startupEvent);\r\n\r\n      return app;\r\n    },\r\n    error => {\r\n      // Critical initialization failure\r\n      handleInitializationFailure(error);\r\n      throw error;\r\n    },\r\n    {\r\n      category: ERROR_CATEGORIES.RENDERING,\r\n      severity: ERROR_SEVERITY.CRITICAL,\r\n      timeout: 30000,\r\n      context: {\r\n        operation: 'application_initialization',\r\n        version: '2.1.0',\r\n      },\r\n    }\r\n  );\r\n}\r\n\r\n/**\r\n * Handle initialization failure gracefully\r\n * @param {Error} error - Initialization error\r\n */\r\nfunction handleInitializationFailure(error) {\r\n  // Create emergency fallback UI\r\n  const container = document.getElementById('appContainer');\r\n  if (container) {\r\n    container.innerHTML = `\r\n      <div style=\"\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        min-height: 50vh;\r\n        padding: 20px;\r\n        text-align: center;\r\n        font-family: system-ui, -apple-system, sans-serif;\r\n      \">\r\n        <div style=\"\r\n          background: #fff3cd;\r\n          border: 1px solid #ffeaa7;\r\n          border-radius: 8px;\r\n          padding: 24px;\r\n          max-width: 500px;\r\n          box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n        \">\r\n          <h2 style=\"color: #856404; margin: 0 0 16px 0;\">\r\n            ⚠️ Application Initialization Failed\r\n          </h2>\r\n          <p style=\"color: #856404; margin: 0 0 16px 0; line-height: 1.5;\">\r\n            The medical triage system could not start properly.\r\n            This may be due to a network issue or browser compatibility problem.\r\n          </p>\r\n          <button\r\n            onclick=\"window.location.reload()\"\r\n            style=\"\r\n              background: #007bff;\r\n              color: white;\r\n              border: none;\r\n              padding: 12px 24px;\r\n              border-radius: 6px;\r\n              font-size: 16px;\r\n              cursor: pointer;\r\n              margin-right: 12px;\r\n            \"\r\n          >\r\n            🔄 Reload Application\r\n          </button>\r\n          <button\r\n            onclick=\"window.open('mailto:bosdeepak@gmail.com?subject=iGFAP App Error', '_blank')\"\r\n            style=\"\r\n              background: #6c757d;\r\n              color: white;\r\n              border: none;\r\n              padding: 12px 24px;\r\n              border-radius: 6px;\r\n              font-size: 16px;\r\n              cursor: pointer;\r\n            \"\r\n          >\r\n            📧 Report Issue\r\n          </button>\r\n        </div>\r\n        <small style=\"color: #6c757d; margin-top: 20px;\">\r\n          Error: ${error.message || 'Unknown initialization error'}\r\n        </small>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  // Log error for debugging\r\n  const errorEvent = new CustomEvent('appInitializationFailed', {\r\n    detail: {\r\n      error: error.message,\r\n      timestamp: new Date().toISOString(),\r\n      userAgent: navigator.userAgent.substring(0, 100),\r\n    },\r\n  });\r\n  document.dispatchEvent(errorEvent);\r\n}\r\n\r\n/**\r\n * Cleanup on page unload\r\n */\r\nfunction handlePageUnload() {\r\n  if (app) {\r\n    try {\r\n      app.destroy();\r\n    } catch (error) {\r\n      // Cleanup error - continue with unload\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Setup global error handlers\r\n */\r\nfunction setupGlobalErrorHandlers() {\r\n  // Handle page visibility changes (mobile apps, tab switching)\r\n  document.addEventListener('visibilitychange', () => {\r\n    if (app && document.visibilityState === 'visible') {\r\n      // App became visible - validate session\r\n      const status = app.getStatus();\r\n      if (!status.isAuthenticated) {\r\n        window.location.reload();\r\n      }\r\n    }\r\n  });\r\n\r\n  // Handle page unload\r\n  window.addEventListener('beforeunload', handlePageUnload);\r\n  window.addEventListener('unload', handlePageUnload);\r\n}\r\n\r\n/**\r\n * Main application startup\r\n */\r\nasync function main() {\r\n  try {\r\n    // In local preview, make sure no service worker is controlling (avoids stale assets)\r\n    try {\r\n      const isLocalPreview =\r\n        ['localhost', '127.0.0.1', '0.0.0.0'].includes(window.location.hostname) &&\r\n        !(import.meta && import.meta.env && import.meta.env.DEV);\r\n      if (isLocalPreview && 'serviceWorker' in navigator) {\r\n        const regs = await navigator.serviceWorker.getRegistrations();\r\n        for (const reg of regs) {\r\n          try {\r\n            await reg.unregister();\r\n          } catch {}\r\n        }\r\n        // Also clear any pending beforeinstallprompt side-effects\r\n        window.addEventListener('beforeinstallprompt', e => {\r\n          e.preventDefault();\r\n        });\r\n      }\r\n    } catch {}\r\n\r\n    // Setup global error handling\r\n    setupGlobalErrorHandlers();\r\n\r\n    // Initialize the application\r\n    await initializeApplication();\r\n\r\n    // Application started successfully\r\n    const event = new CustomEvent('appReady', {\r\n      detail: {\r\n        timestamp: new Date().toISOString(),\r\n        version: '2.1.0',\r\n      },\r\n    });\r\n    document.dispatchEvent(event);\r\n  } catch (error) {\r\n    // Main initialization failed - already handled by handleInitializationFailure\r\n  }\r\n}\r\n\r\n/**\r\n * Start the application when DOM is ready\r\n */\r\nif (document.readyState === 'loading') {\r\n  document.addEventListener('DOMContentLoaded', main);\r\n} else {\r\n  main();\r\n}\r\n\r\n/**\r\n * Export for debugging and testing\r\n */\r\nif (typeof window !== 'undefined') {\r\n  window.iGFAPApp = {\r\n    getApp: () => app,\r\n    getStatus: () => app?.getStatus() || { error: 'App not initialized' },\r\n    restart: async () => {\r\n      if (app) {\r\n        app.destroy();\r\n      }\r\n      return initializeApplication();\r\n    },\r\n    // Debug helpers\r\n    getCurrentScreen: () => {\r\n      try {\r\n        return store.getState().currentScreen;\r\n      } catch {\r\n        return 'unknown';\r\n      }\r\n    },\r\n    forceResults: () => {\r\n      try {\r\n        store.navigate('results');\r\n        const container = document.getElementById('appContainer');\r\n        if (container) {\r\n          render(container);\r\n        }\r\n        return true;\r\n      } catch {\r\n        return false;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n/**\r\n * Export for module systems\r\n */\r\nexport { app, initializeApplication, handleInitializationFailure };\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nfunction getCSSVar(name) {\r\n  return getComputedStyle(document.documentElement).getPropertyValue(name).trim();\r\n}\r\n\r\nexport default function ProbabilityRing({ percent = 0, level = 'normal' }) {\r\n  const canvasRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const container = canvas?.parentElement; // parent is .probability-circle\r\n    if (!container || !canvas) return;\r\n    \r\n    containerRef.current = container;\r\n\r\n    const draw = () => {\r\n      const dpr = window.devicePixelRatio || 1;\r\n      const size = container.offsetWidth || 120;\r\n      canvas.width = Math.max(1, Math.floor(size * dpr));\r\n      canvas.height = Math.max(1, Math.floor(size * dpr));\r\n      const ctx = canvas.getContext('2d');\r\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n      ctx.scale(dpr, dpr);\r\n\r\n      const width = size;\r\n      const height = size;\r\n      const cx = width / 2;\r\n      const cy = height / 2;\r\n      const radius = (size / 2) - 8;\r\n      // Proportional stroke with better minimum readability\r\n      const progressWidth = Math.min(Math.max(radius * 0.12, 6), 12);\r\n      const trackWidth = Math.max(progressWidth - 2, 6);\r\n      // Pixel snapping for crisp lines\r\n      const adjustedRadius = progressWidth % 2 === 1 ? radius - 0.5 : radius;\r\n\r\n      ctx.clearRect(0, 0, width, height);\r\n\r\n      // Track - better contrast and alignment with theme tokens\r\n      const isDark = document.body.classList.contains('dark-mode');\r\n      const borderColor = getCSSVar('--border-color') || (isDark ? '#2f3336' : '#dee2e6');\r\n      ctx.save();\r\n      ctx.globalAlpha = isDark ? 0.36 : 0.65;\r\n      ctx.strokeStyle = borderColor;\r\n      ctx.lineWidth = trackWidth;\r\n      ctx.lineCap = 'round';\r\n      ctx.beginPath();\r\n      ctx.arc(cx, cy, adjustedRadius, 0, Math.PI * 2);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n\r\n      // Progress color - enhanced saturation in dark mode\r\n      let stroke = getCSSVar('--primary-color');\r\n      if (level === 'high') stroke = getCSSVar('--warning-color') || '#ff9800';\r\n      if (level === 'critical') stroke = getCSSVar('--danger-color') || '#DC143C';\r\n      \r\n      // Boost saturation slightly in dark mode\r\n      if (isDark) {\r\n        if (stroke.includes('#')) {\r\n          // Simple saturation boost for hex colors\r\n          if (level === 'high') stroke = '#ffaa00';\r\n          if (level === 'critical') stroke = '#ff1744';\r\n        }\r\n      }\r\n\r\n      // Progress arc\r\n      const startAngle = -Math.PI / 2;\r\n      const endAngle = startAngle + (Math.PI * 2) * (Math.max(0, Math.min(100, percent)) / 100);\r\n\r\n      // Subtle depth shadow behind progress - slightly stronger in dark mode\r\n      ctx.save();\r\n      ctx.strokeStyle = isDark ? 'rgba(0,0,0,0.3)' : 'rgba(0,0,0,0.15)';\r\n      ctx.lineWidth = progressWidth + 1.5;\r\n      ctx.beginPath();\r\n      ctx.arc(cx, cy, adjustedRadius, startAngle, endAngle, false);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n\r\n      ctx.strokeStyle = stroke;\r\n      ctx.lineWidth = progressWidth;\r\n      ctx.beginPath();\r\n      ctx.arc(cx, cy, adjustedRadius, startAngle, endAngle, false);\r\n      ctx.stroke();\r\n    };\r\n\r\n    // Defer first draw to ensure CSS sizing has applied\r\n    const rafId = requestAnimationFrame(draw);\r\n\r\n    const ro = new ResizeObserver(() => requestAnimationFrame(draw));\r\n    ro.observe(container);\r\n    return () => {\r\n      cancelAnimationFrame(rafId);\r\n      ro.disconnect();\r\n    };\r\n  }, [percent, level]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"probability-number\">\r\n        {Math.round(percent)}<span>%</span>\r\n      </div>\r\n      <canvas ref={canvasRef} className=\"probability-canvas\" />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nexport default function TachometerGauge({ lvoProb = 0, ichProb = 0, title = 'Decision Support – LVO/ICH' }) {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    let raf = null;\r\n    let currentPos = 0.5;\r\n    \r\n    // Robust ratio with epsilon to avoid division spikes\r\n    const eps = 0.5; // percent points\r\n    const safeIch = Math.max(ichProb, eps);\r\n    const rawRatio = lvoProb / safeIch;\r\n    // Clamp to display bounds\r\n    const rmin = 0.5, rmax = 2.0;\r\n    const clampedRatio = Math.max(rmin, Math.min(rmax, rawRatio));\r\n    // Log-centered mapping around 1.0 so equal risks map to center\r\n    const targetPos = (Math.log2(clampedRatio) + 1) / 2; // 0 at 0.5, 0.5 at 1.0, 1 at 2.0\r\n    const absDiff = Math.abs(lvoProb - ichProb);\r\n    const maxProb = Math.max(lvoProb, ichProb);\r\n    let confidence = absDiff < 10 ? Math.round(30 + maxProb * 0.3) : absDiff < 20 ? Math.round(50 + maxProb * 0.4) : Math.round(70 + maxProb * 0.3);\r\n    confidence = Math.max(0, Math.min(100, confidence));\r\n\r\n    const draw = () => {\r\n      const dpr = window.devicePixelRatio || 1;\r\n      const rect = canvas.getBoundingClientRect();\r\n      const cssW = rect.width || 300;\r\n      const cssH = rect.height || 200;\r\n      canvas.width = Math.max(1, Math.floor(cssW * dpr));\r\n      canvas.height = Math.max(1, Math.floor(cssH * dpr));\r\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n      ctx.scale(dpr, dpr);\r\n\r\n      const width = cssW;\r\n      const height = cssH;\r\n      const isMobile = width < 480;\r\n      const isTablet = width >= 480 && width < 1024;\r\n      \r\n      // Refined thin proportions\r\n      const baseWidth = isMobile ? 12 : isTablet ? 14 : 16;\r\n      const padding = 15;\r\n      const maxRHorizontal = (width / 2) - padding - baseWidth / 2;\r\n      const maxRVerticalBase = (height / 2) - padding - baseWidth / 2;\r\n      const maxRVertical = isTablet ? Math.min(maxRVerticalBase, height * 0.42) : maxRVerticalBase;\r\n      const radius = Math.max(10, Math.min(maxRHorizontal, maxRVertical));\r\n      const cx = width / 2;\r\n      const cy = height - (padding + baseWidth / 2 + radius);\r\n\r\n      ctx.clearRect(0, 0, width, height);\r\n\r\n      const isDark = document.body.classList.contains('dark-mode');\r\n      \r\n      // Premium automotive color schemes\r\n      const colors = {\r\n        day: {\r\n          bezel: '#e8eaed',\r\n          bezelShadow: '#c1c7cd',\r\n          track: '#f5f7fa',\r\n          ich: '#8b1538', // Deep burgundy - clinical authority\r\n          lvo: '#1e3a5f', // Steel blue - precision\r\n          neutral: '#6b7280', // Surgical steel\r\n          needle: '#d4af37', // Luxury gold\r\n          text: '#374151',\r\n          tickMajor: '#4b5563',\r\n          tickMinor: '#9ca3af'\r\n        },\r\n        night: {\r\n          bezel: '#2d3036',\r\n          bezelShadow: '#1a1d23',\r\n          track: '#383c42',\r\n          ich: '#dc2626', // Bright clinical red for night visibility\r\n          lvo: '#3b82f6', // Bright blue for night visibility\r\n          neutral: '#64748b', // Muted steel\r\n          needle: '#fbbf24', // Amber - automotive night standard\r\n          text: '#f3f4f6',\r\n          tickMajor: '#d1d5db',\r\n          tickMinor: '#6b7280'\r\n        }\r\n      };\r\n      \r\n      const theme = isDark ? colors.night : colors.day;\r\n\r\n      // Outer bezel - thin brushed aluminum effect\r\n      const bezelGradient = ctx.createLinearGradient(cx - radius, cy - radius, cx + radius, cy + radius);\r\n      bezelGradient.addColorStop(0, theme.bezel);\r\n      bezelGradient.addColorStop(0.3, theme.bezelShadow);\r\n      bezelGradient.addColorStop(0.7, theme.bezel);\r\n      bezelGradient.addColorStop(1, theme.bezelShadow);\r\n      \r\n      ctx.strokeStyle = bezelGradient;\r\n      ctx.lineWidth = baseWidth + 4; // Thinner bezel\r\n      ctx.lineCap = 'round';\r\n      ctx.beginPath();\r\n      ctx.arc(cx, cy, radius + 2, 0, Math.PI, false);\r\n      ctx.stroke();\r\n\r\n      // Inner track - thin premium matte finish\r\n      ctx.strokeStyle = theme.track;\r\n      ctx.lineWidth = baseWidth;\r\n      ctx.beginPath();\r\n      ctx.arc(cx, cy, radius, 0, Math.PI, false);\r\n      ctx.stroke();\r\n\r\n      // Smooth gradient transition: blue (LVO right) → yellow → red (ICH left)\r\n      const segments = 60; // Fine granularity for smooth transition\r\n      const angleStep = Math.PI / segments;\r\n      \r\n      for (let i = 0; i < segments; i++) {\r\n        const progress = i / (segments - 1); // 0 to 1 from right (LVO) to left (ICH)\r\n        const startAngle = i * angleStep;\r\n        const endAngle = Math.min((i + 1) * angleStep, Math.PI);\r\n        \r\n        // Smooth color interpolation: blue (right) → yellow → red (left)\r\n        let r, g, b;\r\n        if (progress <= 0.5) {\r\n          // Blue to yellow (first half - right side)\r\n          const t = progress * 2; // 0 to 1\r\n          r = Math.round(0 + 242 * t);    // Increase red: 0 → 242\r\n          g = Math.round(154 + 66 * t);   // Increase green: 154 → 220\r\n          b = Math.round(255 * (1 - t));  // Decrease blue: 255 → 0\r\n        } else {\r\n          // Yellow to red (second half - left side)\r\n          const t = (progress - 0.5) * 2; // 0 to 1\r\n          r = Math.round(242 + 13 * t);   // Increase red slightly: 242 → 255\r\n          g = Math.round(220 * (1 - t));  // Decrease green: 220 → 0\r\n          b = Math.round(0);              // No blue\r\n        }\r\n        \r\n        const color = `rgba(${r}, ${g}, ${b}, 0.85)`;\r\n        \r\n        ctx.strokeStyle = color;\r\n        ctx.lineWidth = baseWidth - 4; // Thinner zones\r\n        ctx.beginPath();\r\n        ctx.arc(cx, cy, radius, startAngle, endAngle, false);\r\n        ctx.stroke();\r\n      }\r\n\r\n      // Precision tick system - automotive style\r\n      const majorTicks = [0.5, 0.75, 1.0, 1.5, 2.0];\r\n      const minorTicks = isMobile ? [] : [0.6, 0.9, 1.2, 1.8]; // Only on larger screens\r\n      \r\n      // Major ticks\r\n      majorTicks.forEach(val => {\r\n        const pos = (Math.log2(val) + 1) / 2;\r\n        const a = Math.PI - pos * Math.PI;\r\n        const inner = radius - 12;\r\n        const outer = radius - 24;\r\n        \r\n        ctx.strokeStyle = theme.tickMajor;\r\n        ctx.lineWidth = 1.5; // Thinner major ticks\r\n        ctx.lineCap = 'round';\r\n        ctx.beginPath();\r\n        ctx.moveTo(cx + Math.cos(a) * inner, cy + Math.sin(a) * inner);\r\n        ctx.lineTo(cx + Math.cos(a) * outer, cy + Math.sin(a) * outer);\r\n        ctx.stroke();\r\n        \r\n        // Premium typography\r\n        ctx.fillStyle = theme.text;\r\n        const tickFont = isMobile ? 13 : 15;\r\n        ctx.font = `600 ${tickFont}px \"SF Pro Display\", system-ui, sans-serif`;\r\n        ctx.textAlign = 'center';\r\n        ctx.textBaseline = 'middle';\r\n        ctx.fillText(val.toFixed(1), cx + Math.cos(a) * (radius - 35), cy + Math.sin(a) * (radius - 35));\r\n      });\r\n      \r\n      // Minor ticks\r\n      minorTicks.forEach(val => {\r\n        const pos = (Math.log2(val) + 1) / 2;\r\n        const a = Math.PI - pos * Math.PI;\r\n        const inner = radius - 8;\r\n        const outer = radius - 16;\r\n        \r\n        ctx.strokeStyle = theme.tickMinor;\r\n        ctx.lineWidth = 0.8; // Thinner minor ticks\r\n        ctx.lineCap = 'round';\r\n        ctx.beginPath();\r\n        ctx.moveTo(cx + Math.cos(a) * inner, cy + Math.sin(a) * inner);\r\n        ctx.lineTo(cx + Math.cos(a) * outer, cy + Math.sin(a) * outer);\r\n        ctx.stroke();\r\n      });\r\n\r\n      // Clinical threshold markers - subtle but precise\r\n      const thresholds = [\r\n        { val: 0.77, label: 'ICH', side: 'left' },\r\n        { val: 1.30, label: 'LVO', side: 'right' }\r\n      ];\r\n      \r\n      thresholds.forEach(th => {\r\n        const pos = (Math.log2(th.val) + 1) / 2;\r\n        const a = Math.PI - pos * Math.PI;\r\n        const inner = radius - 2;\r\n        const outer = radius + 12;\r\n        \r\n        // Precise threshold line\r\n        ctx.strokeStyle = th.side === 'left' ? theme.ich : theme.lvo;\r\n        ctx.lineWidth = 2;\r\n        ctx.setLineDash([3, 2]);\r\n        ctx.beginPath();\r\n        ctx.moveTo(cx + Math.cos(a) * inner, cy + Math.sin(a) * inner);\r\n        ctx.lineTo(cx + Math.cos(a) * outer, cy + Math.sin(a) * outer);\r\n        ctx.stroke();\r\n        ctx.setLineDash([]);\r\n      });\r\n\r\n      // Premium zone labels - clinical typography\r\n      const labelFont = isMobile ? 15 : 17;\r\n      const labelDistance = isMobile ? radius + 35 : radius + 42;\r\n      \r\n      // ICH label - pure red\r\n      ctx.fillStyle = isDark ? '#ff4444' : '#ff0000';\r\n      ctx.font = `700 ${labelFont}px \"SF Pro Display\", system-ui, sans-serif`;\r\n      ctx.textAlign = 'center';\r\n      ctx.textBaseline = 'middle';\r\n      if (isDark) {\r\n        ctx.shadowColor = 'rgba(0,0,0,0.8)';\r\n        ctx.shadowBlur = 3;\r\n        ctx.shadowOffsetY = 1;\r\n      }\r\n      ctx.fillText('ICH', cx + Math.cos(Math.PI) * labelDistance, cy + Math.sin(Math.PI) * labelDistance - 10);\r\n      \r\n      // LVO label - pure blue\r\n      ctx.fillStyle = isDark ? '#4499ff' : '#0099ff';\r\n      ctx.fillText('LVO', cx + Math.cos(0) * labelDistance, cy + Math.sin(0) * labelDistance - 10);\r\n      ctx.shadowBlur = 0;\r\n      ctx.shadowOffsetY = 0;\r\n\r\n      // Premium needle with automotive precision\r\n      currentPos += (targetPos - currentPos) * 0.12; // Slightly faster, more responsive\r\n      const needleAngle = Math.PI - currentPos * Math.PI;\r\n      const needleLen = Math.max(0, radius - baseWidth / 2 - 6);\r\n\r\n      // Confidence indicator - subtle surgical precision\r\n      const coneSpan = (1 - confidence / 100) * (Math.PI * 0.05);\r\n      ctx.save();\r\n      ctx.globalAlpha = isDark ? 0.2 : 0.25;\r\n      ctx.fillStyle = theme.neutral;\r\n      ctx.beginPath();\r\n      ctx.moveTo(cx, cy);\r\n      ctx.arc(cx, cy, needleLen * 0.85, needleAngle - coneSpan, needleAngle + coneSpan, false);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n      ctx.restore();\r\n\r\n      // Premium needle - automotive grade\r\n      const needleColor = theme.needle;\r\n      const now = performance.now();\r\n      \r\n      // Needle shaft with taper\r\n      const gradient = ctx.createLinearGradient(\r\n        cx, cy,\r\n        cx + Math.cos(needleAngle) * needleLen,\r\n        cy + Math.sin(needleAngle) * needleLen\r\n      );\r\n      gradient.addColorStop(0, needleColor + 'ff');\r\n      gradient.addColorStop(0.7, needleColor + 'dd');\r\n      gradient.addColorStop(1, needleColor + 'bb');\r\n      \r\n      ctx.strokeStyle = gradient;\r\n      ctx.lineWidth = 2.5; // Thinner needle\r\n      ctx.lineCap = 'round';\r\n      ctx.shadowColor = isDark ? 'rgba(0,0,0,0.8)' : 'rgba(0,0,0,0.3)';\r\n      ctx.shadowBlur = 4;\r\n      ctx.shadowOffsetY = 2;\r\n      ctx.beginPath();\r\n      ctx.moveTo(cx, cy);\r\n      ctx.lineTo(cx + Math.cos(needleAngle) * needleLen, cy + Math.sin(needleAngle) * needleLen);\r\n      ctx.stroke();\r\n      ctx.shadowBlur = 0;\r\n      ctx.shadowOffsetY = 0;\r\n\r\n      // Enhanced pulsing needle tip\r\n      const tx = cx + Math.cos(needleAngle) * needleLen;\r\n      const ty = cy + Math.sin(needleAngle) * needleLen;\r\n      const pulse = 0.6 + 0.4 * Math.sin(now * 0.006); // Slower, more elegant pulse\r\n      const tipRadius = 3 + pulse * 2; // Smaller base tip\r\n      \r\n      // Outer pulsing halo\r\n      ctx.save();\r\n      ctx.globalAlpha = 0.15 + pulse * 0.25;\r\n      ctx.fillStyle = needleColor;\r\n      ctx.beginPath();\r\n      ctx.arc(tx, ty, tipRadius * 3.5, 0, Math.PI * 2);\r\n      ctx.fill();\r\n      ctx.restore();\r\n      \r\n      // Mid pulsing glow\r\n      ctx.save();\r\n      ctx.globalAlpha = 0.4 + pulse * 0.3;\r\n      ctx.fillStyle = needleColor;\r\n      ctx.beginPath();\r\n      ctx.arc(tx, ty, tipRadius * 1.8, 0, Math.PI * 2);\r\n      ctx.fill();\r\n      ctx.restore();\r\n      \r\n      // Solid tip core\r\n      ctx.fillStyle = needleColor;\r\n      ctx.shadowColor = needleColor;\r\n      ctx.shadowBlur = 4 + pulse * 6;\r\n      ctx.beginPath();\r\n      ctx.arc(tx, ty, tipRadius, 0, Math.PI * 2);\r\n      ctx.fill();\r\n      ctx.shadowBlur = 0;\r\n\r\n      // Refined center hub - thinner automotive grade\r\n      const hubOuter = 14; // Smaller hub\r\n      const hubInner = 8;\r\n      \r\n      // Outer ring - brushed metal\r\n      const hubGradient = ctx.createRadialGradient(cx, cy, 0, cx, cy, hubOuter);\r\n      hubGradient.addColorStop(0, isDark ? '#4a5568' : '#718096');\r\n      hubGradient.addColorStop(0.7, isDark ? '#2d3748' : '#4a5568');\r\n      hubGradient.addColorStop(1, isDark ? '#1a202c' : '#2d3748');\r\n      \r\n      ctx.fillStyle = hubGradient;\r\n      ctx.beginPath();\r\n      ctx.arc(cx, cy, hubOuter, 0, Math.PI * 2);\r\n      ctx.fill();\r\n      \r\n      // Inner hub - precision center\r\n      const innerGradient = ctx.createRadialGradient(cx, cy, 0, cx, cy, hubInner);\r\n      innerGradient.addColorStop(0, needleColor + 'aa');\r\n      innerGradient.addColorStop(1, needleColor + '44');\r\n      \r\n      ctx.fillStyle = innerGradient;\r\n      ctx.beginPath();\r\n      ctx.arc(cx, cy, hubInner, 0, Math.PI * 2);\r\n      ctx.fill();\r\n      \r\n      // Precision rim - thinner\r\n      ctx.strokeStyle = needleColor;\r\n      ctx.lineWidth = 1; // Thinner rim\r\n      ctx.beginPath();\r\n      ctx.arc(cx, cy, hubOuter - 1, 0, Math.PI * 2);\r\n      ctx.stroke();\r\n\r\n      // Premium ratio display - automotive HUD style\r\n      const ratioFont = isMobile ? 18 : 22;\r\n      const ratioY = cy - radius * 0.65;\r\n      \r\n      // Background plate for ratio\r\n      const plateWidth = isMobile ? 60 : 80;\r\n      const plateHeight = isMobile ? 24 : 30;\r\n      \r\n      ctx.save();\r\n      ctx.globalAlpha = isDark ? 0.9 : 0.95;\r\n      ctx.fillStyle = isDark ? '#1f2937' : '#ffffff';\r\n      ctx.shadowColor = isDark ? 'rgba(0,0,0,0.5)' : 'rgba(0,0,0,0.2)';\r\n      ctx.shadowBlur = 8;\r\n      ctx.shadowOffsetY = 2;\r\n      ctx.fillRect(cx - plateWidth/2, ratioY - plateHeight/2, plateWidth, plateHeight);\r\n      ctx.restore();\r\n      \r\n      // Ratio text\r\n      ctx.fillStyle = theme.text;\r\n      ctx.font = `700 ${ratioFont}px \"SF Mono\", ui-monospace, monospace`;\r\n      ctx.textAlign = 'center';\r\n      ctx.textBaseline = 'middle';\r\n      ctx.fillText(clampedRatio.toFixed(2), cx, ratioY);\r\n\r\n      // Confidence indicator - subtle precision bar\r\n      if (!isMobile) {\r\n        const confY = cy + radius * 0.15;\r\n        const confWidth = 60;\r\n        const confHeight = 4;\r\n        \r\n        // Background\r\n        ctx.fillStyle = isDark ? '#374151' : '#e5e7eb';\r\n        ctx.fillRect(cx - confWidth/2, confY, confWidth, confHeight);\r\n        \r\n        // Confidence fill\r\n        const confFill = (confidence / 100) * confWidth;\r\n        const confGradient = ctx.createLinearGradient(cx - confWidth/2, confY, cx - confWidth/2 + confFill, confY);\r\n        confGradient.addColorStop(0, theme.neutral);\r\n        confGradient.addColorStop(1, theme.needle);\r\n        \r\n        ctx.fillStyle = confGradient;\r\n        ctx.fillRect(cx - confWidth/2, confY, confFill, confHeight);\r\n        \r\n        // Confidence label\r\n        ctx.fillStyle = theme.text;\r\n        ctx.font = `500 11px \"SF Pro Display\", system-ui, sans-serif`;\r\n        ctx.textAlign = 'center';\r\n        ctx.fillText(`${confidence}% confidence`, cx, confY + 18);\r\n      }\r\n\r\n      raf = requestAnimationFrame(draw);\r\n    };\r\n\r\n    draw();\r\n    return () => { if (raf) cancelAnimationFrame(raf); };\r\n  }, [lvoProb, ichProb]);\r\n\r\n  return (\r\n    <div className=\"gauge-wrapper\">\r\n      <canvas ref={canvasRef} className=\"gauge-canvas\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport ProbabilityRing from './ProbabilityRing';\r\nimport TachometerGauge from './TachometerGauge';\r\n\r\nexport function mountIslands() {\r\n  // Probability rings\r\n  document.querySelectorAll('[data-react-ring]').forEach((node) => {\r\n    if (node.__mounted) return;\r\n    const percent = parseFloat(node.getAttribute('data-percent')) || 0;\r\n    const level = node.getAttribute('data-level') || 'normal';\r\n    const root = createRoot(node);\r\n    root.render(<ProbabilityRing percent={percent} level={level} />);\r\n    node.__mounted = true;\r\n    node.__root = root;\r\n  });\r\n\r\n  // Tachometer\r\n  document.querySelectorAll('[data-react-tachometer]').forEach((node) => {\r\n    if (node.__mounted) return;\r\n    const ich = parseFloat(node.getAttribute('data-ich')) || 0;\r\n    const lvo = parseFloat(node.getAttribute('data-lvo')) || 0;\r\n    const title = node.getAttribute('data-title') || 'Decision Support – LVO/ICH';\r\n    const root = createRoot(node);\r\n    root.render(<TachometerGauge ichProb={ich} lvoProb={lvo} title={title} />);\r\n    node.__mounted = true;\r\n    node.__root = root;\r\n  });\r\n}\r\n\r\nexport function unmountIslands() {\r\n  document.querySelectorAll('[data-react-ring],[data-react-tachometer]').forEach((node) => {\r\n    if (node.__mounted && node.__root) {\r\n      node.__root.unmount();\r\n      node.__mounted = false;\r\n      node.__root = null;\r\n    }\r\n  });\r\n}\r\n","/**\r\n * Command Pattern for Medical Actions and Audit Trail\r\n * iGFAP Stroke Triage Assistant - Enterprise Architecture\r\n *\r\n * Provides reversible medical actions with comprehensive audit logging\r\n */\r\n\r\nimport { medicalEventObserver, MEDICAL_EVENTS } from './observer.js';\r\n\r\n/**\r\n * Abstract base command for medical actions\r\n */\r\nclass MedicalCommand {\r\n  constructor(name, description, metadata = {}) {\r\n    this.name = name;\r\n    this.description = description;\r\n    this.metadata = {\r\n      ...metadata,\r\n      id: `cmd_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      timestamp: new Date().toISOString(),\r\n    };\r\n    this.executed = false;\r\n    this.undone = false;\r\n  }\r\n\r\n  /**\r\n   * Execute the medical command\r\n   * @returns {Promise<any>} Command execution result\r\n   */\r\n  async execute() {\r\n    if (this.executed && !this.undone) {\r\n      throw new Error(`Command ${this.name} has already been executed`);\r\n    }\r\n\r\n    try {\r\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\r\n        action: 'command_execute_start',\r\n        command: this.name,\r\n        commandId: this.metadata.id,\r\n      });\r\n\r\n      const result = await this.doExecute();\r\n\r\n      this.executed = true;\r\n      this.undone = false;\r\n\r\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\r\n        action: 'command_execute_success',\r\n        command: this.name,\r\n        commandId: this.metadata.id,\r\n      });\r\n\r\n      return result;\r\n    } catch (error) {\r\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\r\n        action: 'command_execute_error',\r\n        command: this.name,\r\n        commandId: this.metadata.id,\r\n        error: error.message,\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Undo the medical command\r\n   * @returns {Promise<any>} Command undo result\r\n   */\r\n  async undo() {\r\n    if (!this.executed || this.undone) {\r\n      throw new Error(`Command ${this.name} cannot be undone`);\r\n    }\r\n\r\n    try {\r\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\r\n        action: 'command_undo_start',\r\n        command: this.name,\r\n        commandId: this.metadata.id,\r\n      });\r\n\r\n      const result = await this.doUndo();\r\n\r\n      this.undone = true;\r\n\r\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\r\n        action: 'command_undo_success',\r\n        command: this.name,\r\n        commandId: this.metadata.id,\r\n      });\r\n\r\n      return result;\r\n    } catch (error) {\r\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\r\n        action: 'command_undo_error',\r\n        command: this.name,\r\n        commandId: this.metadata.id,\r\n        error: error.message,\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Implement the actual command execution\r\n   * Must be overridden by concrete commands\r\n   */\r\n  async doExecute() {\r\n    throw new Error('doExecute() must be implemented by concrete command');\r\n  }\r\n\r\n  /**\r\n   * Implement the actual command undo\r\n   * Must be overridden by concrete commands\r\n   */\r\n  async doUndo() {\r\n    throw new Error('doUndo() must be implemented by concrete command');\r\n  }\r\n\r\n  /**\r\n   * Check if command can be undone\r\n   */\r\n  canUndo() {\r\n    return this.executed && !this.undone;\r\n  }\r\n\r\n  /**\r\n   * Get command summary for audit\r\n   */\r\n  getSummary() {\r\n    return {\r\n      name: this.name,\r\n      description: this.description,\r\n      id: this.metadata.id,\r\n      timestamp: this.metadata.timestamp,\r\n      executed: this.executed,\r\n      undone: this.undone,\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Command for updating patient data\r\n */\r\nclass UpdatePatientDataCommand extends MedicalCommand {\r\n  constructor(fieldName, newValue, previousValue, store) {\r\n    super(\r\n      'UPDATE_PATIENT_DATA',\r\n      `Update ${fieldName} from ${previousValue} to ${newValue}`,\r\n      { fieldName, newValue, previousValue },\r\n    );\r\n    this.fieldName = fieldName;\r\n    this.newValue = newValue;\r\n    this.previousValue = previousValue;\r\n    this.store = store;\r\n  }\r\n\r\n  async doExecute() {\r\n    // Update the patient data in store\r\n    const currentData = this.store.getFormData('current') || {};\r\n    currentData[this.fieldName] = this.newValue;\r\n    this.store.setFormData('current', currentData);\r\n\r\n    medicalEventObserver.publish(MEDICAL_EVENTS.PATIENT_DATA_UPDATED, {\r\n      field: this.fieldName,\r\n      newValue: this.newValue,\r\n      previousValue: this.previousValue,\r\n    });\r\n\r\n    return { field: this.fieldName, value: this.newValue };\r\n  }\r\n\r\n  async doUndo() {\r\n    // Restore the previous value\r\n    const currentData = this.store.getFormData('current') || {};\r\n    if (this.previousValue === null || this.previousValue === undefined) {\r\n      delete currentData[this.fieldName];\r\n    } else {\r\n      currentData[this.fieldName] = this.previousValue;\r\n    }\r\n    this.store.setFormData('current', currentData);\r\n\r\n    medicalEventObserver.publish(MEDICAL_EVENTS.PATIENT_DATA_UPDATED, {\r\n      field: this.fieldName,\r\n      newValue: this.previousValue,\r\n      previousValue: this.newValue,\r\n      action: 'undo',\r\n    });\r\n\r\n    return { field: this.fieldName, value: this.previousValue };\r\n  }\r\n}\r\n\r\n/**\r\n * Command for navigating between screens\r\n */\r\nclass NavigationCommand extends MedicalCommand {\r\n  constructor(targetScreen, sourceScreen, store) {\r\n    super(\r\n      'NAVIGATE',\r\n      `Navigate from ${sourceScreen} to ${targetScreen}`,\r\n      { targetScreen, sourceScreen },\r\n    );\r\n    this.targetScreen = targetScreen;\r\n    this.sourceScreen = sourceScreen;\r\n    this.store = store;\r\n  }\r\n\r\n  async doExecute() {\r\n    this.store.navigate(this.targetScreen);\r\n\r\n    medicalEventObserver.publish(MEDICAL_EVENTS.NAVIGATION_CHANGED, {\r\n      from: this.sourceScreen,\r\n      to: this.targetScreen,\r\n    });\r\n\r\n    return { from: this.sourceScreen, to: this.targetScreen };\r\n  }\r\n\r\n  async doUndo() {\r\n    this.store.navigate(this.sourceScreen);\r\n\r\n    medicalEventObserver.publish(MEDICAL_EVENTS.NAVIGATION_CHANGED, {\r\n      from: this.targetScreen,\r\n      to: this.sourceScreen,\r\n      action: 'undo',\r\n    });\r\n\r\n    return { from: this.targetScreen, to: this.sourceScreen };\r\n  }\r\n}\r\n\r\n/**\r\n * Command for form submission\r\n */\r\nclass SubmitFormCommand extends MedicalCommand {\r\n  constructor(formData, moduleType, predictionStrategy) {\r\n    super(\r\n      'SUBMIT_FORM',\r\n      `Submit ${moduleType} form for prediction`,\r\n      { moduleType, formFields: Object.keys(formData) },\r\n    );\r\n    this.formData = { ...formData };\r\n    this.moduleType = moduleType;\r\n    this.predictionStrategy = predictionStrategy;\r\n    this.results = null;\r\n  }\r\n\r\n  async doExecute() {\r\n    // Set the prediction strategy\r\n    this.predictionStrategy.setStrategy(this.getStrategyName());\r\n\r\n    // Execute prediction\r\n    this.results = await this.predictionStrategy.predict(this.formData);\r\n\r\n    medicalEventObserver.publish(MEDICAL_EVENTS.FORM_SUBMITTED, {\r\n      moduleType: this.moduleType,\r\n      fieldsCount: Object.keys(this.formData).length,\r\n      success: true,\r\n    });\r\n\r\n    return this.results;\r\n  }\r\n\r\n  async doUndo() {\r\n    // Clear the results (cannot truly undo API call, but can clear local state)\r\n    this.results = null;\r\n\r\n    medicalEventObserver.publish(MEDICAL_EVENTS.FORM_SUBMITTED, {\r\n      moduleType: this.moduleType,\r\n      action: 'undo',\r\n    });\r\n\r\n    return null;\r\n  }\r\n\r\n  getStrategyName() {\r\n    switch (this.moduleType) {\r\n      case 'coma':\r\n        return 'COMA_ICH';\r\n      case 'limited':\r\n        return 'LIMITED_DATA_ICH';\r\n      case 'full':\r\n        return 'FULL_STROKE';\r\n      default:\r\n        throw new Error(`Unknown module type: ${this.moduleType}`);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Command for clearing sensitive data\r\n */\r\nclass ClearDataCommand extends MedicalCommand {\r\n  constructor(dataType, store) {\r\n    super(\r\n      'CLEAR_DATA',\r\n      `Clear ${dataType} data for privacy compliance`,\r\n      { dataType },\r\n    );\r\n    this.dataType = dataType;\r\n    this.store = store;\r\n    this.backupData = null;\r\n  }\r\n\r\n  async doExecute() {\r\n    // Backup data before clearing\r\n    this.backupData = this.store.getState();\r\n\r\n    // Clear the specified data\r\n    switch (this.dataType) {\r\n      case 'all':\r\n        this.store.reset();\r\n        break;\r\n      case 'forms':\r\n        this.store.clearFormData();\r\n        break;\r\n      case 'results':\r\n        this.store.clearResults();\r\n        break;\r\n      default:\r\n        throw new Error(`Unknown data type: ${this.dataType}`);\r\n    }\r\n\r\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\r\n      action: 'data_cleared',\r\n      dataType: this.dataType,\r\n    });\r\n\r\n    return { dataType: this.dataType, cleared: true };\r\n  }\r\n\r\n  async doUndo() {\r\n    // Restore from backup (if within reasonable time limit)\r\n    if (this.backupData) {\r\n      this.store.setState(this.backupData);\r\n\r\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\r\n        action: 'data_restored',\r\n        dataType: this.dataType,\r\n      });\r\n\r\n      return { dataType: this.dataType, restored: true };\r\n    }\r\n\r\n    throw new Error('Cannot undo data clear: backup not available');\r\n  }\r\n}\r\n\r\n/**\r\n * Command invoker for managing medical command execution\r\n */\r\nexport class MedicalCommandInvoker {\r\n  constructor() {\r\n    this.commandHistory = [];\r\n    this.currentIndex = -1;\r\n    this.maxHistorySize = 100;\r\n  }\r\n\r\n  /**\r\n   * Execute a medical command\r\n   * @param {MedicalCommand} command - Command to execute\r\n   * @returns {Promise<any>} Command result\r\n   */\r\n  async executeCommand(command) {\r\n    if (!(command instanceof MedicalCommand)) {\r\n      throw new Error('Command must extend MedicalCommand');\r\n    }\r\n\r\n    const result = await command.execute();\r\n\r\n    // Add to history (remove any commands after current index)\r\n    this.commandHistory = this.commandHistory.slice(0, this.currentIndex + 1);\r\n    this.commandHistory.push(command);\r\n    this.currentIndex = this.commandHistory.length - 1;\r\n\r\n    // Limit history size\r\n    if (this.commandHistory.length > this.maxHistorySize) {\r\n      this.commandHistory.shift();\r\n      this.currentIndex -= 1;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Undo the last command\r\n   * @returns {Promise<any>} Undo result\r\n   */\r\n  async undo() {\r\n    if (this.currentIndex < 0) {\r\n      throw new Error('No commands to undo');\r\n    }\r\n\r\n    const command = this.commandHistory[this.currentIndex];\r\n    if (!command.canUndo()) {\r\n      throw new Error(`Command ${command.name} cannot be undone`);\r\n    }\r\n\r\n    const result = await command.undo();\r\n    this.currentIndex -= 1;\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Redo the next command\r\n   * @returns {Promise<any>} Redo result\r\n   */\r\n  async redo() {\r\n    if (this.currentIndex >= this.commandHistory.length - 1) {\r\n      throw new Error('No commands to redo');\r\n    }\r\n\r\n    this.currentIndex += 1;\r\n    const command = this.commandHistory[this.currentIndex];\r\n\r\n    return await command.execute();\r\n  }\r\n\r\n  /**\r\n   * Check if undo is possible\r\n   */\r\n  canUndo() {\r\n    return this.currentIndex >= 0\r\n           && this.commandHistory[this.currentIndex]\r\n           && this.commandHistory[this.currentIndex].canUndo();\r\n  }\r\n\r\n  /**\r\n   * Check if redo is possible\r\n   */\r\n  canRedo() {\r\n    return this.currentIndex < this.commandHistory.length - 1;\r\n  }\r\n\r\n  /**\r\n   * Get command history for audit\r\n   */\r\n  getCommandHistory() {\r\n    return this.commandHistory.map((cmd) => cmd.getSummary());\r\n  }\r\n\r\n  /**\r\n   * Clear command history (privacy compliance)\r\n   */\r\n  clearHistory() {\r\n    this.commandHistory = [];\r\n    this.currentIndex = -1;\r\n  }\r\n\r\n  /**\r\n   * Get current command statistics\r\n   */\r\n  getStats() {\r\n    return {\r\n      totalCommands: this.commandHistory.length,\r\n      currentIndex: this.currentIndex,\r\n      canUndo: this.canUndo(),\r\n      canRedo: this.canRedo(),\r\n      executedCommands: this.currentIndex + 1,\r\n    };\r\n  }\r\n}\r\n\r\n// Export command classes and singleton invoker\r\nexport {\r\n  MedicalCommand,\r\n  UpdatePatientDataCommand,\r\n  NavigationCommand,\r\n  SubmitFormCommand,\r\n  ClearDataCommand,\r\n};\r\n\r\nexport const medicalCommandInvoker = new MedicalCommandInvoker();\r\n","/**\r\n * Strategy Pattern for Medical Prediction Algorithms\r\n * iGFAP Stroke Triage Assistant - Enterprise Architecture\r\n *\r\n * Provides pluggable prediction strategies for different medical scenarios\r\n */\r\n\r\nimport { predictComaIch, predictLimitedIch, predictFullStroke } from '../api/client.js';\r\n\r\nimport { medicalEventObserver, MEDICAL_EVENTS } from './observer.js';\r\n\r\n/**\r\n * Abstract base strategy for medical predictions\r\n */\r\nclass PredictionStrategy {\r\n  constructor(name, description) {\r\n    this.name = name;\r\n    this.description = description;\r\n    this.requiredFields = [];\r\n    this.optionalFields = [];\r\n  }\r\n\r\n  /**\r\n   * Validate input data before prediction\r\n   * @param {Object} inputData - Input data for prediction\r\n   * @returns {Object} Validation result\r\n   */\r\n  validateInput(inputData) {\r\n    const errors = [];\r\n    const missingFields = [];\r\n\r\n    // Check required fields\r\n    this.requiredFields.forEach((field) => {\r\n      if (!(field in inputData) || inputData[field] === null || inputData[field] === undefined) {\r\n        missingFields.push(field);\r\n      }\r\n    });\r\n\r\n    if (missingFields.length > 0) {\r\n      errors.push(`Missing required fields: ${missingFields.join(', ')}`);\r\n    }\r\n\r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors,\r\n      missingFields,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Preprocess input data for the specific strategy\r\n   * @param {Object} inputData - Raw input data\r\n   * @returns {Object} Processed input data\r\n   */\r\n  preprocessInput(inputData) {\r\n    // Default implementation - can be overridden by specific strategies\r\n    return { ...inputData };\r\n  }\r\n\r\n  /**\r\n   * Execute the prediction strategy\r\n   * @param {Object} inputData - Input data for prediction\r\n   * @returns {Promise<Object>} Prediction result\r\n   */\r\n  async predict(inputData) {\r\n    throw new Error('predict() method must be implemented by concrete strategy');\r\n  }\r\n\r\n  /**\r\n   * Postprocess prediction results\r\n   * @param {Object} rawResult - Raw prediction result\r\n   * @param {Object} inputData - Original input data\r\n   * @returns {Object} Processed result\r\n   */\r\n  postprocessResult(rawResult, inputData) {\r\n    return {\r\n      ...rawResult,\r\n      strategy: this.name,\r\n      timestamp: new Date().toISOString(),\r\n      inputSummary: this.createInputSummary(inputData),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create a summary of input data for audit trail\r\n   * @param {Object} inputData - Input data\r\n   * @returns {Object} Input summary (sanitized)\r\n   */\r\n  createInputSummary(inputData) {\r\n    const summary = {};\r\n    [...this.requiredFields, ...this.optionalFields].forEach((field) => {\r\n      if (field in inputData) {\r\n        summary[field] = typeof inputData[field];\r\n      }\r\n    });\r\n    return summary;\r\n  }\r\n}\r\n\r\n/**\r\n * Strategy for coma patients (GCS < 8)\r\n */\r\nclass ComaPredictionStrategy extends PredictionStrategy {\r\n  constructor() {\r\n    super('COMA_ICH', 'ICH prediction for comatose patients');\r\n    this.requiredFields = ['gfap'];\r\n    this.optionalFields = ['age', 'symptoms_duration'];\r\n  }\r\n\r\n  preprocessInput(inputData) {\r\n    return {\r\n      gfap: parseFloat(inputData.gfap),\r\n      patientType: 'comatose',\r\n    };\r\n  }\r\n\r\n  async predict(inputData) {\r\n    const validation = this.validateInput(inputData);\r\n    if (!validation.isValid) {\r\n      throw new Error(`Validation failed: ${validation.errors.join(', ')}`);\r\n    }\r\n\r\n    const processedInput = this.preprocessInput(inputData);\r\n\r\n    // Emit event for audit trail\r\n    medicalEventObserver.publish(MEDICAL_EVENTS.ASSESSMENT_STARTED, {\r\n      strategy: this.name,\r\n      inputFields: Object.keys(processedInput),\r\n    });\r\n\r\n    try {\r\n      const rawResult = await predictComaIch(processedInput);\r\n      const result = this.postprocessResult(rawResult, inputData);\r\n\r\n      // Emit completion event\r\n      medicalEventObserver.publish(MEDICAL_EVENTS.RESULTS_GENERATED, {\r\n        strategy: this.name,\r\n        success: true,\r\n        confidence: result.confidence,\r\n      });\r\n\r\n      return result;\r\n    } catch (error) {\r\n      medicalEventObserver.publish(MEDICAL_EVENTS.SECURITY_EVENT, {\r\n        type: 'prediction_error',\r\n        strategy: this.name,\r\n        error: error.message,\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Strategy for limited data scenarios\r\n */\r\nclass LimitedDataPredictionStrategy extends PredictionStrategy {\r\n  constructor() {\r\n    super('LIMITED_DATA_ICH', 'ICH prediction with limited clinical data');\r\n    this.requiredFields = ['gfap', 'age', 'systolic_bp', 'diastolic_bp'];\r\n    this.optionalFields = ['weakness_sudden', 'speech_sudden', 'vigilanzminderung'];\r\n  }\r\n\r\n  preprocessInput(inputData) {\r\n    return {\r\n      gfap: parseFloat(inputData.gfap),\r\n      age: parseInt(inputData.age, 10),\r\n      systolic_bp: parseFloat(inputData.systolic_bp),\r\n      diastolic_bp: parseFloat(inputData.diastolic_bp),\r\n      weakness_sudden: inputData.weakness_sudden === true || inputData.weakness_sudden === 'true',\r\n      speech_sudden: inputData.speech_sudden === true || inputData.speech_sudden === 'true',\r\n      vigilanzminderung: inputData.vigilanzminderung === true || inputData.vigilanzminderung === 'true',\r\n    };\r\n  }\r\n\r\n  async predict(inputData) {\r\n    const validation = this.validateInput(inputData);\r\n    if (!validation.isValid) {\r\n      throw new Error(`Validation failed: ${validation.errors.join(', ')}`);\r\n    }\r\n\r\n    const processedInput = this.preprocessInput(inputData);\r\n\r\n    medicalEventObserver.publish(MEDICAL_EVENTS.ASSESSMENT_STARTED, {\r\n      strategy: this.name,\r\n      inputFields: Object.keys(processedInput),\r\n    });\r\n\r\n    try {\r\n      const rawResult = await predictLimitedIch(processedInput);\r\n      const result = this.postprocessResult(rawResult, inputData);\r\n\r\n      medicalEventObserver.publish(MEDICAL_EVENTS.RESULTS_GENERATED, {\r\n        strategy: this.name,\r\n        success: true,\r\n        confidence: result.confidence,\r\n      });\r\n\r\n      return result;\r\n    } catch (error) {\r\n      medicalEventObserver.publish(MEDICAL_EVENTS.SECURITY_EVENT, {\r\n        type: 'prediction_error',\r\n        strategy: this.name,\r\n        error: error.message,\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Strategy for comprehensive stroke assessment\r\n */\r\nclass FullStrokePredictionStrategy extends PredictionStrategy {\r\n  constructor() {\r\n    super('FULL_STROKE', 'Comprehensive stroke prediction with full clinical data');\r\n    this.requiredFields = [\r\n      'gfap', 'age', 'systolic_bp', 'diastolic_bp', 'fast_ed_score',\r\n      'sex', 'facialtwitching', 'armparese', 'speechdeficit', 'gaze', 'agitation',\r\n    ];\r\n    this.optionalFields = ['strokeOnsetKnown', 'medical_history'];\r\n  }\r\n\r\n  preprocessInput(inputData) {\r\n    return {\r\n      gfap: parseFloat(inputData.gfap),\r\n      age: parseInt(inputData.age, 10),\r\n      systolic_bp: parseFloat(inputData.systolic_bp),\r\n      diastolic_bp: parseFloat(inputData.diastolic_bp),\r\n      fast_ed_score: parseInt(inputData.fast_ed_score, 10),\r\n      sex: inputData.sex === 'male' ? 1 : 0,\r\n      facialtwitching: inputData.facialtwitching === true || inputData.facialtwitching === 'true',\r\n      armparese: inputData.armparese === true || inputData.armparese === 'true',\r\n      speechdeficit: inputData.speechdeficit === true || inputData.speechdeficit === 'true',\r\n      gaze: inputData.gaze === true || inputData.gaze === 'true',\r\n      agitation: inputData.agitation === true || inputData.agitation === 'true',\r\n      strokeOnsetKnown: inputData.strokeOnsetKnown === true || inputData.strokeOnsetKnown === 'true',\r\n    };\r\n  }\r\n\r\n  async predict(inputData) {\r\n    const validation = this.validateInput(inputData);\r\n    if (!validation.isValid) {\r\n      throw new Error(`Validation failed: ${validation.errors.join(', ')}`);\r\n    }\r\n\r\n    const processedInput = this.preprocessInput(inputData);\r\n\r\n    medicalEventObserver.publish(MEDICAL_EVENTS.ASSESSMENT_STARTED, {\r\n      strategy: this.name,\r\n      inputFields: Object.keys(processedInput),\r\n    });\r\n\r\n    try {\r\n      const rawResult = await predictFullStroke(processedInput);\r\n      const result = this.postprocessResult(rawResult, inputData);\r\n\r\n      medicalEventObserver.publish(MEDICAL_EVENTS.RESULTS_GENERATED, {\r\n        strategy: this.name,\r\n        success: true,\r\n        confidence: result.confidence,\r\n      });\r\n\r\n      return result;\r\n    } catch (error) {\r\n      medicalEventObserver.publish(MEDICAL_EVENTS.SECURITY_EVENT, {\r\n        type: 'prediction_error',\r\n        strategy: this.name,\r\n        error: error.message,\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Context class for managing prediction strategies\r\n */\r\nexport class PredictionContext {\r\n  constructor() {\r\n    this.strategies = new Map();\r\n    this.currentStrategy = null;\r\n    this.predictionHistory = [];\r\n\r\n    // Register default strategies\r\n    this.registerStrategy(new ComaPredictionStrategy());\r\n    this.registerStrategy(new LimitedDataPredictionStrategy());\r\n    this.registerStrategy(new FullStrokePredictionStrategy());\r\n  }\r\n\r\n  /**\r\n   * Register a new prediction strategy\r\n   * @param {PredictionStrategy} strategy - Strategy to register\r\n   */\r\n  registerStrategy(strategy) {\r\n    if (!(strategy instanceof PredictionStrategy)) {\r\n      throw new Error('Strategy must extend PredictionStrategy');\r\n    }\r\n    this.strategies.set(strategy.name, strategy);\r\n  }\r\n\r\n  /**\r\n   * Set the current prediction strategy\r\n   * @param {string} strategyName - Name of the strategy to use\r\n   */\r\n  setStrategy(strategyName) {\r\n    const strategy = this.strategies.get(strategyName);\r\n    if (!strategy) {\r\n      throw new Error(`Unknown strategy: ${strategyName}`);\r\n    }\r\n    this.currentStrategy = strategy;\r\n  }\r\n\r\n  /**\r\n   * Execute prediction using the current strategy\r\n   * @param {Object} inputData - Input data for prediction\r\n   * @returns {Promise<Object>} Prediction result\r\n   */\r\n  async predict(inputData) {\r\n    if (!this.currentStrategy) {\r\n      throw new Error('No prediction strategy selected');\r\n    }\r\n\r\n    const startTime = performance.now();\r\n\r\n    try {\r\n      const result = await this.currentStrategy.predict(inputData);\r\n      const duration = performance.now() - startTime;\r\n\r\n      // Add to prediction history\r\n      this.predictionHistory.push({\r\n        strategy: this.currentStrategy.name,\r\n        timestamp: new Date().toISOString(),\r\n        duration,\r\n        success: true,\r\n      });\r\n\r\n      return result;\r\n    } catch (error) {\r\n      const duration = performance.now() - startTime;\r\n\r\n      this.predictionHistory.push({\r\n        strategy: this.currentStrategy.name,\r\n        timestamp: new Date().toISOString(),\r\n        duration,\r\n        success: false,\r\n        error: error.message,\r\n      });\r\n\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get available strategies\r\n   * @returns {Array} List of available strategies\r\n   */\r\n  getAvailableStrategies() {\r\n    return Array.from(this.strategies.keys());\r\n  }\r\n\r\n  /**\r\n   * Get strategy information\r\n   * @param {string} strategyName - Name of the strategy\r\n   * @returns {Object} Strategy information\r\n   */\r\n  getStrategyInfo(strategyName) {\r\n    const strategy = this.strategies.get(strategyName);\r\n    if (!strategy) {\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      name: strategy.name,\r\n      description: strategy.description,\r\n      requiredFields: strategy.requiredFields,\r\n      optionalFields: strategy.optionalFields,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get prediction history for audit\r\n   * @returns {Array} Prediction history\r\n   */\r\n  getPredictionHistory() {\r\n    return [...this.predictionHistory];\r\n  }\r\n\r\n  /**\r\n   * Clear prediction history (privacy compliance)\r\n   */\r\n  clearHistory() {\r\n    this.predictionHistory = [];\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const predictionContext = new PredictionContext();\r\n\r\n// Export strategy types for external reference\r\nexport const PREDICTION_STRATEGIES = {\r\n  COMA_ICH: 'COMA_ICH',\r\n  LIMITED_DATA_ICH: 'LIMITED_DATA_ICH',\r\n  FULL_STROKE: 'FULL_STROKE',\r\n};\r\n","/**\r\n * Factory Pattern for Medical Validation Rules\r\n * iGFAP Stroke Triage Assistant - Enterprise Architecture\r\n *\r\n * Creates validation rules based on medical field types and requirements\r\n */\r\n\r\nimport { GFAP_RANGES } from '../config.js';\r\n\r\n/**\r\n * Abstract base class for validation rules\r\n */\r\nclass ValidationRule {\r\n  constructor(name, required = false) {\r\n    this.name = name;\r\n    this.required = required;\r\n    this.validators = [];\r\n    this.medicalChecks = [];\r\n  }\r\n\r\n  addValidator(validator) {\r\n    this.validators.push(validator);\r\n    return this;\r\n  }\r\n\r\n  addMedicalCheck(check) {\r\n    this.medicalChecks.push(check);\r\n    return this;\r\n  }\r\n\r\n  validate(value, formData = null) {\r\n    const errors = [];\r\n\r\n    // Check required field\r\n    if (this.required && !value && value !== 0) {\r\n      errors.push('This field is required');\r\n    }\r\n\r\n    // Run basic validators\r\n    for (const validator of this.validators) {\r\n      const error = validator(value);\r\n      if (error) {\r\n        errors.push(error);\r\n      }\r\n    }\r\n\r\n    // Run medical checks\r\n    for (const check of this.medicalChecks) {\r\n      const medicalError = check(value, formData);\r\n      if (medicalError) {\r\n        errors.push(medicalError);\r\n      }\r\n    }\r\n\r\n    return errors;\r\n  }\r\n\r\n  toConfig() {\r\n    return {\r\n      required: this.required,\r\n      validate: (value, formData) => this.validate(value, formData),\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Specific validation rule types\r\n */\r\nclass NumericValidationRule extends ValidationRule {\r\n  constructor(name, required = false, min = null, max = null) {\r\n    super(name, required);\r\n    this.min = min;\r\n    this.max = max;\r\n    this.type = 'number';\r\n\r\n    if (min !== null) {\r\n      this.addValidator((value) => {\r\n        if (value !== '' && !isNaN(value) && parseFloat(value) < min) {\r\n          return `Value must be at least ${min}`;\r\n        }\r\n        return null;\r\n      });\r\n    }\r\n\r\n    if (max !== null) {\r\n      this.addValidator((value) => {\r\n        if (value !== '' && !isNaN(value) && parseFloat(value) > max) {\r\n          return `Value must be at most ${max}`;\r\n        }\r\n        return null;\r\n      });\r\n    }\r\n  }\r\n\r\n  toConfig() {\r\n    return {\r\n      ...super.toConfig(),\r\n      min: this.min,\r\n      max: this.max,\r\n      type: this.type,\r\n    };\r\n  }\r\n}\r\n\r\nclass BiomarkerValidationRule extends NumericValidationRule {\r\n  constructor(name, biomarkerType, ranges) {\r\n    super(name, true, ranges.min, ranges.max);\r\n    this.biomarkerType = biomarkerType;\r\n    this.ranges = ranges;\r\n\r\n    // Add biomarker-specific medical checks\r\n    this.addMedicalCheck((value) => {\r\n      const numValue = parseFloat(value);\r\n      if (isNaN(numValue)) {\r\n        return null;\r\n      }\r\n\r\n      if (biomarkerType === 'GFAP' && numValue > ranges.critical) {\r\n        return 'Extremely high GFAP value - please verify lab result';\r\n      }\r\n\r\n      return null;\r\n    });\r\n  }\r\n}\r\n\r\nclass VitalSignValidationRule extends NumericValidationRule {\r\n  constructor(name, vitalType, min, max) {\r\n    super(name, true, min, max);\r\n    this.vitalType = vitalType;\r\n\r\n    // Add vital sign medical checks\r\n    this.addMedicalCheck((value, formData) => {\r\n      const numValue = parseFloat(value);\r\n      if (isNaN(numValue)) {\r\n        return null;\r\n      }\r\n\r\n      switch (vitalType) {\r\n        case 'SYSTOLIC_BP':\r\n          if (formData?.diastolic_bp) {\r\n            const diastolic = parseFloat(formData.diastolic_bp);\r\n            if (!isNaN(diastolic) && numValue <= diastolic) {\r\n              return 'Systolic BP must be higher than diastolic BP';\r\n            }\r\n          }\r\n          break;\r\n        case 'DIASTOLIC_BP':\r\n          if (formData?.systolic_bp) {\r\n            const systolic = parseFloat(formData.systolic_bp);\r\n            if (!isNaN(systolic) && numValue >= systolic) {\r\n              return 'Diastolic BP must be lower than systolic BP';\r\n            }\r\n          }\r\n          break;\r\n      }\r\n\r\n      return null;\r\n    });\r\n  }\r\n}\r\n\r\nclass AgeValidationRule extends NumericValidationRule {\r\n  constructor(name) {\r\n    super(name, true, 0, 120);\r\n\r\n    this.addMedicalCheck((value) => {\r\n      const numValue = parseFloat(value);\r\n      if (isNaN(numValue)) {\r\n        return null;\r\n      }\r\n\r\n      if (numValue < 18) {\r\n        return 'Emergency stroke assessment typically for adults (≥18 years)';\r\n      }\r\n\r\n      return null;\r\n    });\r\n  }\r\n}\r\n\r\nclass ClinicalScaleValidationRule extends NumericValidationRule {\r\n  constructor(name, scaleType, min, max) {\r\n    super(name, true, min, max);\r\n    this.scaleType = scaleType;\r\n\r\n    this.addMedicalCheck((value) => {\r\n      const numValue = parseFloat(value);\r\n      if (isNaN(numValue)) {\r\n        return null;\r\n      }\r\n\r\n      switch (scaleType) {\r\n        case 'GCS':\r\n          if (numValue < 8) {\r\n            return 'GCS < 8 indicates severe consciousness impairment - consider coma module';\r\n          }\r\n          break;\r\n        case 'FAST_ED':\r\n          if (numValue >= 4) {\r\n            return 'High FAST-ED score suggests LVO - consider urgent intervention';\r\n          }\r\n          break;\r\n      }\r\n\r\n      return null;\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Factory for creating medical validation rules\r\n */\r\nexport class MedicalValidationFactory {\r\n  static createRule(type, name, options = {}) {\r\n    switch (type) {\r\n      case 'AGE':\r\n        return new AgeValidationRule(name);\r\n\r\n      case 'BIOMARKER':\r\n        if (options.biomarkerType === 'GFAP') {\r\n          return new BiomarkerValidationRule(name, 'GFAP', GFAP_RANGES);\r\n        }\r\n        throw new Error(`Unsupported biomarker type: ${options.biomarkerType}`);\r\n\r\n      case 'VITAL_SIGN':\r\n        return new VitalSignValidationRule(\r\n          name,\r\n          options.vitalType,\r\n          options.min,\r\n          options.max,\r\n        );\r\n\r\n      case 'CLINICAL_SCALE':\r\n        return new ClinicalScaleValidationRule(\r\n          name,\r\n          options.scaleType,\r\n          options.min,\r\n          options.max,\r\n        );\r\n\r\n      case 'NUMERIC':\r\n        return new NumericValidationRule(\r\n          name,\r\n          options.required,\r\n          options.min,\r\n          options.max,\r\n        );\r\n\r\n      default:\r\n        throw new Error(`Unsupported validation rule type: ${type}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a complete validation rule set for a medical module\r\n   * @param {string} moduleType - Type of medical module\r\n   * @returns {Object} Complete validation rule configuration\r\n   */\r\n  static createModuleValidation(moduleType) {\r\n    const rules = {};\r\n\r\n    switch (moduleType) {\r\n      case 'LIMITED':\r\n        rules.age_years = this.createRule('AGE', 'age_years').toConfig();\r\n        rules.systolic_bp = this.createRule('VITAL_SIGN', 'systolic_bp', {\r\n          vitalType: 'SYSTOLIC_BP',\r\n          min: 60,\r\n          max: 300,\r\n        }).toConfig();\r\n        rules.diastolic_bp = this.createRule('VITAL_SIGN', 'diastolic_bp', {\r\n          vitalType: 'DIASTOLIC_BP',\r\n          min: 30,\r\n          max: 200,\r\n        }).toConfig();\r\n        rules.gfap_value = this.createRule('BIOMARKER', 'gfap_value', {\r\n          biomarkerType: 'GFAP',\r\n        }).toConfig();\r\n        break;\r\n\r\n      case 'FULL':\r\n        // Include all limited module rules\r\n        Object.assign(rules, this.createModuleValidation('LIMITED'));\r\n\r\n        // Add additional full module rules\r\n        rules.fast_ed_score = this.createRule('CLINICAL_SCALE', 'fast_ed_score', {\r\n          scaleType: 'FAST_ED',\r\n          min: 0,\r\n          max: 9,\r\n        }).toConfig();\r\n        break;\r\n\r\n      case 'COMA':\r\n        rules.gfap_value = this.createRule('BIOMARKER', 'gfap_value', {\r\n          biomarkerType: 'GFAP',\r\n        }).toConfig();\r\n        rules.gcs = this.createRule('CLINICAL_SCALE', 'gcs', {\r\n          scaleType: 'GCS',\r\n          min: 3,\r\n          max: 15,\r\n        }).toConfig();\r\n        break;\r\n\r\n      default:\r\n        throw new Error(`Unsupported module type: ${moduleType}`);\r\n    }\r\n\r\n    return rules;\r\n  }\r\n\r\n  /**\r\n   * Validate form data using factory-created rules\r\n   * @param {Object} formData - Form data to validate\r\n   * @param {string} moduleType - Type of medical module\r\n   * @returns {Object} Validation result\r\n   */\r\n  static validateModule(formData, moduleType) {\r\n    const rules = this.createModuleValidation(moduleType);\r\n    const validationErrors = {};\r\n    let isValid = true;\r\n\r\n    Object.entries(rules).forEach(([fieldName, rule]) => {\r\n      const value = formData[fieldName];\r\n      const errors = rule.validate(value, formData);\r\n\r\n      if (errors.length > 0) {\r\n        validationErrors[fieldName] = errors;\r\n        isValid = false;\r\n      }\r\n    });\r\n\r\n    return { isValid, validationErrors };\r\n  }\r\n}\r\n\r\n// Export validation rule types for external use\r\nexport const VALIDATION_RULE_TYPES = {\r\n  AGE: 'AGE',\r\n  BIOMARKER: 'BIOMARKER',\r\n  VITAL_SIGN: 'VITAL_SIGN',\r\n  CLINICAL_SCALE: 'CLINICAL_SCALE',\r\n  NUMERIC: 'NUMERIC',\r\n};\r\n\r\nexport const BIOMARKER_TYPES = {\r\n  GFAP: 'GFAP',\r\n};\r\n\r\nexport const VITAL_SIGN_TYPES = {\r\n  SYSTOLIC_BP: 'SYSTOLIC_BP',\r\n  DIASTOLIC_BP: 'DIASTOLIC_BP',\r\n};\r\n\r\nexport const CLINICAL_SCALE_TYPES = {\r\n  GCS: 'GCS',\r\n  FAST_ED: 'FAST_ED',\r\n};\r\n"],"file":"assets/index-DIpsYUXh.js"}