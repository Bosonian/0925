import{D as h,A as a}from"./index-DW6iNm3T.js";class b extends Error{constructor(e,t,r){super(e),this.name="APIError",this.status=t,this.url=r}}class c extends b{constructor(e,t,r){super(e,t,r),this.name="MedicalAPIError"}}function f(o,e){if(!o||typeof o!="object")return null;const t=[],r=[];return Object.entries(o).forEach(([i,s])=>{typeof s=="number"&&(s>0?t.push({label:i,weight:s}):s<0&&r.push({label:i,weight:Math.abs(s)}))}),t.sort((i,s)=>s.weight-i.weight),r.sort((i,s)=>s.weight-i.weight),{kind:"flat_dictionary",units:"logit",positive:t,negative:r,meta:{}}}const l={safeParseFloat:(o,e=0)=>{const t=parseFloat(o);return isNaN(t)?e:t},normalizeBooleans:o=>{const e={...o};return Object.keys(e).forEach(t=>{e[t]==="true"||e[t]===!0?e[t]=1:(e[t]==="false"||e[t]===!1)&&(e[t]=0)}),e},async makeApiCall(o,e,t="unknown"){console.log(`[API] Making ${t} request to:`,o),console.log("[API] Payload:",e);try{const r=new AbortController,i=o.includes("full_stroke")?15e3:8e3,s=setTimeout(()=>r.abort(),i),d=this.normalizeBooleans(e),u=await fetch(o,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(d),signal:r.signal,mode:"cors"});if(clearTimeout(s),!u.ok){const p=await u.text().catch(()=>"Network error");throw new c(`API request failed: ${u.status} ${u.statusText} - ${p}`,u.status,o)}const n=await u.json();return console.log(`[API] ${t} response:`,n),console.log(`[API] ${t} response keys:`,Object.keys(n)),console.log(`[API] ${t} first key:`,Object.keys(n)[0]),console.log(`[API] ${t} first value:`,n[Object.keys(n)[0]]),console.log(`[API] ${t} probability:`,n.probability),console.log(`[API] ${t} ich_probability:`,n.ich_probability),!n.probability&&n.ich_probability!==void 0&&(n.probability=n.ich_probability,console.log(`[API] ${t} normalized probability from ich_probability:`,n.probability)),n}catch(r){throw r.name==="AbortError"?(console.warn(`[API] ${t} request timeout`),new c(`Request timeout after ${timeout/1e3}s`,408,o)):r instanceof c?r:(console.error(`[API] ${t} request failed:`,r),new c(`Network error: ${r.message}`,0,o))}},getRequestStats:()=>({requests:0,errors:0,avgResponseTime:0}),cancelAllRequests:()=>console.log("Cancel requests - not implemented"),async predict(o,e){const r={coma_ich:a.COMA_ICH,limited_ich:a.LDM_ICH,full_stroke:a.FULL_STROKE,lvo:a.LVO_PREDICTION}[o];if(!r)throw new c(`Unknown module type: ${o}`,400,"unknown");return await this.makeApiCall(r,e,o)}};async function I(){console.log("Warming up Cloud Functions...");const e=[a.FULL_STROKE,a.LVO_PREDICTION,a.COMA_ICH,a.LDM_ICH,a.AUTHENTICATE].map(async(t,r)=>{await new Promise(i=>setTimeout(i,r*200));try{const i=new AbortController,s=t.includes("full_stroke")?8e3:3e3,d=setTimeout(()=>i.abort(),s);await fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({}),signal:i.signal,mode:"cors"}),clearTimeout(d),console.log(`✓ Warmed up: ${t.split("/").pop()}`)}catch(i){console.log(`✓ Warm-up attempt for ${t.split("/").pop()} completed`)}});Promise.all(e).then(()=>{console.log("✅ Cloud Functions warm-up complete")}).catch(()=>{})}async function g(o){try{return await l.predict("coma_ich",o)}catch(e){if(e instanceof c){const t=new Error(e.message);throw t.name="APIError",t.status=e.status,t.url=e.url,t}throw e}}async function A(o){try{return await l.predict("limited_ich",o)}catch(e){if(e instanceof c){const t=new Error(e.message);throw t.name="APIError",t.status=e.status,t.url=e.url,t}throw e}}async function w(o,e=0){console.log("[API] predictFullStroke called with payload:",o),console.log("[API] isLocalPreview():",m());try{const t=await l.predict("full_stroke",o);console.log("[API] Full stroke raw response:",t);const r=t.ich_prediction||{};console.log("[API] Extracted ICH data:",r);let i=t.lvo_prediction||{};return{ich:{probability:r.probability,drivers:r.drivers?f(r.drivers,"ICH"):r.drivers,confidence:r.confidence,module:r.module},lvo:{probability:i.probability,drivers:i.drivers?f(i.drivers,"LVO"):i.drivers,confidence:i.confidence,module:i.module}}}catch(t){if(console.error("Full Stroke prediction failed:",t),t.status===408&&e<1)return console.log("⏱️ Retrying Full Stroke API (cold start detected)..."),w(o,e+1);if(m()){const r=h.mockApiResponses.full_stroke,i=r.ich_prediction||{},s=r.lvo_prediction||{};return{ich:{probability:l.safeParseFloat(i.probability,0),drivers:i.drivers||null,confidence:l.safeParseFloat(i.confidence,.85),module:"Full Stroke (Mock)"},lvo:{probability:l.safeParseFloat(s.probability,0),drivers:s.drivers||null,confidence:l.safeParseFloat(s.confidence,.85),module:"Full Stroke (Mock)"}}}throw new c(`Failed to get stroke predictions: ${t.message}`,t.status,a.FULL_STROKE)}}function m(){return["localhost","127.0.0.1","0.0.0.0"].includes(window.location.hostname)}function y(o){try{const e=Math.max(0,10**(.0192+.4533*Math.log10(Math.max(1,Math.min(o,1e4)))));return Number.isFinite(e)?e:0}catch(e){return 0}}function _(o){return!Number.isFinite(o)||o<=0?"5-10%":o>=60?"91-100%":o>=50?"44-91%":o>=30?"19-44%":o>=10?"10-19%":"5-10%"}function k(o){return o<1?"<1 ml":o<10?`${o.toFixed(1)} ml`:`${Math.round(o)} ml`}export{b as A,A as a,g as b,_ as c,y as e,k as f,w as p,I as w};
//# sourceMappingURL=prediction-models-C4eZZ_Fv.js.map
