import{m as h,L as g,s as c,E as p,a as m,M as y}from"./index-DIpsYUXh.js";import{m as l,M as d,a as I,P as M}from"./medical-core-Cya2lCqH.js";const Y=["p","div","span","br","strong","b","em","i","u","h1","h2","h3","h4","h5","h6","ul","ol","li","table","tr","td","th","thead","tbody","small","sub","sup","button","input","form","label","select","option","textarea","a","img","canvas","svg","path","circle","rect","line","g"],z={div:["class","id","style","data-id","data-action","data-value","data-module","data-target"],span:["class","id","style","data-id"],p:["class","style"],strong:["class"],b:["class"],em:["class"],i:["class"],table:["class"],tr:["class"],td:["class","colspan","rowspan"],th:["class","colspan","rowspan"],ul:["class"],ol:["class"],li:["class"],h1:["class"],h2:["class"],h3:["class"],h4:["class"],h5:["class"],h6:["class"],small:["class"],button:["class","id","type","data-action","data-value","data-target","disabled"],input:["class","id","type","name","value","placeholder","required","data-module","autocomplete","readonly","checked","min","max","step","aria-describedby"],form:["class","id","data-module","action","method"],label:["class","for"],select:["class","id","name","required"],option:["value","selected"],textarea:["class","id","name","placeholder","required","rows","cols"],a:["href","target","class","id"],img:["src","alt","class","id","width","height"],canvas:["class","id","width","height"],svg:["class","id","width","height","viewBox","xmlns"],path:["d","fill","stroke","stroke-width","class"],circle:["cx","cy","r","fill","stroke","stroke-width","class"],rect:["x","y","width","height","fill","stroke","stroke-width","class"],line:["x1","y1","x2","y2","stroke","stroke-width","class"],g:["class","transform"]},$=["color","background-color","font-size","font-weight","text-align","margin","padding","border","display","visibility","opacity"];function K(a,e={}){if(typeof a!="string")return"";if(H(a))throw new Error("Potentially malicious content detected");const n=new DOMParser().parseFromString(a,"text/html");if(n.querySelector("parsererror"))throw new Error("Invalid HTML content");return W(n.body),n.body.innerHTML;}function H(a){return[/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,/javascript:/gi,/on\w+\s*=/gi,/<iframe\b(?![^>]*src=["'][^"']*\/0925\/)/gi,/<object\b/gi,/<embed\b/gi,/<meta\b/gi,/<link\b(?![^>]*rel=["']manifest)/gi].some(t=>t.test(a));}function W(a,e){const t=[];for(let n=0;n<a.childNodes.length;n++){const s=a.childNodes[n];if(s.nodeType===Node.ELEMENT_NODE){const i=s.tagName.toLowerCase();if(!Y.includes(i)){t.push(s);continue;}j(s),W(s);}else s.nodeType===Node.TEXT_NODE?s.textContent=q(s.textContent):t.push(s);}t.forEach(n=>{a.removeChild(n);});}function j(a){const e=a.tagName.toLowerCase(),t=z[e]||[],n=[];for(let s=0;s<a.attributes.length;s++){const i=a.attributes[s],r=i.name.toLowerCase(),o=r.startsWith("data-");!t.includes(r)&&!o?n.push(r):r==="style"?a.setAttribute("style",J(i.value)):a.setAttribute(r,Q(i.value));}n.forEach(s=>{a.removeAttribute(s);});}function J(a){if(!a)return"";const e=a.split(";"),t=[];return e.forEach(n=>{const[s,i]=n.split(":").map(r=>r.trim());s&&i&&$.includes(s.toLowerCase())&&!i.includes("javascript:")&&!i.includes("expression(")&&t.push(`${s}: ${i}`);}),t.join("; ");}function q(a){return a?a.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;").replace(/\//g,"&#x2F;"):"";}function Q(a){return a?a.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;").replace(/</g,"&lt;").replace(/>/g,"&gt;"):"";}function D(a,e,t={}){if(!(!a||typeof e!="string"))try{const n=K(e,t);a.innerHTML=n;}catch(n){throw a.textContent=e.replace(/<[^>]*>/g,""),new Error(`HTML sanitization failed: ${n.message}`);}}var L={};class X{constructor(){this.config={},this.isInitialized=!1,this.initializeConfig();}initializeConfig(){try{typeof process!="undefined"&&L&&(this.config={...L}),typeof window!="undefined"&&this.loadClientConfig(),this.isInitialized=!0;}catch(e){console.warn("Failed to initialize environment config:",e.message),this.loadDefaults();}}loadClientConfig(){const e={NODE_ENV:"production",DEBUG_MODE:!1,MOCK_API_ENABLED:!1,LOG_LEVEL:"info",SESSION_TIMEOUT_HOURS:4,BCRYPT_SALT_ROUNDS:12,ENCRYPTION_KEY_LENGTH:256,MAX_AUTH_ATTEMPTS:5,RATE_LIMIT_WINDOW_MS:9e5,ENABLE_DATA_ENCRYPTION:!0,ENABLE_AUDIT_TRAIL:!0,DATA_RETENTION_DAYS:90,GCP_PROJECT_ID:"igfap-452720",GCP_REGION:"europe-west3"};this.config={...this.config,...e};}loadDefaults(){this.config={NODE_ENV:"development",DEBUG_MODE:!1,MOCK_API_ENABLED:!0,LOG_LEVEL:"warn",SESSION_TIMEOUT_HOURS:4,BCRYPT_SALT_ROUNDS:12,MAX_AUTH_ATTEMPTS:3,RATE_LIMIT_WINDOW_MS:9e5,ENABLE_DATA_ENCRYPTION:!0,ENABLE_AUDIT_TRAIL:!0,DATA_RETENTION_DAYS:30,GCP_PROJECT_ID:"igfap-452720",GCP_REGION:"europe-west3"},this.isInitialized=!0;}get(e,t=null,n="string"){this.isInitialized||this.initializeConfig();let s=this.config[e];(s==null||s==="")&&(s=t);try{switch(n){case"number":return s!==null?Number(s):t;case"boolean":return typeof s=="boolean"?s:s==="true"||s==="1"||s==="yes";case"array":return Array.isArray(s)?s:typeof s=="string"?s.split(",").map(i=>i.trim()):t;case"string":default:return s!==null?String(s):t;}}catch(i){return console.warn(`Failed to convert environment variable ${e} to ${n}:`,i.message),t;}}getResearchPassword(){return this.get("RESEARCH_PASSWORD")||"Neuro25";}getApiKey(e){const t=this.get(`${e.toUpperCase()}_API_KEY`);return!t||t==="YOUR_API_KEY_HERE"?null:t;}isDevelopment(){return this.get("NODE_ENV")==="development"||typeof window!="undefined"&&["localhost","127.0.0.1","0.0.0.0"].includes(window.location.hostname);}isProduction(){return this.get("NODE_ENV")==="production"&&!this.isDevelopment();}getSessionConfig(){return{timeoutHours:this.get("SESSION_TIMEOUT_HOURS",4,"number"),secretKey:this.get("SESSION_SECRET_KEY")||this.generateSecretKey(),maxAuthAttempts:this.get("MAX_AUTH_ATTEMPTS",5,"number"),rateLimitWindow:this.get("RATE_LIMIT_WINDOW_MS",9e5,"number")};}getSecurityConfig(){return{encryptionKeyLength:this.get("ENCRYPTION_KEY_LENGTH",256,"number"),bcryptSaltRounds:this.get("BCRYPT_SALT_ROUNDS",12,"number"),enableDataEncryption:this.get("ENABLE_DATA_ENCRYPTION",!0,"boolean"),enableAuditTrail:this.get("ENABLE_AUDIT_TRAIL",!0,"boolean"),dataRetentionDays:this.get("DATA_RETENTION_DAYS",90,"number")};}getGcpConfig(){return{projectId:this.get("GCP_PROJECT_ID","igfap-452720"),region:this.get("GCP_REGION","europe-west3"),baseUrl:`https://${this.get("GCP_REGION","europe-west3")}-${this.get("GCP_PROJECT_ID","igfap-452720")}.cloudfunctions.net`};}generateSecretKey(){try{if(typeof crypto!="undefined"&&crypto.getRandomValues){const e=new Uint8Array(32);return crypto.getRandomValues(e),Array.from(e,t=>t.toString(16).padStart(2,"0")).join("");}}catch(e){console.warn("Failed to generate cryptographically secure key, using fallback");}return`fallback-key-${Date.now()}-${Math.random().toString(36).substring(2)}`;}validateConfig(){const e=[],t=[];if(this.get("ENABLE_DATA_ENCRYPTION",!0,"boolean")||e.push("Data encryption is disabled in production environment"),this.get("ENABLE_AUDIT_TRAIL",!0,"boolean")||t.push("Audit trail is disabled - may affect compliance"),this.get("BCRYPT_SALT_ROUNDS",12,"number")<10&&e.push("BCrypt salt rounds too low for production security"),this.isProduction()&&this.get("DEBUG_MODE",!1,"boolean")&&t.push("Debug mode enabled in production environment"),this.isProduction()){const n=this.get("RESEARCH_PASSWORD");(!n||n==="Neuro25")&&t.push("Using default research password in production");const s=this.get("SESSION_SECRET_KEY");(!s||s.includes("your-secure"))&&e.push("Default session secret in production environment");}return{isValid:e.length===0,issues:e,warnings:t,configStatus:{encryption:this.get("ENABLE_DATA_ENCRYPTION",!0,"boolean"),auditTrail:this.get("ENABLE_AUDIT_TRAIL",!0,"boolean"),development:this.isDevelopment(),production:this.isProduction()}};}getSafeConfig(){const e=["NODE_ENV","DEBUG_MODE","MOCK_API_ENABLED","LOG_LEVEL","SESSION_TIMEOUT_HOURS","BCRYPT_SALT_ROUNDS","ENCRYPTION_KEY_LENGTH","MAX_AUTH_ATTEMPTS","RATE_LIMIT_WINDOW_MS","ENABLE_DATA_ENCRYPTION","ENABLE_AUDIT_TRAIL","DATA_RETENTION_DAYS","GCP_PROJECT_ID","GCP_REGION"],t={};return e.forEach(n=>{t[n]=this.config[n];}),t;}}const Z=new X,ve=()=>Z.getResearchPassword();class ee{constructor(){this.algorithm="AES-GCM",this.keyLength=256,this.ivLength=12,this.version="1.0",this.encryptionKey=null,this.isSupported=this.checkWebCryptoSupport(),this.isSupported?this.initializeEncryption():h.warn("Web Crypto API not supported, falling back to unencrypted storage",{category:g.SECURITY});}checkWebCryptoSupport(){return typeof window!="undefined"&&window.crypto&&window.crypto.subtle&&typeof window.crypto.subtle.encrypt=="function";}async initializeEncryption(){return c(async()=>{const e=await this.getOrCreateKeyMaterial();return this.encryptionKey=await window.crypto.subtle.deriveKey({name:"PBKDF2",salt:new TextEncoder().encode("iGFAP-Medical-2024"),iterations:1e5,hash:"SHA-256"},e,{name:this.algorithm,length:this.keyLength},!1,["encrypt","decrypt"]),h.info("Medical data encryption initialized",{category:g.SECURITY,algorithm:this.algorithm,keyLength:this.keyLength}),!0;},{category:p.SECURITY,severity:m.HIGH,context:{operation:"encryption_initialization"}});}async getOrCreateKeyMaterial(){return c(async()=>{let e=sessionStorage.getItem("_medical_km");if(!e){const n=window.crypto.getRandomValues(new Uint8Array(32));e=Array.from(n,s=>s.toString(16).padStart(2,"0")).join(""),sessionStorage.setItem("_medical_km",e),h.debug("Generated new encryption key material",{category:g.SECURITY});}const t=new Uint8Array(e.match(/.{1,2}/g).map(n=>parseInt(n,16)));return await window.crypto.subtle.importKey("raw",t,"PBKDF2",!1,["deriveKey"]);},{category:p.SECURITY,context:{operation:"key_material_generation"}});}async encryptData(e){return!this.isSupported||!this.encryptionKey?(h.warn("Encryption not available, storing data unencrypted",{category:g.SECURITY}),JSON.stringify(e)):c(async()=>{const t=JSON.stringify(e),n=new TextEncoder().encode(t),s=window.crypto.getRandomValues(new Uint8Array(this.ivLength)),i=await window.crypto.subtle.encrypt({name:this.algorithm,iv:s},this.encryptionKey,n),r=new Uint8Array(i),o=btoa(String.fromCharCode(...r)),u=btoa(String.fromCharCode(...s)),f={encrypted:o,iv:u,version:this.version,timestamp:Date.now()};return h.debug("Data encrypted successfully",{category:g.SECURITY,dataSize:t.length}),JSON.stringify(f);},{category:p.SECURITY,severity:m.MEDIUM,fallback:()=>(h.warn("Encryption failed, storing data unencrypted",{category:g.SECURITY}),JSON.stringify(e)),context:{operation:"data_encryption"}});}async decryptData(e){return e?c(async()=>{let t;try{t=JSON.parse(e);}catch(u){return h.debug("Data appears to be unencrypted legacy format",{category:g.SECURITY}),JSON.parse(e);}if(!t.encrypted||!t.iv)return t;if(!this.isSupported||!this.encryptionKey)return h.warn("Cannot decrypt data: encryption not available",{category:g.SECURITY}),null;const n=new Uint8Array(atob(t.encrypted).split("").map(u=>u.charCodeAt(0))),s=new Uint8Array(atob(t.iv).split("").map(u=>u.charCodeAt(0))),i=await window.crypto.subtle.decrypt({name:this.algorithm,iv:s},this.encryptionKey,n),r=new TextDecoder().decode(i),o=JSON.parse(r);return h.debug("Data decrypted successfully",{category:g.SECURITY,dataSize:r.length}),o;},{category:p.SECURITY,severity:m.MEDIUM,fallback:()=>(h.warn("Decryption failed, returning null",{category:g.SECURITY}),null),context:{operation:"data_decryption"}}):null;}async secureStore(e,t,n=!1){return c(async()=>{const s=n?sessionStorage:localStorage,i=await this.encryptData(t),r=`_enc_${e}`;return s.setItem(r,i),h.debug("Data stored securely",{category:g.SECURITY,key:r,storage:n?"session":"local"}),!0;},{category:p.STORAGE,context:{operation:"secure_store",key:e}});}async secureRetrieve(e,t=!1){return c(async()=>{const n=t?sessionStorage:localStorage,s=`_enc_${e}`,i=n.getItem(s);if(!i){const o=n.getItem(e);if(o){h.debug("Retrieved legacy unencrypted data",{category:g.SECURITY,key:e});try{return JSON.parse(o);}catch(u){return o;}}return null;}const r=await this.decryptData(i);return h.debug("Data retrieved securely",{category:g.SECURITY,key:s,storage:t?"session":"local",hasData:!!r}),r;},{category:p.STORAGE,context:{operation:"secure_retrieve",key:e}});}async secureRemove(e,t=!1){return c(async()=>{const n=t?sessionStorage:localStorage,s=`_enc_${e}`;return n.removeItem(s),n.removeItem(e),h.debug("Data removed securely",{category:g.SECURITY,key:s,storage:t?"session":"local"}),!0;},{category:p.STORAGE,context:{operation:"secure_remove",key:e}});}isDataEncrypted(e){try{const t=JSON.parse(e);return!!(t.encrypted&&t.iv&&t.version);}catch(t){return!1;}}async migrateLegacyData(e,t=!1){return c(async()=>{const n=t?sessionStorage:localStorage,s=n.getItem(e);if(s&&!this.isDataEncrypted(s)){h.info("Migrating legacy unencrypted data",{category:g.SECURITY,key:e});let i;try{i=JSON.parse(s);}catch(r){i=s;}return await this.secureStore(e.replace("_enc_",""),i,t),n.removeItem(e),h.info("Legacy data migration completed",{category:g.SECURITY,key:e}),!0;}return!1;},{category:p.STORAGE,context:{operation:"migrate_legacy_data",key:e}});}clearEncryptionKeys(){try{sessionStorage.removeItem("_medical_km"),this.encryptionKey=null,h.info("Encryption keys cleared",{category:g.SECURITY});}catch(e){h.warn("Failed to clear encryption keys",{category:g.SECURITY,error:e.message});}}getStatus(){return{isSupported:this.isSupported,isInitialized:!!this.encryptionKey,algorithm:this.algorithm,keyLength:this.keyLength,version:this.version};}}const x=new ee,Ae=(a,e=!1)=>x.secureRetrieve(a,e),Ce=(a,e=!1)=>x.secureRemove(a,e);class F{constructor(){this.registration=null,this.isOnline=navigator.onLine,this.updateAvailable=!1,this.isUpdateCheckEnabled=!0,this.retryCount=0,this.maxRetries=3,this.setupEventListeners();}async initialize(){return c(async()=>{if(!("serviceWorker"in navigator))throw new y("Service Worker not supported in this browser","SW_NOT_SUPPORTED",p.STORAGE,m.MEDIUM).withContext({userAgent:navigator.userAgent});const e=I.startMeasurement(M.USER_INTERACTION,"service_worker_registration");try{const t=navigator.serviceWorker.register("/0925/src/workers/medical-service-worker.js",{scope:"/0925/",updateViaCache:"none"});if(this.registration=await Promise.race([t,new Promise((n,s)=>setTimeout(()=>s(new Error("Service Worker registration timeout")),3e4))]),!this.registration)throw new y("Service Worker registration returned null","SW_REGISTRATION_NULL",p.STORAGE,m.HIGH);return await Promise.allSettled([c(()=>this.setupUpdateDetection(),null,{operation:"setup_update_detection"}),c(()=>this.setupMessageHandler(),null,{operation:"setup_message_handler"}),c(()=>this.checkForUpdates(),null,{operation:"initial_update_check"})]),I.endMeasurement(e,{success:!0}),l.publish(d.AUDIT_EVENT,{action:"sw_registered",scope:this.registration.scope}),!0;}catch(t){throw I.endMeasurement(e,{success:!1,error:t.message}),t;}},e=>(console.error("Service Worker initialization failed:",e.message),l.publish(d.AUDIT_EVENT,{action:"sw_registration_failed",error:e.message,context:e.context||{}}),!1));}setupEventListeners(){window.addEventListener("online",()=>{this.isOnline=!0,this.handleOnlineStatusChange(!0);}),window.addEventListener("offline",()=>{this.isOnline=!1,this.handleOnlineStatusChange(!1);}),document.addEventListener("visibilitychange",()=>{!document.hidden&&this.isUpdateCheckEnabled&&this.checkForUpdates();}),setInterval(()=>{this.isUpdateCheckEnabled&&this.isOnline&&this.checkForUpdates();},5*60*1e3);}setupUpdateDetection(){this.registration&&(this.registration.addEventListener("updatefound",()=>{const e=this.registration.installing;e.addEventListener("statechange",()=>{e.state==="installed"&&navigator.serviceWorker.controller&&(this.updateAvailable=!0,this.notifyUpdateAvailable());});}),navigator.serviceWorker.addEventListener("controllerchange",()=>{window.location.reload();}));}setupMessageHandler(){navigator.serviceWorker.addEventListener("message",e=>{const{type:t,data:n}=e.data;switch(t){case"SW_INSTALLED":this.handleServiceWorkerInstalled(n);break;case"SW_ACTIVATED":this.handleServiceWorkerActivated(n);break;case"SW_INSTALL_ERROR":this.handleServiceWorkerError(n);break;case"MEDICAL_DATA_SYNCED":this.handleMedicalDataSynced(n);break;}});}handleOnlineStatusChange(e){c(async()=>{l.publish(d.AUDIT_EVENT,{action:"network_status_changed",isOnline:e,timestamp:new Date().toISOString()}),await c(()=>this.showNetworkStatusNotification(e),null,{operation:"show_network_notification"}),e&&"serviceWorker"in navigator&&navigator.serviceWorker.controller&&await c(async()=>{const t=await navigator.serviceWorker.ready;if("sync"in t)return t.sync.register("medical-data-sync");},t=>{console.warn("Background sync registration failed:",t.message);},{operation:"background_sync_registration",timeout:5e3});},t=>{console.error("Error handling network status change:",t.message);});}showNetworkStatusNotification(e){return c(async()=>{if(!document||!document.body)throw new y("Document not available for notification","DOCUMENT_UNAVAILABLE",p.RENDERING,m.LOW);const t=document.createElement("div");if(!t)throw new y("Failed to create notification element","ELEMENT_CREATION_FAILED",p.RENDERING,m.LOW);t.className=`network-notification ${e?"online":"offline"}`;try{D(t,`
            <div class="notification-content">
              <span class="notification-icon">${e?"🌐":"📴"}</span>
              <span class="notification-text">
                ${e?"Connection restored":"Working offline"}
              </span>
            </div>
          `);}catch(n){console.warn("Network notification sanitization failed, using fallback:",n.message),t.textContent=e?"🌐 Connection restored":"📴 Working offline";}if(!document.body)throw new y("Document body not available when appending notification","BODY_UNAVAILABLE",p.RENDERING,m.LOW);return document.body.appendChild(t),setTimeout(()=>{c(()=>{t&&t.parentNode&&t.parentNode.removeChild(t);},null,{operation:"remove_notification"});},3e3),t;},t=>{console.warn("Failed to show network status notification:",t.message);try{console&&console.info&&console.info(`Network status: ${e?"Online":"Offline"}`);}catch(n){}return null;});}async checkForUpdates(){return c(async()=>{if(!this.registration)throw new y("No service worker registration available for update check","NO_REGISTRATION",p.STORAGE,m.LOW);const e=this.registration.update(),t=new Promise((n,s)=>setTimeout(()=>s(new Error("Update check timeout")),1e4));return await Promise.race([e,t]),this.retryCount=0,!0;},e=>{if(console.warn("Update check failed:",e.message),this.retryCount++,this.retryCount<this.maxRetries){const t=Math.min(5e3*2**(this.retryCount-1),3e4);setTimeout(()=>{c(()=>this.checkForUpdates(),null,{operation:"retry_update_check",retryCount:this.retryCount});},t);}else console.error(`Update check failed after ${this.maxRetries} retries`),l.publish(d.AUDIT_EVENT,{action:"sw_update_check_failed",retryCount:this.retryCount,error:e.message});return!1;},{retryCount:this.retryCount});}async applyUpdate(){if(!(!this.updateAvailable||!this.registration))try{this.registration.waiting&&this.registration.waiting.postMessage({type:"SKIP_WAITING"}),l.publish(d.AUDIT_EVENT,{action:"sw_update_applied"});}catch(e){}}notifyUpdateAvailable(){l.publish(d.AUDIT_EVENT,{action:"sw_update_available"}),this.showUpdateNotification();}showUpdateNotification(){const e=document.createElement("div");e.className="update-notification";try{D(e,`
        <div class="notification-content">
          <span class="notification-icon">🔄</span>
          <span class="notification-text">App update available</span>
          <button class="update-button" onclick="medicalSWManager.applyUpdate()">
            Update Now
          </button>
        </div>
      `);}catch(t){console.error("Update notification sanitization failed:",t),e.textContent="🔄 App update available. Please refresh to update.";}document.body.appendChild(e);}async getCacheStatus(){return c(async()=>{if(!navigator.serviceWorker||!navigator.serviceWorker.controller)throw new y("Service worker controller not available","NO_SW_CONTROLLER",p.STORAGE,m.LOW);return new Promise((e,t)=>{const n=new MessageChannel,s=setTimeout(()=>{t(new Error("Cache status request timeout"));},5e3);n.port1.onmessage=i=>{clearTimeout(s);try{if(!i.data||typeof i.data!="object")throw new Error("Invalid cache status response format");e(i.data);}catch(r){t(r);}},n.port1.onerror=i=>{clearTimeout(s),t(new Error(`Message channel error: ${i.message||"Unknown error"}`));};try{navigator.serviceWorker.controller.postMessage({type:"GET_CACHE_STATUS"},[n.port2]);}catch(i){clearTimeout(s),t(new Error(`Failed to send cache status request: ${i.message}`));}});},e=>(console.warn("Failed to get cache status:",e.message),{error:!0,message:e.message,timestamp:new Date().toISOString()}));}async clearCaches(){navigator.serviceWorker.controller&&(navigator.serviceWorker.controller.postMessage({type:"CLEAR_CACHE"}),l.publish(d.AUDIT_EVENT,{action:"sw_caches_cleared"}));}async prefetchResources(e){navigator.serviceWorker.controller&&navigator.serviceWorker.controller.postMessage({type:"PREFETCH_RESOURCES",data:{resources:e}});}handleServiceWorkerInstalled(e){l.publish(d.AUDIT_EVENT,{action:"sw_installed",cacheVersion:e.cacheVersion,criticalResourcesCount:e.criticalResourcesCount});}handleServiceWorkerActivated(e){l.publish(d.AUDIT_EVENT,{action:"sw_activated",cacheVersion:e.cacheVersion,cleanedCaches:e.cleanedCaches});}handleServiceWorkerError(e){l.publish(d.AUDIT_EVENT,{action:"sw_error",error:e.error});}handleMedicalDataSynced(e){l.publish(d.AUDIT_EVENT,{action:"medical_data_synced",timestamp:e.timestamp});}getOfflineStatus(){return{isOnline:this.isOnline,serviceWorkerActive:!!navigator.serviceWorker.controller,updateAvailable:this.updateAvailable,cacheStatus:this.registration?"available":"unavailable"};}setUpdateCheckEnabled(e){this.isUpdateCheckEnabled=e,l.publish(d.AUDIT_EVENT,{action:"sw_update_check_toggled",enabled:e});}}class G{constructor(e){this.swManager=e,this.installPromptEvent=null,this.isInstallable=!1,this.setupInstallPrompt();}setupInstallPrompt(){window.addEventListener("beforeinstallprompt",e=>{e.preventDefault(),this.installPromptEvent=e,this.isInstallable=!0,l.publish(d.AUDIT_EVENT,{action:"pwa_install_prompt_available"}),setTimeout(()=>{this.showInstallBanner();},2e3);}),window.addEventListener("appinstalled",()=>{l.publish(d.AUDIT_EVENT,{action:"pwa_installed"}),this.hideInstallBanner();});}showInstallBanner(){if(!this.isInstallable)return;const e=document.createElement("div");e.id="install-banner",e.className="install-banner";const t=document.createElement("div");t.className="banner-content";const n=document.createElement("div");n.className="banner-text";const s=document.createElement("strong");s.textContent="Install Stroke Triage Assistant";const i=document.createElement("p");i.textContent="Get offline access and faster performance",n.appendChild(s),n.appendChild(i);const r=document.createElement("div");r.className="banner-actions";const o=document.createElement("button");o.className="install-button",o.textContent="Install",o.addEventListener("click",()=>{this.promptInstall();});const u=document.createElement("button");u.className="dismiss-button",u.textContent="×",u.addEventListener("click",()=>{this.hideInstallBanner();}),r.appendChild(o),r.appendChild(u),t.appendChild(n),t.appendChild(r),e.appendChild(t),document.body.appendChild(e);}hideInstallBanner(){const e=document.getElementById("install-banner");e&&e.remove();}async promptInstall(){if(this.installPromptEvent)try{const e=await this.installPromptEvent.prompt();l.publish(d.AUDIT_EVENT,{action:"pwa_install_prompted",outcome:e.outcome}),this.installPromptEvent=null,this.isInstallable=!1,this.hideInstallBanner();}catch(e){}}}const b=new F,V=new G(b);window.medicalSWManager=b;window.offlineInstallPrompt=V;const be=Object.freeze(Object.defineProperty({__proto__:null,MedicalServiceWorkerManager:F,OfflineInstallPrompt:G,medicalSWManager:b,offlineInstallPrompt:V},Symbol.toStringTag,{value:"Module"})),k={UPDATE:"update",CONFLICT_RESOLVE:"conflict_resolve"},w={IDLE:"idle",SYNCING:"syncing",ERROR:"error",CONFLICT:"conflict",OFFLINE:"offline"},v={CLIENT_WINS:"client_wins",SERVER_WINS:"server_wins",MERGE:"merge",MANUAL:"manual"};class C{constructor(e,t,n,s,i=Date.now()){this.id=`sync_${i}_${Math.random().toString(36).substr(2,9)}`,this.type=e,this.entityType=t,this.entityId=n,this.data=s,this.timestamp=i,this.attempts=0,this.maxAttempts=3,this.status="pending",this.error=null;}canRetry(){return this.attempts<this.maxAttempts&&this.status==="error";}markFailed(e){this.status="error",this.error=e,this.attempts+=1;}markCompleted(){this.status="completed",this.error=null;}}class te{constructor(){this.status=w.IDLE,this.pendingOperations=new Map,this.conflictQueue=new Map,this.syncInterval=null,this.isOnline=navigator.onLine,this.lastSyncTime=null,this.syncInProgress=!1,this.config={syncIntervalMs:3e4,conflictRetentionMs:24*60*60*1e3,maxPendingOperations:100,enableRealTimeSync:!0,enableConflictResolution:!0},this.setupEventListeners();}async initialize(){return c(async()=>(await c(()=>this.loadPendingOperations(),e=>{console.warn("Failed to load pending operations, starting fresh:",e.message),this.pendingOperations.clear();},{operation:"load_pending_operations"}),this.isOnline&&this.config.enableRealTimeSync&&await c(()=>this.startPeriodicSync(),null,{operation:"start_periodic_sync"}),await c(()=>this.performSync(),e=>{console.warn("Initial sync failed, will retry later:",e.message);},{operation:"initial_sync"}),l.publish(d.AUDIT_EVENT,{action:"sync_manager_initialized",pendingOperations:this.pendingOperations.size}),!0),e=>(console.error("Sync Manager initialization failed:",e.message),l.publish(d.AUDIT_EVENT,{action:"sync_manager_initialization_failed",error:e.message}),!1));}setupEventListeners(){window.addEventListener("online",()=>{this.isOnline=!0,this.handleConnectionChange(!0);}),window.addEventListener("offline",()=>{this.isOnline=!1,this.handleConnectionChange(!1);}),l.subscribe(d.PATIENT_DATA_UPDATED,e=>{this.queueDataSync("patient_data",e.fieldName,e);}),l.subscribe(d.PREDICTION_COMPLETED,e=>{this.queueDataSync("prediction_result",e.module,e);}),document.addEventListener("visibilitychange",()=>{!document.hidden&&this.isOnline&&this.performSync();});}async handleConnectionChange(e){this.status=e?w.IDLE:w.OFFLINE,e?(this.startPeriodicSync(),await this.performSync(),l.publish(d.AUDIT_EVENT,{action:"sync_connection_restored",pendingOperations:this.pendingOperations.size})):(this.stopPeriodicSync(),l.publish(d.AUDIT_EVENT,{action:"sync_connection_lost"}));}queueDataSync(e,t,n){if(!this.config.enableRealTimeSync)return;const s=new C(k.UPDATE,e,t,this.sanitizeDataForSync(n));if(this.pendingOperations.size>=this.config.maxPendingOperations){const i=this.pendingOperations.keys().next().value;this.pendingOperations.delete(i);}this.pendingOperations.set(s.id,s),this.savePendingOperations(),this.isOnline&&!this.syncInProgress&&setTimeout(()=>this.performSync(),1e3),l.publish(d.AUDIT_EVENT,{action:"sync_operation_queued",entityType:e,entityId:t,operationId:s.id});}sanitizeDataForSync(e){const t={...e};return["ssn","mrn","patient_id","user_id","session_token"].forEach(s=>{t[s]&&delete t[s];}),t._syncTimestamp=Date.now(),t._syncId=`sync_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,t;}async performSync(){return c(async()=>{if(!this.isOnline||this.syncInProgress||this.pendingOperations.size===0)return{skipped:!0,reason:this.isOnline?this.syncInProgress?"already_syncing":"no_operations":"offline"};const e=I.startMeasurement(M.NETWORK,"medical_data_sync");this.syncInProgress=!0,this.status=w.SYNCING;let t=0,n=0,s=0;const i=Date.now();try{const r=Array.from(this.pendingOperations.values()),o=5,u=12e4;for(let f=0;f<r.length;f+=o){if(Date.now()-i>u)throw new y("Sync operation timeout","SYNC_TIMEOUT",p.NETWORK,m.MEDIUM).withContext({processedBatches:Math.floor(f/o),totalBatches:Math.ceil(r.length/o)});const N=r.slice(f,f+o);(await c(()=>this.processSyncBatch(N),S=>(console.warn(`Batch ${Math.floor(f/o)} sync failed:`,S.message),N.map(B=>({operationId:B.id,status:"error",error:S.message}))),{operation:"process_sync_batch",batchIndex:Math.floor(f/o),timeout:3e4})).forEach(S=>{S.status==="completed"?(t++,this.pendingOperations.delete(S.operationId)):S.status==="conflict"?(s++,c(()=>this.handleSyncConflict(S),null,{operation:"handle_sync_conflict"})):n++;});}return this.lastSyncTime=Date.now(),await c(()=>this.savePendingOperations(),f=>{console.warn("Failed to save pending operations after sync:",f.message);},{operation:"save_pending_operations_after_sync"}),l.publish(d.AUDIT_EVENT,{action:"sync_completed",completedCount:t,errorCount:n,conflictCount:s,duration:Date.now()-i}),I.endMeasurement(e,{success:!0,operationsProcessed:t+n+s}),{success:!0,completedCount:t,errorCount:n,conflictCount:s,duration:Date.now()-i};}catch(r){throw I.endMeasurement(e,{success:!1,error:r.message}),this.status=w.ERROR,r;}finally{this.syncInProgress=!1,this.status=(this.pendingOperations.size>0,w.IDLE);}},e=>(console.error("Sync operation failed:",e.message),l.publish(d.AUDIT_EVENT,{action:"sync_failed",error:e.message,pendingOperations:this.pendingOperations.size}),this.status=w.ERROR,{success:!1,error:e.message}),{context:{pendingOperations:this.pendingOperations.size}});}async processSyncBatch(e){const t=[];for(const n of e)try{const s=await this.executeSyncOperation(n);t.push({operationId:n.id,status:"completed",result:s}),n.markCompleted();}catch(s){s.name==="ConflictError"?t.push({operationId:n.id,status:"conflict",conflict:s.conflict,operation:n}):(n.markFailed(s.message),n.canRetry()||this.pendingOperations.delete(n.id),t.push({operationId:n.id,status:"error",error:s.message}));}return t;}async executeSyncOperation(e){if(await new Promise(t=>setTimeout(t,100+Math.random()*200)),Math.random()<.05){const t={clientData:e.data,serverData:{...e.data,_serverModified:!0},conflictFields:["timestamp","value"],resolution:v.MANUAL},n=new Error("Data conflict detected");throw n.name="ConflictError",n.conflict=t,n;}if(Math.random()<.02)throw new Error("Network request failed");return{entityType:e.entityType,entityId:e.entityId,syncTimestamp:Date.now(),serverVersion:Date.now()};}handleSyncConflict(e){const{operation:t,conflict:n}=e;this.conflictQueue.set(t.id,{operation:t,conflict:n,timestamp:Date.now()}),this.status=w.CONFLICT,this.config.enableConflictResolution&&this.resolveConflictAutomatically(t.id,n),l.publish(d.AUDIT_EVENT,{action:"sync_conflict_detected",operationId:t.id,entityType:t.entityType,conflictFields:n.conflictFields});}async resolveConflictAutomatically(e,t){let n;switch(t.resolution){case v.CLIENT_WINS:n=t.clientData;break;case v.SERVER_WINS:n=t.serverData;break;case v.MERGE:n=this.mergeConflictData(t.clientData,t.serverData);break;default:return;}const s=new C(k.CONFLICT_RESOLVE,"conflict_resolution",e,n);this.pendingOperations.set(s.id,s),this.conflictQueue.delete(e),l.publish(d.AUDIT_EVENT,{action:"sync_conflict_auto_resolved",conflictId:e,resolution:t.resolution});}mergeConflictData(e,t){const n={...t};return["gfap_value","age_years","systolic_bp","diastolic_bp"].forEach(i=>{e[i]!==void 0&&(n[i]=e[i]);}),n._mergedAt=Date.now(),n._mergeStrategy="intelligent_merge",n;}startPeriodicSync(){this.syncInterval||(this.syncInterval=setInterval(()=>{this.isOnline&&this.pendingOperations.size>0&&this.performSync();},this.config.syncIntervalMs));}stopPeriodicSync(){this.syncInterval&&(clearInterval(this.syncInterval),this.syncInterval=null);}async forcSync(){if(!this.isOnline)throw new Error("Cannot sync while offline");this.stopPeriodicSync(),await this.performSync(),this.startPeriodicSync();}getSyncStatus(){return{status:this.status,isOnline:this.isOnline,pendingOperations:this.pendingOperations.size,conflicts:this.conflictQueue.size,lastSyncTime:this.lastSyncTime,syncInProgress:this.syncInProgress};}async loadPendingOperations(){return c(async()=>{if(typeof localStorage=="undefined")throw new y("Local storage not available","STORAGE_UNAVAILABLE",p.STORAGE,m.MEDIUM);const e=localStorage.getItem("medical_sync_pending");if(!e)return{loaded:0};let t;try{t=JSON.parse(e);}catch(i){throw new y("Failed to parse stored sync operations","PARSE_ERROR",p.STORAGE,m.MEDIUM).withContext({parseError:i.message});}if(!Array.isArray(t))throw new y("Invalid stored operations format","INVALID_FORMAT",p.STORAGE,m.MEDIUM).withContext({type:typeof t});let n=0,s=0;return t.forEach((i,r)=>{try{if(!i||typeof i!="object"||!i.type||!i.entityType||!i.entityId)throw new Error(`Invalid operation structure at index ${r}`);const o=new C(i.type,i.entityType,i.entityId,i.data,i.timestamp);if(o.attempts=Math.max(0,i.attempts||0),o.status=i.status||"pending",o.attempts>=o.maxAttempts){console.warn(`Skipping operation ${o.id} - exceeded max attempts`);return;}this.pendingOperations.set(o.id,o),n++;}catch(o){console.warn(`Failed to load operation at index ${r}:`,o.message),s++;}}),{loaded:n,errors:s};},e=>{console.warn("Failed to load pending operations:",e.message);try{localStorage.removeItem("medical_sync_pending");}catch(t){console.error("Failed to clear corrupted sync data:",t.message);}return{loaded:0,errors:1,cleared:!0};});}async savePendingOperations(){return c(async()=>{if(typeof localStorage=="undefined")throw new y("Local storage not available","STORAGE_UNAVAILABLE",p.STORAGE,m.MEDIUM);const e=Array.from(this.pendingOperations.values()).map(n=>{try{return{id:n.id,type:n.type,entityType:n.entityType,entityId:n.entityId,data:n.data,timestamp:n.timestamp,attempts:n.attempts,status:n.status};}catch(s){return console.warn(`Failed to serialize operation ${n.id}:`,s.message),null;}}).filter(n=>n!==null),t=JSON.stringify(e);return t.length>1024*1024&&console.warn("Sync operations data is very large, may hit storage limits"),localStorage.setItem("medical_sync_pending",t),{saved:e.length};},e=>{if(console.error("Failed to save pending operations:",e.message),e.name==="QuotaExceededError")try{const t=Array.from(this.pendingOperations.entries()),n=Math.floor(t.length/2),s=t.slice(-n);this.pendingOperations.clear(),s.forEach(([r,o])=>{this.pendingOperations.set(r,o);}),console.info(`Reduced operations from ${t.length} to ${s.length} due to storage quota`);const i=s.map(([,r])=>({id:r.id,type:r.type,entityType:r.entityType,entityId:r.entityId,data:r.data,timestamp:r.timestamp,attempts:r.attempts,status:r.status}));return localStorage.setItem("medical_sync_pending",JSON.stringify(i)),{saved:i.length,reduced:!0};}catch(t){return console.error("Failed to save even after reducing operations:",t.message),{saved:0,error:t.message};}return{saved:0,error:e.message};},{context:{operationCount:this.pendingOperations.size}});}clearPendingOperations(){this.pendingOperations.clear(),this.conflictQueue.clear(),localStorage.removeItem("medical_sync_pending"),l.publish(d.AUDIT_EVENT,{action:"sync_operations_cleared"});}updateConfig(e){this.config={...this.config,...e},this.syncInterval&&e.syncIntervalMs&&(this.stopPeriodicSync(),this.startPeriodicSync()),l.publish(d.AUDIT_EVENT,{action:"sync_config_updated",config:this.config});}dispose(){this.stopPeriodicSync(),this.savePendingOperations(),l.publish(d.AUDIT_EVENT,{action:"sync_manager_disposed"});}}const Oe=new te;async function E(a,e=null,t={}){try{return await a();}catch(n){console.error("Service Worker error:",n.message,t);try{(await self.clients.matchAll()).forEach(i=>{i.postMessage({type:"SW_ERROR",error:{message:n.message,context:t,timestamp:new Date().toISOString()}});});}catch(s){console.error("Failed to send error message to clients:",s);}return typeof e=="function"?e(n):e;}}const _="medical-app-v3.0.0",O=`${_}-static`,R=`${_}-api`,A=`${_}-runtime`,T=["/0925/","/0925/index.html","/0925/src/main.js","/0925/src/app.js","/0925/src/config.js","/0925/src/state/store.js","/0925/src/logic/validate.js","/0925/src/logic/ich-volume-calculator.js","/0925/src/logic/lvo-local-model.js","/0925/src/ui/render.js","/0925/src/styles/app.css","/0925/manifest.json","/0925/icon-192.png","/0925/icon-512.png"],ne=["https://europe-west3-igfap-452720.cloudfunctions.net/predict_coma_ich","https://europe-west3-igfap-452720.cloudfunctions.net/predict_limited_data_ich","https://europe-west3-igfap-452720.cloudfunctions.net/predict_full_stroke"];self.addEventListener("install",a=>{a.waitUntil(E(async()=>{const e=await caches.open(O),n=(await Promise.allSettled(T.map(async i=>{try{const r=await fetch(i);if(r.ok)return e.put(i,r);throw new Error(`Failed to fetch ${i}: ${r.status}`);}catch(r){return console.warn(`Failed to cache critical resource ${i}:`,r.message),null;}}))).filter(i=>i.status==="fulfilled").length,s=T.length-n;if(s>T.length/2)throw new Error(`Too many critical resources failed to cache: ${s}/${T.length}`);await Promise.allSettled([caches.open(R),caches.open(A)]);try{(await self.clients.matchAll()).forEach(r=>{r.postMessage({type:"SW_INSTALLED",cacheVersion:_,criticalResourcesCount:T.length,successfulCaches:n,failedCaches:s,timestamp:new Date().toISOString()});});}catch(i){console.warn("Failed to send installation message:",i.message);}return self.skipWaiting(),{success:!0,successfulCaches:n,failedCaches:s};},e=>{console.error("Service Worker installation failed:",e.message);try{self.clients.matchAll().then(n=>{n.forEach(s=>{s.postMessage({type:"SW_INSTALL_ERROR",error:e.message,timestamp:new Date().toISOString()});});});}catch(t){console.error("Failed to send installation error message:",t.message);}return{success:!1,error:e.message};},{operation:"service_worker_installation",criticalResourcesCount:T.length}));});self.addEventListener("activate",a=>{a.waitUntil(E(async()=>{const t=(await caches.keys()).filter(o=>o.startsWith("medical-app-v")&&!o.includes(_)),s=(await Promise.allSettled(t.map(async o=>{try{const u=await caches.delete(o);return{cacheName:o,deleted:u};}catch(u){return console.warn(`Failed to delete cache ${o}:`,u.message),{cacheName:o,deleted:!1,error:u.message};}}))).filter(o=>o.status==="fulfilled"&&o.value.deleted).length;await Promise.race([self.clients.claim(),new Promise((o,u)=>setTimeout(()=>u(new Error("Client claim timeout")),5e3))]);const r=(await self.clients.matchAll()).map(o=>{try{return o.postMessage({type:"SW_ACTIVATED",cacheVersion:_,cleanedCaches:s,totalOldCaches:t.length,timestamp:new Date().toISOString()});}catch(u){return console.warn("Failed to notify client of activation:",u.message),null;}});return await Promise.allSettled(r),{success:!0,cleanedCaches:s};},e=>(console.error("Service Worker activation failed:",e.message),E(async()=>{(await self.clients.matchAll()).forEach(n=>{n.postMessage({type:"SW_ACTIVATION_ERROR",error:e.message,timestamp:new Date().toISOString()});});},null,{operation:"activation_error_notification"}),{success:!1,error:e.message}),{operation:"service_worker_activation"}));});self.addEventListener("fetch",a=>{const{request:e}=a,t=new URL(e.url);if(e.method!=="GET"){U(t)&&a.respondWith(P(e));return;}U(t)?a.respondWith(P(e)):le(t)?a.respondWith(re(e)):de(t)?a.respondWith(oe(e)):a.respondWith(ce(e));});async function P(a){return E(async()=>{const e=new URL(a.url);if(a.method==="POST")return await ae(a);const t=await caches.open(R),n=await t.match(a);if(n)return E(async()=>{const r=await fetch(a);r.ok&&await t.put(a,r.clone());},null,{operation:"background_cache_update",url:a.url}),n;const s=new AbortController,i=setTimeout(()=>s.abort(),1e4);try{const r=await fetch(a,{signal:s.signal});if(clearTimeout(i),r.ok)try{await t.put(a,r.clone());}catch(o){console.warn("Failed to cache API response:",o.message);}return r;}catch(r){throw clearTimeout(i),r;}},e=>(console.warn("API request failed, returning offline fallback:",e.message),ge()),{operation:"api_request_handling",url:a.url,method:a.method});}async function ae(a){return E(async()=>{const e=a.clone(),t=new AbortController,n=setTimeout(()=>t.abort(),1e4);try{const s=await fetch(a,{signal:t.signal});if(clearTimeout(n),s.ok)return E(async()=>{const i=await caches.open(R),r=await ue(e),o=await pe(s.clone());await i.put(r,o);},null,{operation:"prediction_cache_storage",url:a.url}),s;throw new Error(`API returned ${s.status}: ${s.statusText}`);}catch(s){throw clearTimeout(n),s;}},async e=>{console.warn("Network prediction failed, trying offline alternatives:",e.message);const t=await E(()=>se(a),null,{operation:"local_prediction_attempt"});if(t)return t;const n=await E(()=>he(a),null,{operation:"cached_prediction_lookup"});return n||me();},{operation:"prediction_request_handling",url:a.url});}async function se(a){return E(async()=>{let e;try{const t=await a.text();e=JSON.parse(t);}catch(t){throw new Error(`Failed to parse request body: ${t.message}`);}if(!e||typeof e!="object")throw new Error("Invalid request data format");if(a.url.includes("predict_full_stroke")){if(!e.gfap_value||!e.fast_ed_score)throw new Error("Missing required fields for local LVO prediction");if(e.gfap_value<0||e.gfap_value>1e4)throw new Error("GFAP value out of valid range");if(e.fast_ed_score<0||e.fast_ed_score>10)throw new Error("FAST-ED score out of valid range");const t=ie(e.gfap_value,e.fast_ed_score);if(!t||typeof t!="object")throw new Error("Local LVO calculation failed");return new Response(JSON.stringify({...t,source:"local_model",offline:!0,timestamp:new Date().toISOString(),warning:"This is an offline prediction using a simplified model. Seek professional medical advice."}),{status:200,headers:{"Content-Type":"application/json"}});}return null;},e=>(console.warn("Local prediction failed:",e.message),null),{operation:"local_prediction",url:a.url});}function ie(a,e){try{if(typeof a!="number"||typeof e!="number")throw new Error("GFAP and FAST-ED values must be numbers");if(!isFinite(a)||!isFinite(e))throw new Error("GFAP and FAST-ED values must be finite numbers");if(a<0||e<0)throw new Error("GFAP and FAST-ED values cannot be negative");const t=a>500?.4:a>200?.2:.1,n=e>=4?.5:e>=2?.3:.1,s=Math.min(.95,t+n),i=Math.max(.05,Math.min(.5,a/2e3));if(!isFinite(s)||!isFinite(i)||s<0||s>1||i<0||i>1)throw new Error("Calculated probabilities are invalid");return{lvo:{probability:Math.round(s*100)/100,confidence:.6,module:"Local Offline Model",warning:"Simplified offline calculation - not for clinical decisions"},ich:{probability:Math.round(i*100)/100,confidence:.4,module:"Local Offline Model",warning:"Conservative estimate - seek immediate medical evaluation"},metadata:{calculatedAt:new Date().toISOString(),inputs:{gfap:a,fastEd:e},disclaimer:"This is a simplified offline model for emergency use only. Clinical judgment and professional medical evaluation are essential."}};}catch(t){return console.error("Local LVO calculation failed:",t.message),{lvo:{probability:.1,confidence:.1,module:"Emergency Fallback",error:"Calculation failed - using minimum risk estimate"},ich:{probability:.1,confidence:.1,module:"Emergency Fallback",error:"Calculation failed - using minimum risk estimate"},metadata:{calculatedAt:new Date().toISOString(),error:t.message,disclaimer:"Calculation failed. Immediate medical evaluation required."}};}}async function re(a){const e=await caches.open(O),t=await e.match(a);if(t)return t;try{const n=await fetch(a);return n.ok&&e.put(a,n.clone()),n;}catch(n){return new Response("Service temporarily unavailable",{status:503,statusText:"Service Unavailable"});}}async function oe(a){try{const e=await fetch(a);return e.ok&&(await caches.open(A)).put(a,e.clone()),e;}catch(e){return await(await caches.open(O)).match("/0925/index.html")||new Response("App temporarily unavailable",{status:503,statusText:"Service Unavailable"});}}async function ce(a){const e=await caches.open(A);try{const t=await fetch(a);return t.ok&&e.put(a,t.clone()),t;}catch(t){return await e.match(a)||fetch(a);}}function U(a){return ne.some(e=>a.href.startsWith(e));}function le(a){return a.pathname.includes("/src/")||a.pathname.includes("/styles/")||a.pathname.endsWith(".css")||a.pathname.endsWith(".js")||a.pathname.endsWith(".png")||a.pathname.endsWith(".ico");}function de(a){return a.pathname==="/0925/"||a.pathname==="/0925/index.html"||a.pathname.endsWith("/");}async function ue(a){const e=await a.text(),t=await crypto.subtle.digest("SHA-256",new TextEncoder().encode(e)),s=Array.from(new Uint8Array(t)).map(i=>i.toString(16).padStart(2,"0")).join("");return`${a.url}#${s}`;}async function pe(a){const t={...await a.json(),_cached:!0,_cachedAt:Date.now(),_cacheVersion:_};return new Response(JSON.stringify(t),{status:a.status,statusText:a.statusText,headers:a.headers});}async function he(a){return null;}function ge(a){return new Response(JSON.stringify({error:"Network unavailable",offline:!0,guidance:"Please check your network connection. For emergency situations, contact your local emergency services immediately.",timestamp:new Date().toISOString()}),{status:503,headers:{"Content-Type":"application/json"}});}function me(){return new Response(JSON.stringify({offline:!0,guidance:{message:"Prediction services are currently unavailable. Please use clinical judgment and standard stroke protocols.",recommendations:["Assess patient using standard NIHSS scoring","Consider time since symptom onset","Evaluate for contraindications to thrombolysis","Contact stroke team or neurologist if available","If in doubt, treat as potential stroke emergency"]},emergency:"For immediate emergency response, contact your local emergency services",timestamp:new Date().toISOString()}),{status:200,headers:{"Content-Type":"application/json"}});}self.addEventListener("sync",a=>{a.tag==="medical-data-sync"&&a.waitUntil(ye());});async function ye(){try{(await self.clients.matchAll()).forEach(e=>{e.postMessage({type:"MEDICAL_DATA_SYNCED",timestamp:new Date().toISOString()});});}catch(a){}}self.addEventListener("push",a=>{if(a.data){const e=a.data.json();e.type==="medical-alert"&&a.waitUntil(fe(e));}});async function fe(a){const e={body:a.message,icon:"/0925/icon-192.png",badge:"/0925/icon-192.png",vibrate:[200,100,200],requireInteraction:!0,actions:[{action:"view",title:"View Details"},{action:"dismiss",title:"Dismiss"}]};await self.registration.showNotification(a.title,e);}self.addEventListener("notificationclick",a=>{a.notification.close(),a.action==="view"&&a.waitUntil(self.clients.openWindow("/0925/"));});self.addEventListener("message",a=>{const{type:e,data:t}=a.data;switch(e){case"SKIP_WAITING":self.skipWaiting();break;case"GET_CACHE_STATUS":a.ports[0].postMessage(Ee());break;case"CLEAR_CACHE":a.waitUntil(we());break;case"PREFETCH_RESOURCES":a.waitUntil(_e(t.resources));break;}});async function Ee(){const a=await self.caches.keys(),e={};for(const t of a){const s=await(await self.caches.open(t)).keys();e[t]=s.length;}return{version:_,caches:e,timestamp:new Date().toISOString()};}async function we(){const a=await caches.keys();await Promise.all(a.map(e=>caches.delete(e)));}async function _e(a){const e=await caches.open(A);for(const t of a)try{const n=await fetch(t);n.ok&&await e.put(t,n);}catch(n){}}const Re=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));export{Ce as a,Ae as b,Oe as c,be as d,Re as e,ve as g,b as m,D as s};
//# sourceMappingURL=enterprise-features-BG9OW9_4.js.map
