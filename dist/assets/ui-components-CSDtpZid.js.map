{"version":3,"file":"ui-components-CSDtpZid.js","sources":["../../src/ui/components/stroke-center-map.js","../../src/ui/components/brain-visualization.js"],"sourcesContent":["// GPS-based stroke center map component\nimport {\n  COMPREHENSIVE_HOSPITAL_DATABASE,\n  ROUTING_ALGORITHM,\n} from \"../../data/comprehensive-stroke-centers.js\";\nimport { calculateDistance, calculateEmergencyTravelTime } from \"../../data/stroke-centers.js\";\nimport { t } from \"../../localization/i18n.js\";\nimport { safeSetInnerHTML } from \"../../security/html-sanitizer.js\";\n\nexport function renderStrokeCenterMap(results) {\n  return `\n        <div id=\"locationContainer\" >\n          <!-- Location Controls -->\n          <div class=\"flex flex-wrap items-center gap-3\">\n            <button \n              type=\"button\" \n              id=\"useGpsButton\" \n              class=\"px-4 py-2 rounded-md font-medium text-white bg-blue-600 hover:bg-blue-700 focus:ring-2 focus:ring-blue-400 focus:outline-none transition transform hover:scale-[1.02] shadow-sm\"\n            >\n              üìç ${t(\"useCurrentLocation\")}\n            </button>\n\n            <button \n              type=\"button\" \n              id=\"manualLocationButton\" \n              class=\"px-4 py-2 rounded-md font-medium text-white bg-gray-600 hover:bg-gray-700 focus:ring-2 focus:ring-gray-400 focus:outline-none transition transform hover:scale-[1.02] shadow-sm\"\n            >\n              ‚úèÔ∏è ${t(\"enterManually\")}\n            </button>\n          </div>\n\n          <!-- Manual Location Input -->\n          <div class=\"location-manual hidden flex gap-2\">\n            <input \n              type=\"text\" \n              id=\"locationInput\" \n              class=\"flex-1 px-3 py-2 rounded-md border border-gray-300 dark:border-gray-600 text-gray-800 dark:text-gray-100 bg-white dark:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-blue-500 placeholder-gray-400 dark:placeholder-gray-500 transition\"\n              placeholder=\"${t(\"enterLocationPlaceholder\") || \"e.g. M√ºnchen, K√∂ln, Stuttgart, or 48.1351, 11.5820\"}\"\n            />\n            <button \n              type=\"button\" \n              id=\"searchLocationButton\" \n              class=\"px-4 py-2 rounded-md font-medium text-white bg-green-600 hover:bg-green-700 focus:ring-2 focus:ring-green-400 focus:outline-none transition transform hover:scale-[1.02] shadow-sm\"\n            >\n              ${t(\"search\")}\n            </button>\n          </div>\n\n          <!-- Results -->\n          <div \n            id=\"strokeCenterResults\" \n            class=\"stroke-center-results space-y-3\"\n          ></div>\n        </div>\n  `;\n}\n\nexport function initializeStrokeCenterMap(results) {\n  console.log(\"[StrokeMap] Initializing stroke center map with results:\", results);\n\n  const useGpsButton = document.getElementById(\"useGpsButton\");\n  const manualLocationButton = document.getElementById(\"manualLocationButton\");\n  const locationManual = document.querySelector(\".location-manual\");\n  const locationInput = document.getElementById(\"locationInput\");\n  const searchLocationButton = document.getElementById(\"searchLocationButton\");\n  const resultsContainer = document.getElementById(\"strokeCenterResults\");\n  resultsContainer.className = \"mt-4\";\n  console.log(\"[StrokeMap] Found elements:\", {\n    useGpsButton: !!useGpsButton,\n    manualLocationButton: !!manualLocationButton,\n    locationManual: !!locationManual,\n    locationInput: !!locationInput,\n    searchLocationButton: !!searchLocationButton,\n    resultsContainer: !!resultsContainer,\n  });\n\n  if (useGpsButton) {\n    useGpsButton.addEventListener(\"click\", () => {\n      requestUserLocation(results, resultsContainer);\n    });\n  }\n\n  if (manualLocationButton) {\n    manualLocationButton.addEventListener(\"click\", () => {\n      const isHidden = getComputedStyle(locationManual).display === \"none\";\n      locationManual.style.display = isHidden ? \"block\" : \"none\";\n      locationManual.className = \"mt-4\";\n    });\n  }\n\n  if (searchLocationButton) {\n    searchLocationButton.addEventListener(\"click\", () => {\n      const location = locationInput.value.trim();\n      if (location) {\n        geocodeLocation(location, results, resultsContainer);\n      }\n    });\n  }\n\n  if (locationInput) {\n    locationInput.addEventListener(\"keypress\", e => {\n      if (e.key === \"Enter\") {\n        const location = locationInput.value.trim();\n        if (location) {\n          geocodeLocation(location, results, resultsContainer);\n        }\n      }\n    });\n  }\n}\n\nfunction requestUserLocation(results, resultsContainer) {\n  if (!navigator.geolocation) {\n    showLocationError(t(\"geolocationNotSupported\"), resultsContainer);\n    return;\n  }\n\n  try {\n    safeSetInnerHTML(resultsContainer, `<div class=\"loading\">${t(\"gettingLocation\")}...</div>`);\n  } catch (error) {\n    resultsContainer.textContent = \"Getting location...\";\n    console.error(\"Sanitization failed:\", error);\n  }\n\n  navigator.geolocation.getCurrentPosition(\n    position => {\n      const { latitude, longitude } = position.coords;\n      showNearestCenters(latitude, longitude, results, resultsContainer);\n    },\n    error => {\n      let errorMessage = t(\"locationError\");\n      switch (error.code) {\n        case error.PERMISSION_DENIED:\n          errorMessage = t(\"locationPermissionDenied\");\n          break;\n        case error.POSITION_UNAVAILABLE:\n          errorMessage = t(\"locationUnavailable\");\n          break;\n        case error.TIMEOUT:\n          errorMessage = t(\"locationTimeout\");\n          break;\n      }\n      showLocationError(errorMessage, resultsContainer);\n    },\n    {\n      enableHighAccuracy: true,\n      timeout: 10000,\n      maximumAge: 300000, // 5 minutes\n    }\n  );\n}\n\nasync function geocodeLocation(locationString, results, resultsContainer) {\n  // ‚úÖ Local cache to avoid repeated network calls\n  if (!window.__geocodeCache) window.__geocodeCache = new Map();\n  const cache = window.__geocodeCache;\n\n  // üßπ Early input validation\n  if (!locationString || !locationString.trim()) {\n    showLocationError(\"Please enter a location or coordinates.\", resultsContainer);\n    return;\n  }\n\n  // üïì Show loading message\n  try {\n    safeSetInnerHTML(resultsContainer, `<div class=\"loading\">${t(\"searchingLocation\")}...</div>`);\n  } catch (error) {\n    resultsContainer.textContent = \"Searching location...\";\n    console.error(\"Sanitization failed:\", error);\n  }\n\n  // üß≠ Check if input is coordinates (lat, lng)\n  const coordPattern = /^(-?\\d+\\.?\\d*)\\s*,\\s*(-?\\d+\\.?\\d*)$/;\n  const coordMatch = locationString.trim().match(coordPattern);\n\n  if (coordMatch) {\n    const lat = parseFloat(coordMatch[1]);\n    const lng = parseFloat(coordMatch[2]);\n\n    // ‚úÖ Expanded range for Germany (with buffer)\n    if (lat >= 46.5 && lat <= 55.1 && lng >= 5.5 && lng <= 15.5) {\n      try {\n        safeSetInnerHTML(\n          resultsContainer,\n          `\n          <div class=\"location-success\">\n            <p>üìç Coordinates: ${lat.toFixed(4)}, ${lng.toFixed(4)}</p>\n          </div>\n        `\n        );\n      } catch (error) {\n        resultsContainer.textContent = `Coordinates: ${lat.toFixed(4)}, ${lng.toFixed(4)}`;\n        console.error(\"Sanitization failed:\", error);\n      }\n\n      setTimeout(() => showNearestCenters(lat, lng, results, resultsContainer), 500);\n      return;\n    }\n\n    showLocationError(\n      \"Coordinates appear to be outside Germany. Please check the values.\",\n      resultsContainer\n    );\n    return;\n  }\n\n  // üßπ Clean up input\n  let searchLocation = locationString.trim();\n\n  // Add \", Deutschland\" if not included\n  if (\n    !/deutschland|germany|bayern|bavaria|baden|w√ºrttemberg|nordrhein|westfalen/i.test(\n      searchLocation\n    )\n  ) {\n    searchLocation += \", Deutschland\";\n  }\n\n  // üß† Cached result check\n  if (cache.has(searchLocation)) {\n    const cached = cache.get(searchLocation);\n    displayLocationSuccess(cached, results, resultsContainer);\n    return;\n  }\n\n  // üí§ Optional debounce to prevent API spam\n  await new Promise(r => setTimeout(r, 300));\n\n  // üåç Build Nominatim request\n  const encodedLocation = encodeURIComponent(searchLocation);\n  const url = `https://nominatim.openstreetmap.org/search?q=${encodedLocation}&countrycodes=de&format=json&limit=3&addressdetails=1`;\n\n  try {\n    const response = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"User-Agent\": \"iGFAP-StrokeTriage/2.1.0 (contact: support@yourdomain.de)\",\n      },\n    });\n\n    if (!response.ok) throw new Error(`Geocoding API error: ${response.status}`);\n\n    const data = await response.json();\n\n    if (data && data.length > 0) {\n      const supportedStates = [\"Bayern\", \"Baden-W√ºrttemberg\", \"Nordrhein-Westfalen\"];\n      let location =\n        data.find(r => r.address && supportedStates.includes(r.address.state)) || data[0];\n\n      const lat = parseFloat(location.lat);\n      const lng = parseFloat(location.lon);\n      const locationName = location.display_name || locationString;\n\n      // ‚úÖ Cache result\n      cache.set(searchLocation, { lat, lng, locationName });\n\n      displayLocationSuccess({ lat, lng, locationName }, results, resultsContainer);\n    } else {\n      showLocationError(\n        `\n        <strong>Location \"${locationString}\" not found.</strong><br>\n        <small>Try:</small>\n        <ul style=\"text-align: left; font-size: 0.9em; margin: 10px 0;\">\n          <li>City name: \"M√ºnchen\", \"K√∂ln\", \"Stuttgart\"</li>\n          <li>Address: \"Marienplatz 1, M√ºnchen\"</li>\n          <li>Coordinates: \"48.1351, 11.5820\"</li>\n        </ul>\n      `,\n        resultsContainer\n      );\n    }\n  } catch (error) {\n    console.error(\"Geocoding failed:\", error);\n    showLocationError(\n      `\n      <strong>Unable to search location.</strong><br>\n      <small>Please try entering coordinates directly (e.g., \"48.1351, 11.5820\")</small>\n    `,\n      resultsContainer\n    );\n  }\n}\n\nasync function showNearestCenters(lat, lng, results, resultsContainer) {\n  const location = { lat, lng };\n\n  const routing = ROUTING_ALGORITHM.routePatient({\n    location,\n    ichProbability: results?.ich?.probability || 0,\n    timeFromOnset: results?.timeFromOnset || null,\n    clinicalFactors: results?.clinicalFactors || {},\n  });\n\n  if (!routing || !routing.destination) {\n    safeSetInnerHTML(\n      resultsContainer,\n      `\n      <div class=\"bg-red-50 dark:bg-red-900/20 text-red-700 dark:text-red-300 border border-red-200 dark:border-red-700 rounded-lg p-4\">\n        <p class=\"font-semibold\">‚ö†Ô∏è No suitable stroke centers found in this area.</p>\n        <p class=\"text-sm mt-1 text-gray-600 dark:text-gray-400\">\n          Please try a different location or contact emergency services directly.\n        </p>\n      </div>\n      `\n    );\n    return;\n  }\n\n  const routingExplanation = getEnhancedRoutingExplanation(routing, results);\n\n  safeSetInnerHTML(\n    resultsContainer,\n    `\n    <div class=\"bg-yellow-100 dark:bg-yellow-900/20 text-blue-900 dark:text-blue-200 border border-yellow-200 dark:border-yellow-700 rounded-lg p-4 mb-4\">\n      <p><strong>${t(\"yourLocation\")}:</strong> ${lat.toFixed(4)}, ${lng.toFixed(4)}</p>\n      <p><strong>${t(\"detectedState\") || \"Detected State\"}:</strong> ${getStateName(routing.state)}</p>\n      <div class=\"text-gray-700 dark:text-gray-300 text-sm italic mt-2\">${t(\"calculatingTravelTimes\")}...</div>\n    </div>\n    `\n  );\n\n  try {\n    const database = COMPREHENSIVE_HOSPITAL_DATABASE[routing.state];\n    const allHospitals = [\n      ...database.neurosurgicalCenters,\n      ...database.comprehensiveStrokeCenters,\n      ...database.regionalStrokeUnits,\n      ...(database.thrombolysisHospitals || []),\n    ];\n\n    const { destination } = routing;\n    destination.distance = calculateDistance(\n      lat,\n      lng,\n      destination.coordinates.lat,\n      destination.coordinates.lng\n    );\n\n    try {\n      const travelInfo = await calculateEmergencyTravelTime(\n        lat,\n        lng,\n        destination.coordinates.lat,\n        destination.coordinates.lng\n      );\n      destination.travelTime = travelInfo.duration;\n      destination.travelSource = travelInfo.source;\n    } catch {\n      destination.travelTime = Math.round(destination.distance / 0.8);\n      destination.travelSource = \"estimated\";\n    }\n\n    const alternatives = allHospitals\n      .filter(h => h.id !== destination.id)\n      .map(h => ({\n        ...h,\n        distance: calculateDistance(lat, lng, h.coordinates.lat, h.coordinates.lng),\n      }))\n      .sort((a, b) => a.distance - b.distance)\n      .slice(0, 3);\n\n    for (const alt of alternatives) {\n      try {\n        const travelInfo = await calculateEmergencyTravelTime(\n          lat,\n          lng,\n          alt.coordinates.lat,\n          alt.coordinates.lng\n        );\n        alt.travelTime = travelInfo.duration;\n        alt.travelSource = travelInfo.source;\n      } catch {\n        alt.travelTime = Math.round(alt.distance / 0.8);\n        alt.travelSource = \"estimated\";\n      }\n    }\n\n    // --- üß† DOM Rendering ---\n    resultsContainer.innerHTML = \"\";\n\n    const mainDiv = document.createElement(\"div\");\n    mainDiv.className = \"space-y-6 mt-4\";\n\n    // üåç Location + Routing Info\n    const locationDiv = document.createElement(\"div\");\n    locationDiv.className =\n      \"bg-yellow-100 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-700 rounded-lg p-4\";\n    locationDiv.innerHTML = `\n    <div class=\"p-4 bg-white rounded-lg shadow-md space-y-2\">\n      <p class=\"text-gray-700\">\n        <strong class=\"font-semibold text-gray-900\">Your Location:</strong> \n        ${lat.toFixed(4)}, ${lng.toFixed(4)}\n      </p>\n      <p class=\"text-gray-700\">\n        <strong class=\"font-semibold text-gray-900\">State:</strong> \n        ${getStateName(routing.state)}\n      </p>\n      <div class=\"text-sm text-gray-600\">\n        ${routingExplanation}\n      </div>\n    </div>\n  `;\n    mainDiv.appendChild(locationDiv);\n\n    // üè• Recommended Center\n    const primaryDiv = document.createElement(\"div\");\n    primaryDiv.className =\n      \"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-4 shadow-sm\";\n    primaryDiv.innerHTML = `\n      <h4 class=\"text-lg font-semibold mb-4 flex items-center gap-2\">\n        üè• ${routing.urgency === \"IMMEDIATE\" ? \"Emergency\" : \"Recommended\"} Destination\n      </h4>\n      <div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 gap-4\">\n      </div>\n    `;\n    const primaryGrid = primaryDiv.querySelector(\"div.grid\");\n    primaryGrid.appendChild(createStrokeCenterCard(destination, true, routing));\n    mainDiv.appendChild(primaryDiv);\n\n    // üè• Alternative Centers\n    if (alternatives.length > 0) {\n      const altDiv = document.createElement(\"div\");\n      altDiv.className =\n        \"bg-gray-50 dark:bg-gray-800/50 border border-gray-200 dark:border-gray-700 rounded-lg p-4\";\n      altDiv.innerHTML = `\n        <h4 class=\"text-lg font-semibold mb-4 text-gray-800 dark:text-gray-200\">\n          Alternative Centers\n        </h4>\n        <div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 gap-4\"></div>\n      `;\n      const altGrid = altDiv.querySelector(\"div.grid\");\n      alternatives.forEach(alt => altGrid.appendChild(createStrokeCenterCard(alt, false, routing)));\n      mainDiv.appendChild(altDiv);\n    }\n\n    // ‚ÑπÔ∏è Travel Note\n    const noteDiv = document.createElement(\"div\");\n    noteDiv.className = \"text-md text-gray-600 dark:text-gray-400 italic mt-4 text-center\";\n    noteDiv.innerHTML = \"<small>Travel times estimated for emergency vehicles</small>\";\n    mainDiv.appendChild(noteDiv);\n\n    resultsContainer.appendChild(mainDiv);\n    addStrokeCenterEventListeners(resultsContainer);\n  } catch (error) {\n    console.error(\"üö® Stroke Center Display Error:\", error);\n\n    resultsContainer.innerHTML = `\n      <div class=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-4\">\n        <h4 class=\"text-lg font-semibold mb-2\">üè• Recommended Center</h4>\n        <p><strong>${routing?.destination?.name || \"Unknown Hospital\"}</strong></p>\n        <p class=\"text-gray-600 dark:text-gray-400\">üìç ${routing?.destination?.address || \"Address not available\"}</p>\n        <p class=\"text-gray-600 dark:text-gray-400\">üìû ${routing?.destination?.emergency || routing?.destination?.phone || \"Phone not available\"}</p>\n        <p class=\"mt-2 text-gray-700 dark:text-gray-300\">\n          üìè Distance: ${routing?.destination?.distance?.toFixed(1) || \"?\"} km\n        </p>\n        ${\n          alternatives?.length > 0\n            ? `<p class=\"mt-2 text-sm text-gray-600 dark:text-gray-400\"><strong>+ ${alternatives.length} alternative centers nearby</strong></p>`\n            : \"\"\n        }\n      </div>\n    `;\n  }\n}\n\nfunction renderStrokeCenterList(centers, isRecommended = false) {\n  if (!centers || centers.length === 0) {\n    return `<p>${t(\"noCentersFound\")}</p>`;\n  }\n\n  return centers\n    .map(\n      center => `\n    <div class=\"stroke-center-card ${isRecommended ? \"recommended\" : \"alternative\"}\">\n      <div class=\"center-header\">\n        <h5>${center.name}</h5>\n        <span class=\"center-type ${center.type}\">${t(`${center.type}Center`)}</span>\n        ${\n          center.travelTime\n            ? `\n          <span class=\"travel-time\">\n            <span class=\"time\">${center.travelTime} ${t(\"minutes\")}</span>\n            <span class=\"distance\">(${center.distance} km)</span>\n          </span>\n        `\n            : `\n          <span class=\"distance\">${center.distance.toFixed(1)} km</span>\n        `\n        }\n      </div>\n      \n      <div class=\"center-details\">\n        <p class=\"address\">üìç ${center.address}</p>\n        <p class=\"phone\">üìû ${t(\"emergency\")}: ${center.emergency}</p>\n        \n        <div class=\"services\">\n          ${center.services\n            .map(\n              service => `\n            <span class=\"service-badge\">${t(service)}</span>\n          `\n            )\n            .join(\"\")}\n        </div>\n        \n        ${\n          center.certified\n            ? `\n          <div class=\"certification\">\n            ‚úÖ ${t(\"certified\")}: ${center.certification}\n          </div>\n        `\n            : \"\"\n        }\n      </div>\n      \n      <div class=\"center-actions\">\n        <button class=\"call-button\" data-phone=\"${center.emergency}\">\n          üìû ${t(\"call\")}\n        </button>\n        <button class=\"directions-button\" data-lat=\"${center.coordinates.lat}\" data-lng=\"${center.coordinates.lng}\">\n          üß≠ ${t(\"directions\")}\n        </button>\n      </div>\n    </div>\n  `\n    )\n    .join(\"\");\n}\n\n// Helper functions for enhanced routing system\nfunction getStateName(stateCode) {\n  const stateNames = {\n    bayern: \"Bayern (Bavaria)\",\n    badenWuerttemberg: \"Baden-W√ºrttemberg\",\n    nordrheinWestfalen: \"Nordrhein-Westfalen (NRW)\",\n  };\n  return stateNames[stateCode] || stateCode;\n}\n\nfunction getEnhancedRoutingExplanation(routing, results) {\n  const ichPercent = Math.round((results?.ich?.probability || 0) * 100);\n\n  let urgencyIcon = \"üè•\";\n  let urgencyColor = \"from-gray-500 to-gray-600\";\n\n  if (routing.urgency === \"IMMEDIATE\") {\n    urgencyIcon = \"üö®\";\n    urgencyColor = \"from-red-500 to-red-700\";\n  } else if (routing.urgency === \"TIME_CRITICAL\") {\n    urgencyIcon = \"‚è∞\";\n    urgencyColor = \"from-yellow-500 to-orange-600\";\n  } else if (routing.urgency === \"URGENT\") {\n    urgencyIcon = \"‚ö†Ô∏è\";\n    urgencyColor = \"from-amber-500 to-yellow-600\";\n  }\n\n  return `\n    <div class=\"routing-explanation ${routing.category.toLowerCase()} \n      bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 \n      rounded-lg shadow-md p-4 mt-4 transition-all duration-300 hover:shadow-xl\">\n      \n      <div class=\"routing-header mb-3 flex items-center justify-between\">\n        <strong class=\"text-base font-semibold text-gray-900 dark:text-gray-100 flex items-center gap-2\">\n          <span class=\"text-xl\">${urgencyIcon}</span> \n          ${routing.category.replace(\"_\", \" \")} - ${routing.urgency}\n        </strong>\n        <span class=\"text-xs px-2 py-1 rounded-md text-white bg-gradient-to-r ${urgencyColor} shadow-sm font-medium\">\n          ${routing.urgency}\n        </span>\n      </div>\n\n      <div class=\"routing-details space-y-2 text-sm text-gray-700 dark:text-gray-300 leading-relaxed\">\n        <p><strong>üß† ICH Risk:</strong> <span class=\"font-medium\">${ichPercent}%</span> ${routing.threshold ? `(${routing.threshold})` : \"\"}</p>\n        ${\n          routing.timeWindow\n            ? `<p><strong>‚è≥ Time Window:</strong> <span class=\"font-medium\">${routing.timeWindow}</span></p>`\n            : \"\"\n        }\n        <p><strong>üß≠ Routing Logic:</strong> ${routing.reasoning}</p>\n        <p><strong>üì¢ Pre-Alert:</strong> ${routing.preAlert}</p>\n        ${\n          routing.bypassLocal\n            ? `<p class=\"bypass-warning text-red-600 dark:text-red-400 font-semibold flex items-center gap-1\">\n                ‚ö†Ô∏è <span>Bypassing local hospitals</span>\n              </p>`\n            : \"\"\n        }\n      </div>\n    </div>\n  `;\n}\n\nfunction renderEnhancedStrokeCenterCard(center, isRecommended, routing) {\n  const capabilities = [];\n  if (center.neurosurgery) {\n    capabilities.push(\"üß† Neurosurgery\");\n  }\n  if (center.thrombectomy) {\n    capabilities.push(\"ü©∏ Thrombectomy\");\n  }\n  if (center.thrombolysis) {\n    capabilities.push(\"üíâ Thrombolysis\");\n  }\n\n  const networkBadge = center.network ? `<span class=\"network-badge\">${center.network}</span>` : \"\";\n\n  return `\n    <div class=\"stroke-center-card ${isRecommended ? \"recommended\" : \"alternative\"} enhanced\">\n      <div class=\"center-header\">\n        <h5>${center.name}</h5>\n        <div class=\"center-badges\">\n          ${center.neurosurgery ? '<span class=\"capability-badge neurosurgery\">NS</span>' : \"\"}\n          ${center.thrombectomy ? '<span class=\"capability-badge thrombectomy\">TE</span>' : \"\"}\n          ${networkBadge}\n        </div>\n      </div>\n      \n      <div class=\"center-metrics\">\n        ${\n          center.travelTime\n            ? `\n          <div class=\"travel-info\">\n            <span class=\"travel-time\">${center.travelTime} min</span>\n            <span class=\"distance\">${center.distance.toFixed(1)} km</span>\n          </div>\n        `\n            : `\n          <div class=\"distance-only\">\n            <span class=\"distance\">${center.distance.toFixed(1)} km</span>\n          </div>\n        `\n        }\n        <div class=\"bed-info\">\n          <span class=\"beds\">${center.beds} beds</span>\n        </div>\n      </div>\n      \n      <div class=\"center-details\">\n        <p class=\"address\">üìç ${center.address}</p>\n        <p class=\"phone\">üìû ${center.emergency || center.phone}</p>\n        \n        ${\n          capabilities.length > 0\n            ? `\n          <div class=\"capabilities\">\n            ${capabilities.join(\" ‚Ä¢ \")}\n          </div>\n        `\n            : \"\"\n        }\n      </div>\n      \n      <div class=\"center-actions\">\n        <button class=\"call-button\" data-phone=\"${center.emergency || center.phone}\">\n          üìû Call\n        </button>\n        <button class=\"directions-button\" data-lat=\"${center.coordinates.lat}\" data-lng=\"${center.coordinates.lng}\">\n          üß≠ Directions\n        </button>\n      </div>\n    </div>\n  `;\n}\n\nfunction createStrokeCenterCard(center, isRecommended, routing) {\n  const card = document.createElement(\"div\");\n  card.className = `stroke-center-card ${isRecommended ? \"recommended\" : \"alternative\"} enhanced \n    bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100 \n    rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 \n    p-5 transition-all duration-300 hover:shadow-2xl hover:scale-[1.02]`;\n\n  const capabilities = [];\n  if (center.neurosurgery) capabilities.push(\"üß† Neurosurgery\");\n  if (center.thrombectomy) capabilities.push(\"ü©∏ Thrombectomy\");\n  if (center.thrombolysis) capabilities.push(\"üíâ Thrombolysis\");\n\n  const networkBadge = center.network\n    ? `<span class=\"network-badge inline-block px-2 py-1 text-xs rounded-full bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300 font-medium\">${center.network}</span>`\n    : \"\";\n\n  card.innerHTML = `\n    <div class=\"center-header flex justify-between items-start mb-3\">\n      <h5 class=\"text-lg font-semibold leading-snug\">${center.name}</h5>\n      <div class=\"center-badges flex gap-1\">\n        ${\n          center.neurosurgery\n            ? '<span class=\"capability-badge neurosurgery bg-purple-100 dark:bg-purple-800 text-purple-700 dark:text-purple-200 px-2 py-0.5 text-xs rounded-md font-medium\">NS</span>'\n            : \"\"\n        }\n        ${\n          center.thrombectomy\n            ? '<span class=\"capability-badge thrombectomy bg-red-100 dark:bg-red-800 text-red-700 dark:text-red-200 px-2 py-0.5 text-xs rounded-md font-medium\">TE</span>'\n            : \"\"\n        }\n        ${networkBadge}\n      </div>\n    </div>\n\n    <div class=\"center-metrics flex justify-between items-center mb-4\">\n      ${\n        center.travelTime\n          ? `\n        <div class=\"travel-info flex flex-col text-sm text-gray-600 dark:text-gray-400\">\n          <span class=\"travel-time font-semibold text-base text-blue-600 dark:text-blue-400\">${center.travelTime} min</span>\n          <span class=\"distance\">${center.distance.toFixed(1)} km</span>\n        </div>\n      `\n          : `\n        <div class=\"distance-only text-sm text-gray-600 dark:text-gray-400\">\n          <span class=\"distance font-medium\">${center.distance.toFixed(1)} km</span>\n        </div>\n      `\n      }\n      <div class=\"bed-info text-sm text-gray-700 dark:text-gray-300\">\n        <span class=\"beds bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded-md text-xs\">${center.beds} beds</span>\n      </div>\n    </div>\n\n    <div class=\"center-details space-y-1 mb-4\">\n      <p class=\"address text-sm\">üìç ${center.address}</p>\n      <p class=\"phone text-sm\">üìû ${center.emergency || center.phone}</p>\n      ${\n        capabilities.length > 0\n          ? `<div class=\"capabilities text-xs text-gray-600 dark:text-gray-400 italic\">${capabilities.join(\" ‚Ä¢ \")}</div>`\n          : \"\"\n      }\n    </div>\n\n    <div class=\"center-actions flex gap-3\">\n      <button \n        class=\"call-button flex-1 bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 \n        text-white text-sm font-semibold py-2 rounded-md shadow-md transition-transform transform hover:scale-[1.03]\" \n        data-phone=\"${center.emergency || center.phone}\">\n        üìû Call\n      </button>\n      <button \n        class=\"directions-button flex-1 bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 \n        text-white text-sm font-semibold py-2 rounded-md shadow-md transition-transform transform hover:scale-[1.03]\" \n        data-lat=\"${center.coordinates.lat}\" \n        data-lng=\"${center.coordinates.lng}\">\n        üß≠ Directions\n      </button>\n    </div>\n  `;\n\n  return card;\n}\n\nfunction addStrokeCenterEventListeners(container) {\n  const callButtons = container.querySelectorAll(\".call-button\");\n  const directionsButtons = container.querySelectorAll(\".directions-button\");\n\n  callButtons.forEach(button => {\n    button.addEventListener(\"click\", () => {\n      const { phone } = button.dataset;\n      if (phone) {\n        window.open(`tel:${phone}`);\n      }\n    });\n  });\n\n  directionsButtons.forEach(button => {\n    button.addEventListener(\"click\", () => {\n      const { lat } = button.dataset;\n      const { lng } = button.dataset;\n      if (lat && lng) {\n        window.open(`https://maps.google.com/maps?daddr=${lat},${lng}`, \"_blank\");\n      }\n    });\n  });\n}\n\nfunction showLocationError(message, container) {\n  try {\n    safeSetInnerHTML(\n      container,\n      `\n      <div class=\"location-error\">\n        <p>‚ö†Ô∏è ${message}</p>\n        <p><small>${t(\"tryManualEntry\")}</small></p>\n      </div>\n    `\n    );\n  } catch (error) {\n    container.textContent = `Error: ${message}. ${t(\"tryManualEntry\") || \"Try manual entry\"}`;\n    console.error(\"Sanitization failed:\", error);\n  }\n}\n","/**\n * Brain Visualization Component for ICH Volume Display\n * Creates an SVG-based brain hemorrhage visualization\n */\n\nimport {\n  calculateHemorrhageSizePercent,\n  getVolumeColor,\n  calculateICHVolume,\n  formatVolumeDisplay,\n} from \"../../logic/ich-volume-calculator.js\";\n\n/**\n * Render brain visualization with hemorrhage overlay\n * @param {number} volume - ICH volume in ml\n * @param {string} size - 'compact' or 'detailed'\n * @returns {string} HTML string with SVG brain visualization\n */\nexport function renderBrainVisualization(volume, size = \"compact\") {\n  const dimensions = size === \"compact\" ? { width: 120, height: 120 } : { width: 200, height: 200 };\n  const centerX = dimensions.width / 2;\n  const centerY = dimensions.height / 2;\n\n  // Calculate hemorrhage appearance\n  const hemorrhagePercent = calculateHemorrhageSizePercent(volume);\n  const hemorrhageColor = getVolumeColor(volume);\n\n  // Scale hemorrhage radius based on volume (basal ganglia region, slightly off-center)\n  const maxRadius = dimensions.width * 0.25; // Maximum 25% of brain width\n  const hemorrhageRadius = (hemorrhagePercent / 70) * maxRadius; // 70% is max brain area\n\n  // Position hemorrhage in basal ganglia region (slightly right of center)\n  const hemorrhageX = centerX + dimensions.width * 0.1; // 10% right of center\n  const hemorrhageY = centerY + dimensions.height * 0.05; // 5% below center\n\n  // 30ml reference circle (for detailed view)\n  const referenceRadius = (40 / 70) * maxRadius; // 40% brain area = 30ml threshold\n\n  // Animation for hemorrhage (subtle pulsing)\n  const animationId = `hemorrhage-pulse-${Math.random().toString(36).substr(2, 9)}`;\n\n  return `\n    <div class=\"brain-visualization ${size}\">\n      <svg \n        width=\"${dimensions.width}\" \n        height=\"${dimensions.height}\" \n        viewBox=\"0 0 ${dimensions.width} ${dimensions.height}\"\n        class=\"brain-svg\"\n        role=\"img\"\n        aria-label=\"Brain hemorrhage visualization showing ${volume.toFixed(1)}ml ICH volume\"\n      >\n        <!-- Brain outline with hemorrhage overlay -->\n        ${renderBrainOutlineWithHemorrhage(dimensions, volume)}\n        \n        <!-- 30ml reference indicator (detailed view only) -->\n        ${\n          size === \"detailed\" && volume > 0\n            ? `\n          <circle \n            cx=\"${hemorrhageX}\" \n            cy=\"${hemorrhageY}\" \n            r=\"${referenceRadius}\"\n            fill=\"none\" \n            stroke=\"#9ca3af\" \n            stroke-width=\"1\" \n            stroke-dasharray=\"3,3\"\n            opacity=\"0.5\"\n          />\n          <text \n            x=\"${hemorrhageX + referenceRadius + 5}\" \n            y=\"${hemorrhageY - referenceRadius}\" \n            font-size=\"10\" \n            fill=\"#6b7280\"\n            font-family=\"system-ui\"\n          >30ml</text>\n        `\n            : \"\"\n        }\n        \n        <!-- Hemorrhage visualization -->\n        ${\n          volume > 0\n            ? `\n          <circle \n            cx=\"${hemorrhageX}\" \n            cy=\"${hemorrhageY}\" \n            r=\"${hemorrhageRadius}\"\n            fill=\"${hemorrhageColor}\"\n            opacity=\"0.8\"\n            class=\"hemorrhage-circle\"\n          >\n            <!-- Subtle pulsing animation -->\n            <animate \n              attributeName=\"opacity\" \n              values=\"0.6;0.9;0.6\" \n              dur=\"2.5s\" \n              repeatCount=\"indefinite\"\n            />\n            ${\n              hemorrhageRadius > 15\n                ? `\n            <animate \n              attributeName=\"r\" \n              values=\"${hemorrhageRadius * 0.95};${hemorrhageRadius};${hemorrhageRadius * 0.95}\" \n              dur=\"2.5s\" \n              repeatCount=\"indefinite\"\n            />\n            `\n                : \"\"\n            }\n          </circle>\n          \n          <!-- Volume label (detailed view only) -->\n          ${\n            size === \"detailed\"\n              ? `\n            <text \n              x=\"${centerX}\" \n              y=\"${dimensions.height - 10}\" \n              text-anchor=\"middle\" \n              font-size=\"12\" \n              font-weight=\"bold\"\n              fill=\"#374151\"\n              font-family=\"system-ui\"\n            >${volume < 1 ? \"<1\" : volume.toFixed(1)} ml</text>\n          `\n              : \"\"\n          }\n        `\n            : \"\"\n        }\n        \n        <style>\n          .hemorrhage-circle {\n            filter: drop-shadow(0 2px 4px rgba(0,0,0,0.2));\n          }\n        </style>\n      </svg>\n    </div>\n  `;\n}\n\n/**\n * Load and render the provided brain SVG with hemorrhage overlay\n * @param {object} dimensions - Width and height for the brain\n * @returns {string} Brain SVG with embedded hemorrhage visualization\n */\nfunction renderBrainOutlineWithHemorrhage(dimensions, volume) {\n  // For performance, we'll use the SVG as a background image and overlay the hemorrhage\n  // This avoids loading the 530KB SVG content directly into the DOM\n\n  const centerX = dimensions.width / 2;\n  const centerY = dimensions.height / 2;\n\n  // Calculate hemorrhage position (basal ganglia region - slightly right and posterior)\n  const hemorrhageX = centerX + dimensions.width * 0.08; // 8% right of center\n  const hemorrhageY = centerY + dimensions.height * 0.03; // 3% below center\n\n  const hemorrhagePercent = calculateHemorrhageSizePercent(volume);\n  const hemorrhageColor = getVolumeColor(volume);\n  const maxRadius = dimensions.width * 0.25;\n  const hemorrhageRadius = (hemorrhagePercent / 70) * maxRadius;\n\n  return `\n    <!-- 3D Brain image as background -->\n    <image \n      x=\"0\" \n      y=\"0\" \n      width=\"${dimensions.width}\" \n      height=\"${dimensions.height}\"\n      href=\"./src/assets/brain-3d.png\"\n      opacity=\"0.95\"\n      preserveAspectRatio=\"xMidYMid meet\"\n    />\n    \n    <!-- Hemorrhage overlay in basal ganglia region -->\n    ${\n      volume > 0\n        ? `\n      <circle \n        cx=\"${hemorrhageX}\" \n        cy=\"${hemorrhageY}\" \n        r=\"${hemorrhageRadius}\"\n        fill=\"${hemorrhageColor}\"\n        opacity=\"0.85\"\n        class=\"hemorrhage-circle\"\n      >\n        <!-- Subtle pulsing animation -->\n        <animate \n          attributeName=\"opacity\" \n          values=\"0.7;0.95;0.7\" \n          dur=\"2.5s\" \n          repeatCount=\"indefinite\"\n        />\n        ${\n          hemorrhageRadius > 8\n            ? `\n        <animate \n          attributeName=\"r\" \n          values=\"${hemorrhageRadius * 0.96};${hemorrhageRadius * 1.02};${hemorrhageRadius * 0.96}\" \n          dur=\"2.5s\" \n          repeatCount=\"indefinite\"\n        />\n        `\n            : \"\"\n        }\n      </circle>\n      \n      <!-- Hemorrhage center highlight -->\n      <circle \n        cx=\"${hemorrhageX}\" \n        cy=\"${hemorrhageY}\" \n        r=\"${hemorrhageRadius * 0.3}\"\n        fill=\"${hemorrhageColor}\"\n        opacity=\"0.95\"\n        class=\"hemorrhage-center\"\n      />\n    `\n        : \"\"\n    }\n  `;\n}\n\n/**\n * Temporary brain outline (for fallback when SVG file not available)\n */\nfunction renderTemporaryBrainOutline(dimensions) {\n  const centerX = dimensions.width / 2;\n  const centerY = dimensions.height / 2;\n\n  return `\n    <!-- Simplified brain outline -->\n    <ellipse \n      cx=\"${centerX}\" \n      cy=\"${centerY}\" \n      rx=\"${dimensions.width * 0.4}\" \n      ry=\"${dimensions.height * 0.35}\" \n      fill=\"#f1f5f9\" \n      stroke=\"#64748b\" \n      stroke-width=\"2\"\n      opacity=\"0.8\"\n    />\n    \n    <!-- Brain hemisphere division -->\n    <line \n      x1=\"${centerX}\" \n      y1=\"${centerY - dimensions.height * 0.25}\" \n      x2=\"${centerX}\" \n      y2=\"${centerY + dimensions.height * 0.25}\" \n      stroke=\"#9ca3af\" \n      stroke-width=\"1\" \n      opacity=\"0.5\"\n    />\n  `;\n}\n\n/**\n * Create compact brain icon for inline display\n * @param {number} volume - ICH volume in ml\n * @param {number} size - Icon size in pixels\n * @returns {string} Small brain icon with hemorrhage indicator\n */\nexport function renderCompactBrainIcon(volume, size = 24) {\n  const hemorrhageColor = getVolumeColor(volume);\n  const hemorrhageSize = volume > 0 ? Math.max(2, (volume / 50) * size * 0.3) : 0;\n\n  return `\n    <svg \n      width=\"${size}\" \n      height=\"${size}\" \n      viewBox=\"0 0 ${size} ${size}\"\n      class=\"brain-icon\"\n      style=\"display: inline-block; vertical-align: middle;\"\n    >\n      <!-- Simple brain outline -->\n      <ellipse \n        cx=\"${size / 2}\" \n        cy=\"${size / 2}\" \n        rx=\"${size * 0.4}\" \n        ry=\"${size * 0.35}\" \n        fill=\"#f1f5f9\" \n        stroke=\"#64748b\" \n        stroke-width=\"1\"\n      />\n      \n      <!-- Hemorrhage indicator -->\n      ${\n        volume > 0\n          ? `\n        <circle \n          cx=\"${size / 2 + size * 0.1}\" \n          cy=\"${size / 2}\" \n          r=\"${hemorrhageSize}\"\n          fill=\"${hemorrhageColor}\"\n          opacity=\"0.9\"\n        />\n      `\n          : \"\"\n      }\n    </svg>\n  `;\n}\n\n/**\n * Render circular brain display matching ICH risk circle style\n * @param {number} volume - ICH volume in ml\n * @returns {string} HTML for circular brain display\n */\nexport function renderCircularBrainDisplay(volume) {\n  if (!volume || volume <= 0) {\n    return `\n      <div class=\"volume-circle text-center\" data-volume=\"0\">\n        <div class=\"volume-number\">0<span> ml</span></div>\n        <canvas class=\"volume-canvas\" width=\"120\" height=\"120\"></canvas>\n      </div>\n    `;\n  }\n\n  const formattedVolume = formatVolumeDisplay(volume);\n  const canvasId = `volume-canvas-${Math.random().toString(36).substr(2, 9)}`;\n\n  return `\n    <div class=\"volume-circle text-center\" data-volume=\"${volume}\">\n      <div class=\"volume-number\">${formattedVolume}</div>\n      <canvas id=\"${canvasId}\" class=\"volume-canvas\" \n              data-volume=\"${volume}\" data-canvas-id=\"${canvasId}\"></canvas>\n    </div>\n  `;\n}\n\n/**\n * Initialize fluid fill animation for volume canvas\n * Call this after DOM is updated with new volume circles\n */\nexport function initializeVolumeAnimations() {\n  const canvases = document.querySelectorAll(\".volume-canvas\");\n\n  canvases.forEach(canvas => {\n    // Set canvas internal size to match CSS size\n    const cssWidth = canvas.offsetWidth || 120;\n    const cssHeight = canvas.offsetHeight || 120;\n    canvas.width = cssWidth;\n    canvas.height = cssHeight;\n\n    const volume = parseFloat(canvas.dataset.volume) || 0;\n    if (volume > 0) {\n      drawVolumeFluid(canvas, volume);\n    }\n  });\n}\n\n/**\n * Draw fluid fill animation on canvas\n * @param {HTMLCanvasElement} canvas - Canvas element\n * @param {number} volume - ICH volume in ml\n */\nfunction drawVolumeFluid(canvas, volume) {\n  const ctx = canvas.getContext(\"2d\");\n  const centerX = canvas.width / 2;\n  const centerY = canvas.height / 2;\n  const radius = canvas.width * 0.45; // 45% of canvas width for the circle\n  let animationFrame = 0;\n  let isAnimating = true;\n\n  // Check dark mode once\n  const isDarkMode =\n    document.body.classList.contains(\"dark-mode\") ||\n    window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n\n  function draw() {\n    if (!isAnimating) {\n      return;\n    }\n\n    // Clear canvas completely\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Don't draw background - let CSS handle it\n    // Just draw the fluid and border\n    drawFluidLayer();\n  }\n\n  function drawFluidLayer() {\n    // Calculate fill level based on volume\n    const maxVolume = 80; // ml (practical maximum for visualization)\n    const fillPercentage = Math.min(volume / maxVolume, 0.9);\n    const fillHeight = fillPercentage * (radius * 1.8);\n    const baseLevel = centerY + radius - 4 - fillHeight;\n\n    // Draw fluid fill with waves\n    if (volume > 0) {\n      ctx.save();\n\n      // Clip to circle\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, radius - 4, 0, Math.PI * 2);\n      ctx.clip();\n\n      // Draw base fluid rectangle\n      ctx.fillStyle = \"#dc2626\";\n      ctx.globalAlpha = 0.7;\n      ctx.fillRect(0, baseLevel + 5, canvas.width, canvas.height);\n\n      // Draw animated wave surface\n      ctx.globalAlpha = 0.9;\n      ctx.fillStyle = \"#dc2626\";\n      ctx.beginPath();\n\n      // Create wave path\n      const startX = centerX - radius + 4;\n      ctx.moveTo(startX, baseLevel);\n\n      for (let x = startX; x <= centerX + radius - 4; x += 2) {\n        const waveOffset1 = Math.sin(x * 0.05 + animationFrame * 0.08) * 3;\n        const waveOffset2 = Math.sin(x * 0.08 + animationFrame * 0.12 + 1) * 2;\n        const y = baseLevel + waveOffset1 + waveOffset2;\n        ctx.lineTo(x, y);\n      }\n\n      // Complete wave fill\n      ctx.lineTo(centerX + radius - 4, canvas.height);\n      ctx.lineTo(startX, canvas.height);\n      ctx.closePath();\n      ctx.fill();\n\n      ctx.restore();\n    }\n\n    // Draw background border circle (like ICH risk ring)\n    const borderColor =\n      getComputedStyle(document.documentElement).getPropertyValue(\"--text-secondary\").trim() ||\n      (isDarkMode ? \"#8899a6\" : \"#6c757d\");\n    ctx.strokeStyle = borderColor;\n    ctx.lineWidth = 8;\n    ctx.globalAlpha = 0.4;\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, radius, 0, Math.PI * 2);\n    ctx.stroke();\n    ctx.globalAlpha = 1;\n\n    // Draw volume progress ring (like ICH risk circle)\n    const volumePercent = Math.min(volume / 100, 1); // Max 100ml = 100%\n    const circumference = 2 * Math.PI * radius;\n    const progressOffset = circumference * (1 - volumePercent);\n\n    // Progress ring (dark mode aware)\n    const progressColor =\n      getComputedStyle(document.documentElement).getPropertyValue(\"--danger-color\").trim() ||\n      \"#dc2626\";\n    ctx.strokeStyle = progressColor;\n    ctx.lineWidth = 8;\n    ctx.setLineDash([]);\n    ctx.lineCap = \"round\";\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, radius, -Math.PI / 2, -Math.PI / 2 + volumePercent * 2 * Math.PI);\n    ctx.stroke();\n\n    // Continue animation\n    animationFrame += 1;\n    if (volume > 0) {\n      requestAnimationFrame(draw);\n    }\n  }\n\n  // Start animation\n  draw();\n\n  // Stop animation when canvas is removed from DOM\n  const observer = new MutationObserver(() => {\n    if (!document.contains(canvas)) {\n      isAnimating = false;\n      observer.disconnect();\n    }\n  });\n  observer.observe(document.body, { childList: true, subtree: true });\n}\n\n/**\n * Get brain visualization CSS classes\n * @param {string} size - 'compact' or 'detailed'\n * @returns {string} CSS classes\n */\nexport function getBrainVisualizationClasses(size) {\n  const baseClasses = \"brain-visualization\";\n  const sizeClasses = size === \"compact\" ? \"compact-brain\" : \"detailed-brain\";\n  return `${baseClasses} ${sizeClasses}`;\n}\n"],"names":["renderStrokeCenterMap","results","t","initializeStrokeCenterMap","useGpsButton","manualLocationButton","locationManual","locationInput","searchLocationButton","resultsContainer","requestUserLocation","isHidden","location","geocodeLocation","e","showLocationError","safeSetInnerHTML","error","position","latitude","longitude","showNearestCenters","errorMessage","locationString","cache","coordPattern","coordMatch","lat","lng","searchLocation","cached","r","url","response","data","supportedStates","locationName","routing","ROUTING_ALGORITHM","_a","routingExplanation","getEnhancedRoutingExplanation","getStateName","database","COMPREHENSIVE_HOSPITAL_DATABASE","allHospitals","destination","calculateDistance","travelInfo","calculateEmergencyTravelTime","alternatives","h","a","b","alt","mainDiv","locationDiv","primaryDiv","createStrokeCenterCard","altDiv","altGrid","noteDiv","addStrokeCenterEventListeners","_b","_c","_d","_e","_g","_f","stateCode","ichPercent","urgencyIcon","urgencyColor","center","isRecommended","card","capabilities","networkBadge","container","callButtons","directionsButtons","button","phone","message","renderCircularBrainDisplay","volume","formattedVolume","formatVolumeDisplay","canvasId","initializeVolumeAnimations","canvas","cssWidth","cssHeight","drawVolumeFluid","ctx","centerX","centerY","radius","animationFrame","isAnimating","isDarkMode","draw","drawFluidLayer","fillHeight","baseLevel","startX","x","waveOffset1","waveOffset2","y","borderColor","volumePercent","progressColor","observer"],"mappings":"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"}