{"version":3,"mappings":"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","names":["isDevelopment","__vite_import_meta_env__","MOCK_AUTH_SUCCESS","MOCK_API_RESPONSES","API_URLS","DEV_CONFIG","CRITICAL_THRESHOLDS","GFAP_RANGES","APP_CONFIG","VALIDATION_RULES","value","formData","diastolic","systolic","__viteBrowserExternal","_","key","messages","I18n","savedLanguage","language","newLanguage","lang","date","locale","i18n","t","getPrerequisites","renderPrerequisitesModal","prerequisites","item","initPrerequisitesModal","modal","closeBtn","cancelBtn","confirmBtn","closeModal","navigate","e","checkboxes","cb","warning","checkbox","allChecked","showPrerequisitesModal","existingModal","modalElement","safeSetInnerHTML","error","fallbackModal","handleTriage1","isComatose","store","handleTriage2","isExaminable","screen","reset","goBack","goHome","handleSubmit","container","form","module","validation","validateForm","showValidationErrors","firstErrorName","el","sr","errorCount","inputs","element","n","button","originalContent","results","predictComaIch","predictLimitedIch","predictFullStroke","_a","_b","storedState","showToast","cs","isLocalPreview","m","ich","lvo","pIch","pLvo","fallbackResults","errorMessage","APIError","showError","e2","message","alert","h4","iconSpan","p","containerDiv","duration","toast","ERROR_SEVERITY","ERROR_CATEGORIES","MedicalError","code","category","severity","context","GlobalErrorHandler","event","errorEntry","globalErrorHandler","safeAsync","asyncFn","options","fallback","timeout","retries","attempt","timeoutPromise","reject","resolve","safeAuthOperation","authFn","validatePatientData","data","errors","warnings","validateICHRiskResult","result","isPatientData","isICHRiskResult","TypeChecker","expectedType","fieldName","isValid","actualType","range","min","max","LOG_LEVELS","LOG_CATEGORIES","MedicalLogger","stored","timestamp","random","loggingError","level","safeContext","entry","userId","sanitized","sensitiveFields","removeSensitiveData","obj","cleaned","lowerKey","field","sessionData","navigation","performance","levelInfo","style","serialized","keys","operation","action","success","url","method","status","metric","urlObj","param","filters","allLogs","log","filtered","a","b","minLevel","sinceDate","format","logs","headers","rows","row","medicalLogger","debug","info","warn","critical","medicalCalculation","authentication","userInteraction","networkRequest","auditTrail","AuthenticationManager","password","expectedPassword","getResearchPassword","storageError","isLocalHost","preferMock","response","errorCode","secureRemove","input","hashBuffer","hash","i","char","session","secureRetrieve","storedToken","storedExpiry","expiryDate","timestampNum","events","updateActivity","timeRemaining","hoursRemaining","minutesRemaining","authManager","renderProgressIndicator","currentStep","steps","html","step","index","isActive","isCompleted","renderComa","renderLimited","renderFull","renderCriticalAlert","FIELD_LABEL_MAP","PATTERN_REPLACEMENTS","formatDriverName","mappedKey","translated","formatted","pattern","replacement","l","formatSummaryLabel","formatDisplayValue","renderDriversSection","renderEnhancedDriversPanel","drivers","title","type","probability","driversViewModel","positiveDrivers","negativeDrivers","maxWeight","d","totalPositiveWeight","sum","driver","relativeImportance","cleanLabel","totalNegativeWeight","COMPREHENSIVE_HOSPITAL_DATABASE","ROUTING_ALGORITHM","patientData","location","state","ichProbability","timeFromOnset","clinicalFactors","detectedState","database","destination","comprehensiveOptions","allThrombolysisCapable","strokeUnitsAndHigher","stateCenters","nearestState","minDistance","center","distance","userLocation","hospitals","hospital","point1","point2","dLat","dLng","deg","calculateDistance","lat1","lng1","lat2","lng2","toRadians","degrees","calculateTravelTime","fromLat","fromLng","toLat","toLng","profile","route","source","calculateEmergencyTravelTime","getRiskLevel","probabilityPercent","thresholds","renderInputSummary","summaryHtml","moduleTitle","itemsHtml","label","displayValue","renderRiskCard","percent","riskLevel","isCritical","isHigh","icons","titles","renderICHVolumeDisplay","gfapValue","getCurrentGfapValue","estVolume","estimateVolumeFromGFAP","renderCircularBrainDisplay","renderResults","startTime","currentModule","getCurrentModuleName","legacyResults","calculateLegacyFromResults","isResearchModeEnabled","safeLogResearchData","getPatientInputs","isLimitedOrComa","isFullModule","resultsHtml","renderICHFocusedResults","renderFullModuleResults","initializeVolumeAnimations","mountIslands","__vitePreload","mountIslands$1","err","criticalAlert","ichPercentLocal","strokeCenterHtml","renderStrokeCenterMap","inputSummaryHtml","renderResearchToggle","researchComparisonHtml","renderModelComparison","alternativeDiagnosesHtml","renderComaAlternativeDiagnoses","strokeDifferentialHtml","renderStrokeDifferentialDiagnoses","renderVolumeCard","renderICHDriversOnly","renderBibliography","ichPercent","lvoPercent","fastEdScore","hasValidLVO","showLVORiskCard","showVolumeCard","ratio","inRatioBand","showDominanceBanner","debugShowTachometer","cardCount","layoutClass","renderTachometerGauge","renderDominanceBanner","dominant","icon","dominantText","subtitle","positive","negative","renderCompactDriver","percentage","isPositive","textColor","ichData","patientInputs","calculateLegacyICH","age","gfap","isDE","listItems","mortality","estimateMortalityFromVolume","uncertainLabel","diff","maxP","confidence","renderLoginScreen","initializeLoginScreen","loginForm","passwordInput","loginError","loginButton","showLoginError","setLoginLoading","hideLoginError","authResult","isLoading","buttonText","loadingSpinner","announceScreenChange","announcement","screenNames","setPageTitle","appName","section","focusMainHeading","heading","FastEdCalculator","score","total","name","opt","_c","totalElement","riskElement","currentScore","onApplyCallback","armWeaknessBoolean","eyeDeviationBoolean","remaining","component","assign","fastEdCalculator","renderTriage1","renderTriage2","render","currentScreen","screenHistory","tempContainer","backButton","restoreFormData","attachEvents","initializeStrokeCenterMap","initializeResearchMode","group","boolVal","printButton","fastEdInput","currentValue","armPareseField","eyeDeviationField","infoToggles","content","toggle","targetId","targetContent","arrow","UIManager","savedLang","languageToggle","isLocal","next","btn","elementId","handler","wrappedHandler","target","helpButton","helpModal","modalClose","privacyPolicyModal","disclaimerModal","currentLang","selector","text","isDark","darkModeToggle","researchModeToggle","shouldShow","researchPanel","isVisible","modalId","yearElement","errorEvent","missingElements","id","ThemeManager","savedTheme","prefersDark","themeToApply","mediaQuery","handleSystemThemeChange","newTheme","theme","metaThemeColor","themeColors","systemTheme","SessionManager","forms","savedCount","numValue","newData","currentData","savedData","CacheStorageType","CachePriority","MedicalCacheTTL","CacheEntry","ttl","priority","metadata","priorityWeight","accessWeight","ageWeight","MedicalCache","storageType","cacheData","parsed","entryData","metricId","medicalPerformanceMonitor","PerformanceMetricType","size","oldEntry","medicalEventObserver","MEDICAL_EVENTS","entriesCleared","lowestScore","keyToEvict","cleanedCount","hitRate","MedicalCacheFactory","cache","__publicField","predictionCache","LoadPriority","LoadState","LazyComponent","loader","delay","dependencyPromises","dep","LazyLoader","entries","priorities","targetPriorities","preloadPromises","pri","componentName","pendingComponents","comp","loadPromises","scheduleNext","deadline","normalQueue","lowQueue","stats","totalLoadTime","loadedCount","queue","MedicalComponentLoader","lazyLoader","command","predictionStrategy","validationFactory","clinicalSituation","moduleType","components","enterpriseComponents","r","AdvancedFeaturesManager","swInitialized","medicalSWManager","syncInitialized","medicalSyncManager","criticalResources","clinicalAuditTrail","clinicalReportingSystem","qualityMetricsTracker","v","_d","_f","_e","AppController","warmUpFunctions","coreInitTasks","failures","createApp","app","API_ENDPOINTS","WARMUP_PAYLOADS","APIWarmupService","background","warmupPromises","errorResult","payload","summary","criticalAPIs","apiName","apiWarmupService","initializeAPIWarmup","criticalOnly","initializeApplication","startupEvent","targetWidth","handleInitializationFailure","handlePageUnload","setupGlobalErrorHandlers","main","regs","reg","ProbabilityRing","circumference","offset","strokeColor","React","TachometerGauge","lvoProb","ichProb","canvasRef","useRef","absDiff","maxProb","useEffect","canvas","ctx","raf","currentPos","safeIchLocal","rawRatioLocal","clampedRatioLocal","targetPosBase","MAX_BACKING_PIXELS","draw","dpr","rect","cssW","cssH","targetW","targetH","width","height","isMobile","isTablet","baseWidth","padding","maxRHorizontal","maxRVerticalBase","maxRVertical","radius","cx","cy","colors","bezelGradient","segments","angleStep","progress","startAngle","endAngle","g","color","majorTicks","minorTicks","val","pos","inner","outer","tickFont","th","labelFont","labelDistance","needleAngle","needleLen","coneSpan","needleColor","now","gradient","tx","ty","pulse","tipRadius","hubOuter","hubInner","hubGradient","innerGradient","ratioFont","ratioY","plateWidth","plateHeight","confY","confWidth","confHeight","confFill","confGradient","node","root","createRoot","MedicalCommand","description","UpdatePatientDataCommand","newValue","previousValue","NavigationCommand","targetScreen","sourceScreen","SubmitFormCommand","ClearDataCommand","dataType","MedicalCommandInvoker","cmd","medicalCommandInvoker","PredictionStrategy","inputData","missingFields","rawResult","ComaPredictionStrategy","processedInput","LimitedDataPredictionStrategy","FullStrokePredictionStrategy","PredictionContext","strategy","strategyName","predictionContext","PREDICTION_STRATEGIES","ValidationRule","required","validator","check","medicalError","NumericValidationRule","BiomarkerValidationRule","biomarkerType","ranges","VitalSignValidationRule","vitalType","AgeValidationRule","ClinicalScaleValidationRule","scaleType","MedicalValidationFactory","rules","validationErrors","rule","VALIDATION_RULE_TYPES","BIOMARKER_TYPES","VITAL_SIGN_TYPES","CLINICAL_SCALE_TYPES"],"ignoreList":[],"sources":["../../src/config.js","../../__vite-browser-external","../../src/localization/messages.js","../../src/localization/i18n.js","../../src/ui/components/prerequisites-modal.js","../../src/logic/handlers.js","../../src/utils/error-handler.js","../../src/types/medical-types.js","../../src/utils/medical-logger.js","../../src/auth/authentication.js","../../src/ui/components/progress.js","../../src/ui/screens/coma.js","../../src/ui/screens/limited.js","../../src/ui/screens/full.js","../../src/ui/components/alerts.js","../../src/utils/label-formatter.js","../../src/ui/components/drivers.js","../../src/data/comprehensive-stroke-centers.js","../../src/data/stroke-centers.js","../../src/logic/formatters.js","../../src/ui/screens/results.js","../../src/ui/screens/login.js","../../src/ui/a11y.js","../../src/ui/components/fastEdModal.js","../../src/ui/screens/triage1.js","../../src/ui/screens/triage2.js","../../src/ui/render.js","../../src/core/ui-manager.js","../../src/core/theme-manager.js","../../src/core/session-manager.js","../../src/performance/medical-cache.js","../../src/components/lazy-loader.js","../../src/core/advanced-features-manager.js","../../src/core/app-controller.js","../../src/core/api-warmup.js","../../src/main.js","../../src/react/ProbabilityRing.jsx","../../src/react/TachometerGauge.jsx","../../src/react/mountIslands.jsx","../../src/patterns/command.js","../../src/patterns/prediction-strategy.js","../../src/patterns/validation-factory.js"],"sourcesContent":["// Configuration for the Stroke Triage Assistant\r\n\r\n// Development mode detection (prefer Vite flag, fallback to hostname)\r\n// Only treat Vite dev server as development; preview uses production settings\r\nconst isDevelopment = !!(import.meta && import.meta.env && import.meta.env.DEV);\r\n\r\n// Mock authentication for local development\r\nconst MOCK_AUTH_SUCCESS = {\r\n  success: true,\r\n  message: \"Development mode - authentication bypassed\",\r\n  session_token: `dev-token-${Date.now()}`,\r\n  expires_at: new Date(Date.now() + 30 * 60 * 1000).toISOString(),\r\n  session_duration: 1800,\r\n};\r\n\r\n// Mock API responses for development (matching real Cloud Function format)\r\nconst MOCK_API_RESPONSES = {\r\n  coma_ich: {\r\n    probability: 25.3,\r\n    ich_probability: 25.3,\r\n    drivers: {\r\n      gfap_value: 0.4721,\r\n      baseline_risk: 0.1456,\r\n    },\r\n    confidence: 0.75,\r\n  },\r\n  limited_ich: {\r\n    probability: 31.7,\r\n    ich_probability: 31.7,\r\n    drivers: {\r\n      age_years: 0.2845,\r\n      systolic_bp: 0.1923,\r\n      gfap_value: 0.4231,\r\n      vigilanzminderung: 0.3456,\r\n    },\r\n    confidence: 0.65,\r\n  },\r\n  full_stroke: {\r\n    ich_prediction: {\r\n      probability: 28.4,\r\n      drivers: {\r\n        age_years: 0.1834,\r\n        gfap_value: 0.3921,\r\n        systolic_bp: 0.2341,\r\n        vigilanzminderung: 0.2876,\r\n      },\r\n      confidence: 0.88,\r\n    },\r\n    lvo_prediction: {\r\n      probability: 45.2,\r\n      drivers: {\r\n        fast_ed_score: 0.7834,\r\n        age_years: 0.2341,\r\n        eye_deviation: 0.1923,\r\n      },\r\n      confidence: 0.82,\r\n    },\r\n  },\r\n  authenticate: {\r\n    success: true,\r\n    message: \"Development mode - authentication bypassed\",\r\n    session_token: `dev-token-${Date.now()}`,\r\n    expires_at: new Date(Date.now() + 30 * 60 * 1000).toISOString(),\r\n    session_duration: 1800,\r\n  },\r\n};\r\n\r\nexport const API_URLS = isDevelopment\r\n  ? {\r\n      // Development mode - use Vite proxy to bypass CORS\r\n      COMA_ICH: \"/api/cloud-functions/predict_coma_ich\",\r\n      LDM_ICH: \"/api/cloud-functions/predict_limited_data_ich\",\r\n      FULL_STROKE: \"/api/cloud-functions/predict_full_stroke\",\r\n      LVO_PREDICTION: \"/api/cloud-functions/predict_lvo\",\r\n      AUTHENTICATE: \"/api/cloud-functions/authenticate-research-access\",\r\n    }\r\n  : {\r\n      // Production mode - use direct endpoints\r\n      COMA_ICH: \"https://europe-west3-igfap-452720.cloudfunctions.net/predict_coma_ich\",\r\n      LDM_ICH: \"https://europe-west3-igfap-452720.cloudfunctions.net/predict_limited_data_ich\",\r\n      FULL_STROKE: \"https://europe-west3-igfap-452720.cloudfunctions.net/predict_full_stroke\",\r\n      LVO_PREDICTION: \"https://europe-west3-igfap-452720.cloudfunctions.net/predict_lvo\",\r\n      AUTHENTICATE:\r\n        \"https://europe-west3-igfap-452720.cloudfunctions.net/authenticate-research-access\",\r\n    };\r\n\r\nexport const DEV_CONFIG = {\r\n  isDevelopment,\r\n  mockAuthResponse: MOCK_AUTH_SUCCESS,\r\n  mockApiResponses: MOCK_API_RESPONSES,\r\n};\r\n\r\nexport const CRITICAL_THRESHOLDS = {\r\n  ich: {\r\n    medium: 25,\r\n    high: 50,\r\n  },\r\n  lvo: {\r\n    medium: 25,\r\n    high: 50,\r\n  },\r\n};\r\n\r\nexport const GFAP_RANGES = {\r\n  min: 29,\r\n  max: 10001,\r\n  normal: 100,\r\n  elevated: 500,\r\n  critical: 1000,\r\n};\r\n\r\nexport const APP_CONFIG = {\r\n  autoSaveInterval: 180000, // 3 minutes to reduce irritating screen blinks\r\n  sessionTimeout: 30 * 60 * 1000, // 30 minutes\r\n  requestTimeout: 10000, // 10 seconds (default)\r\n  fullStrokeTimeout: 20000, // 20 seconds for full stroke (handles cold starts)\r\n};\r\n\r\nexport const VALIDATION_RULES = {\r\n  age_years: {\r\n    required: true,\r\n    min: 0,\r\n    max: 120,\r\n    type: \"integer\",\r\n    medicalCheck: value =>\r\n      value < 18 ? \"Emergency stroke assessment typically for adults (≥18 years)\" : null,\r\n  },\r\n  systolic_bp: {\r\n    required: true,\r\n    min: 60,\r\n    max: 300,\r\n    type: \"number\",\r\n    medicalCheck: (value, formData) => {\r\n      const diastolic = formData?.diastolic_bp;\r\n      if (diastolic && value <= diastolic) {\r\n        return \"Systolic BP must be higher than diastolic BP\";\r\n      }\r\n      return null;\r\n    },\r\n  },\r\n  diastolic_bp: {\r\n    required: true,\r\n    min: 30,\r\n    max: 200,\r\n    type: \"number\",\r\n    medicalCheck: (value, formData) => {\r\n      const systolic = formData?.systolic_bp;\r\n      if (systolic && value >= systolic) {\r\n        return \"Diastolic BP must be lower than systolic BP\";\r\n      }\r\n      return null;\r\n    },\r\n  },\r\n  gfap_value: {\r\n    required: true,\r\n    min: GFAP_RANGES.min,\r\n    max: GFAP_RANGES.max,\r\n    type: \"number\",\r\n    medicalCheck: value => {\r\n      if (value > 8000) {\r\n        return \"Warning: Extremely high GFAP value - please verify lab result (still valid)\";\r\n      }\r\n      return null;\r\n    },\r\n  },\r\n  fast_ed_score: {\r\n    required: true,\r\n    min: 0,\r\n    max: 9,\r\n    type: \"integer\",\r\n    medicalCheck: value =>\r\n      value >= 4 ? \"High FAST-ED score suggests LVO - consider urgent intervention\" : null,\r\n  },\r\n  gcs: {\r\n    required: true,\r\n    min: 3,\r\n    max: 15,\r\n    type: \"integer\",\r\n    medicalCheck: value =>\r\n      value < 8 ? \"GCS < 8 indicates severe consciousness impairment - consider coma module\" : null,\r\n  },\r\n};\r\n","export default new Proxy({}, {\n  get(_, key) {\n    throw new Error(`Module \"\" has been externalized for browser compatibility. Cannot access \".${key}\" in client code.  See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n  }\n})","// Localization messages for the Stroke Triage Assistant\n\nimport { data } from \"autoprefixer\";\n\nexport const messages = {\n  en: {\n    // Header\n    appTitle: \"iGFAP\",\n    emergencyBadge: \"Emergency Tool\",\n    helpButton: \"Help and Instructions\",\n    darkModeButton: \"Toggle dark mode\",\n    languageToggle: \"Language\",\n\n    // Progress\n    step1: \"Initial Assessment\",\n    step2: \"Data Collection\",\n    step3: \"Results\",\n\n    // Module titles\n    comaModuleTitle: \"Coma Module\",\n    limitedDataModuleTitle: \"Limited Data Module\",\n    fullStrokeModuleTitle: \"Full Stroke Module\",\n\n    // Triage 1\n    triage1Title: \"Patient Assessment\",\n    triage1Question: \"Is the patient comatose?\",\n    triage1Help: \"Glasgow Coma Scale < 9\",\n    triage1Yes: \"YES - Comatose\",\n    triage1No: \"NO - Conscious\",\n\n    // Triage 2\n    triage2Title: \"Examination Capability\",\n    triage2Question: \"Can the patient be reliably examined?\",\n    triage2Help: \"Patient is not aphasic, confused, or uncooperative\",\n    triage2Yes: \"YES - Full Exam Possible\",\n    triage2No: \"NO - Limited Exam Only\",\n\n    // Forms\n    ageLabel: \"Age (years)\",\n    ageHelp: \"Patient age in years\",\n    systolicLabel: \"Systolic BP (mmHg)\",\n    systolicHelp: \"Systolic blood pressure\",\n    diastolicLabel: \"Diastolic BP (mmHg)\",\n    diastolicHelp: \"Diastolic blood pressure\",\n    gfapLabel: \"GFAP Value (pg/mL)\",\n    gfapHelp: \"GFAP biomarker level\",\n    fastEdLabel: \"FAST-ED Score\",\n    fastEdHelp: \"FAST-ED assessment score (0-9)\",\n\n    // Checkboxes\n    headacheLabel: \"Headache\",\n    vigilanzLabel: \"Reduced consciousness\",\n    armPareseLabel: \"Arm weakness\",\n    beinPareseLabel: \"Leg weakness\",\n    eyeDeviationLabel: \"Eye deviation\",\n    atrialFibLabel: \"Atrial fibrillation\",\n    anticoagLabel: \"Anticoagulated (NOAK)\",\n    antiplateletsLabel: \"Antiplatelets\",\n\n    // Buttons\n    analyzeButton: \"Analyze\",\n    analyzing: \"Analyzing...\",\n    printResults: \"Print Results\",\n    newAssessment: \"Start New Assessment\",\n    startOver: \"Start Over\",\n    goBack: \"Go Back\",\n    goHome: \"Go Home\",\n\n    // Form sections\n    basicInformation: \"Basic Information\",\n    biomarkersScores: \"Biomarkers & Scores\",\n    clinicalSymptoms: \"Clinical Symptoms\",\n    medicalHistory: \"Medical History\",\n\n    // Form labels with units\n    ageYearsLabel: \"Age (years)\",\n    systolicBpLabel: \"Systolic BP (mmHg)\",\n    diastolicBpLabel: \"Diastolic BP (mmHg)\",\n    gfapValueLabel: \"GFAP Value (pg/mL)\",\n    fastEdScoreLabel: \"FAST-ED Score\",\n\n    // Help text\n    ageYearsHelp: \"Patient's age in years\",\n    systolicBpHelp: \"Normal: 90-140 mmHg\",\n    diastolicBpHelp: \"Normal: 60-90 mmHg\",\n    gfapTooltip: \"Brain injury biomarker\",\n    gfapTooltipLong: \"Glial Fibrillary Acidic Protein - Brain injury biomarker\",\n    gfapRange: \"Range: {min} - {max} pg/mL\",\n    fastEdTooltip: \"0-9 scale for LVO screening\",\n\n    // Module buttons\n    analyzeIchRisk: \"Analyze ICH Risk\",\n    analyzeStrokeRisk: \"Analyze Stroke Risk\",\n\n    // Alert messages\n    criticalPatient: \"Critical Patient\",\n    comaAlert: \"Patient is comatose (GCS < 9). Rapid assessment required.\",\n    vigilanceReduction: \"Vigilance Reduction (Decreased alertness)\",\n\n    // Additional symptom labels\n    armParesis: \"Arm Paresis\",\n    legParesis: \"Leg Paresis\",\n    eyeDeviation: \"Eye Deviation\",\n    atrialFibrillation: \"Atrial Fibrillation\",\n    onNoacDoac: \"On NOAC/DOAC\",\n    onAntiplatelets: \"On Antiplatelets\",\n\n    // Results\n    resultsTitle: \"Assessment Results\",\n    bleedingRiskAssessment: \"Bleeding Risk Assessment\",\n    ichProbability: \"ICH Probability\",\n    lvoProbability: \"LVO Probability\",\n    lvoMayBePossible: \"Large vessel occlusion possible - further evaluation recommended\",\n    riskFactorsTitle: \"Main Risk Factors\",\n    increasingRisk: \"Increasing Risk\",\n    decreasingRisk: \"Decreasing Risk\",\n    noFactors: \"No factors\",\n    riskLevel: \"Risk Level\",\n    lowRisk: \"Low Risk\",\n    mediumRisk: \"Medium Risk\",\n    highRisk: \"High Risk\",\n\n    // Risk levels\n    riskLow: \"Low\",\n    riskMedium: \"Medium\",\n    riskHigh: \"High\",\n\n    // Risk Factors Analysis\n    riskFactorsAnalysis: \"Risk Factors\",\n    contributingFactors: \"Contributing factors to the assessment\",\n    riskFactors: \"Risk Factors\",\n    increaseRisk: \"INCREASE\",\n    decreaseRisk: \"DECREASE\",\n    noPositiveFactors: \"No increasing factors\",\n    noNegativeFactors: \"No decreasing factors\",\n    ichRiskFactors: \"ICH Risk Factors\",\n    lvoRiskFactors: \"LVO Risk Factors\",\n\n    // Critical Alert\n    criticalAlertTitle: \"CRITICAL RISK DETECTED\",\n    criticalAlertMessage: \"High probability of intracerebral hemorrhage detected.\",\n    immediateActionsRequired: \"Immediate actions required\",\n    initiateStrokeProtocol: \"Initiate stroke protocol immediately\",\n    urgentCtImaging: \"Urgent CT imaging required\",\n    considerBpManagement: \"Consider blood pressure management\",\n    prepareNeurosurgicalConsult: \"Prepare for potential neurosurgical consultation\",\n\n    // Help Modal\n    helpTitle: \"Quick Reference Guide\",\n    gcsTitle: \"Glasgow Coma Scale (GCS)\",\n    gcsLow: \"GCS < 9: Comatose patient - use Coma Module\",\n    gcsMod: \"GCS 8-12: Moderate impairment\",\n    gcsHigh: \"GCS 13-15: Mild impairment\",\n    fastEdTitle: \"FAST-ED Score Components\",\n    fastEdFacial: \"Facial Palsy: 0-1 points\",\n    fastEdArm: \"Arm Weakness: 0-2 points\",\n    fastEdSpeech: \"Speech Changes: 0-2 points\",\n    fastEdTime: \"Time: Critical factor\",\n    fastEdEye: \"Eye Deviation: 0-2 points\",\n    fastEdDenial: \"Denial/Neglect: 0-2 points\",\n    criticalValuesTitle: \"Critical Values\",\n    criticalBp: \"Systolic BP > 180: Increased ICH risk\",\n    criticalGfap: \"GFAP > 500 pg/mL: Significant marker\",\n    criticalFastEd: \"FAST-ED ≥ 4: Consider LVO\",\n\n    // FAST-ED Calculator Modal\n    fastEdCalculatorTitle: \"FAST-ED Score Calculator\",\n    fastEdCalculatorSubtitle: \"Click to calculate FAST-ED score components\",\n    facialPalsyTitle: \"Facial Palsy\",\n    facialPalsyNormal: \"Normal (0)\",\n    facialPalsyMild: \"Present (1)\",\n    armWeaknessTitle: \"Arm Weakness\",\n    armWeaknessNormal: \"Normal (0)\",\n    armWeaknessMild: \"Mild weakness or drift (1)\",\n    armWeaknessSevere: \"Severe weakness or falls immediately (2)\",\n    speechChangesTitle: \"Speech Abnormalities\",\n    speechChangesNormal: \"Normal (0)\",\n    speechChangesMild: \"Mild dysarthria or aphasia (1)\",\n    speechChangesSevere: \"Severe dysarthria or aphasia (2)\",\n    eyeDeviationTitle: \"Eye Deviation\",\n    eyeDeviationNormal: \"Normal (0)\",\n    eyeDeviationPartial: \"Partial gaze deviation (1)\",\n    eyeDeviationForced: \"Forced gaze deviation (2)\",\n    denialNeglectTitle: \"Denial/Neglect\",\n    denialNeglectNormal: \"Normal (0)\",\n    denialNeglectPartial: \"Partial neglect (1)\",\n    denialNeglectComplete: \"Complete neglect (2)\",\n    totalScoreTitle: \"Total FAST-ED Score\",\n    riskLevel: \"Risk Level\",\n    riskLevelLow: \"LOW (Score <4)\",\n    riskLevelHigh: \"HIGH (Score ≥4 - Consider LVO)\",\n    applyScore: \"Apply Score\",\n    cancel: \"Cancel\",\n\n    // Results Screen Enhancements\n    riskAnalysis: \"Risk Analysis\",\n    riskAnalysisSubtitle: \"Clinical factors in this assessment\",\n    contributingFactors: \"Contributing factors\",\n    factorsShown: \"shown\",\n    positiveFactors: \"Positive factors\",\n    negativeFactors: \"Negative factors\",\n    clinicalInformation: \"Clinical Information\",\n    clinicalRecommendations: \"Clinical Recommendations\",\n    clinicalRec1: \"Consider immediate imaging if ICH risk is high\",\n    clinicalRec2: \"Activate stroke team for LVO scores ≥ 50%\",\n    clinicalRec3: \"Monitor blood pressure closely\",\n    clinicalRec4: \"Document all findings thoroughly\",\n    noDriverData: \"No driver data available\",\n    driverAnalysisUnavailable: \"Driver analysis unavailable\",\n    driverInfoNotAvailable: \"Driver information not available from this prediction model\",\n    driverAnalysisNotAvailable: \"Driver analysis not available for this prediction\",\n    lvoNotPossible: \"LVO assessment not possible with limited data\",\n    fullExamRequired: \"Full neurological examination required for LVO screening\",\n    limitedAssessment: \"Limited Assessment\",\n\n    // Disclaimer\n    disclaimer: \"Clinical Disclaimer\",\n    disclaimerText:\n      \"This tool is for clinical decision support only. Always use clinical judgment and follow local protocols. Not a replacement for physician assessment.\",\n    importantNote: \"Important\",\n    importantText:\n      \"These results are for clinical decision support only. Always use clinical judgment and follow institutional protocols.\",\n\n    // ICH Volume and Mortality\n    predictedMortality: \"Predicted 30-day mortality\",\n    ichVolumeLabel: \"ICH Volume\",\n    references: \"References\",\n\n    // Input Summary\n    inputSummaryTitle: \"Input Summary\",\n    inputSummarySubtitle: \"Values used for this analysis\",\n\n    // Footer\n    privacyLink: \"Privacy Policy\",\n    disclaimerLink: \"Medical Disclaimer\",\n    versionLink: \"Version 2.1.0 - Research Preview\",\n\n    // Privacy and disclaimers\n    privacyPolicy:\n      \"Privacy Policy: This tool processes data locally. No patient data is stored or transmitted.\",\n    medicalDisclaimer:\n      \"Medical Disclaimer: This tool is for clinical decision support only. Always use clinical judgment and follow local protocols.\",\n\n    // Error messages\n    networkError: \"Network error - please check your connection and try again\",\n    requestTimeout: \"Request timeout - please try again\",\n    apiError: \"Failed to get results\",\n    validationError: \"Please check your input values\",\n\n    // Session\n    sessionTimeout: \"Your session has been idle for 30 minutes. Would you like to continue?\",\n    unsavedData: \"You have unsaved data. Are you sure you want to leave?\",\n\n    // Stroke Centers\n    nearestCentersTitle: \"Nearest Stroke Centers\",\n    useCurrentLocation: \"Use Current Location\",\n    enterLocationPlaceholder: \"Enter city or address...\",\n    enterManually: \"Enter Location Manually\",\n    search: \"Search\",\n    yourLocation: \"Your Location\",\n    recommendedCenters: \"Recommended Centers\",\n    alternativeCenters: \"Alternative Centers\",\n    noCentersFound: \"No stroke centers found in this area\",\n    gettingLocation: \"Getting your location\",\n    searchingLocation: \"Searching location\",\n    locationError: \"Unable to get your location\",\n    locationPermissionDenied: \"Location access denied. Please allow location access and try again.\",\n    locationUnavailable: \"Location information is unavailable\",\n    locationTimeout: \"Location request timed out\",\n    geolocationNotSupported: \"Geolocation is not supported by this browser\",\n    geocodingNotImplemented:\n      \"Location search not available. Please use GPS or enter coordinates manually.\",\n    tryManualEntry: \"Try entering your location manually or use GPS.\",\n    distanceNote:\n      \"Distances are calculated as straight-line distances. Actual travel times may vary.\",\n    travelTimeNote:\n      \"Travel times calculated for emergency vehicles with sirens and priority routing.\",\n    calculatingTravelTimes: \"Calculating travel times\",\n    minutes: \"min\",\n    poweredByOrs: \"Travel times powered by OpenRoute Service\",\n\n    // Center Types and Services\n    comprehensiveCenter: \"Comprehensive Stroke Center\",\n    primaryCenter: \"Primary Stroke Center\",\n    telemetryCenter: \"Telemedicine Center\",\n    thrombectomy: \"Thrombectomy\",\n    neurosurgery: \"Neurosurgery\",\n    icu: \"Intensive Care\",\n    telemedicine: \"Telemedicine\",\n    stroke_unit: \"Stroke Unit\",\n\n    // Actions\n    call: \"Call\",\n    directions: \"Directions\",\n    emergency: \"Emergency\",\n    certified: \"Certified\",\n\n    // Prerequisites Modal\n    prerequisitesTitle: \"Prerequisites for Stroke Triage\",\n    prerequisitesIntro: \"Please confirm that all of the following prerequisites are met:\",\n    prerequisitesWarning: \"All prerequisites must be met to continue\",\n    continue: \"Continue\",\n    acute_deficit: \"Acute (severe) neurological deficit present\",\n    symptom_onset: \"Symptom onset within 6 hours\",\n    no_preexisting: \"No pre-existing severe neurological deficits\",\n    no_trauma: \"No traumatic brain injury present\",\n\n    // Differential Diagnoses for Stroke Modules\n    differentialDiagnoses: \"Differential Diagnoses\",\n    reconfirmTimeWindow: \"Please reconfirm time window!\",\n    unclearTimeWindow:\n      \"With unclear/extended time window, early demarcated brain infarction is also possible\",\n    rareDiagnoses: \"Rare diagnoses such as glioblastoma are also possible\",\n\n    // login Screen\n    researchAccessRequired: \"Research Access Required\",\n    researchrPreviewValidation:\n      \"This is a research preview of the iGFAP Stroke Triage Assistant for clinical validation.\",\n    importantNotice: \"Important Notice\",\n    researchUseOnly: \"Research Use Only\",\n    noClinicalDecision: \" Not for clinical decision making\",\n    noDataStorage: \"No Patient Data Storage\",\n    dataProcessedLocally: \" All data processed locally\",\n    clinicalAdvisory: \"Clinical Advisory\",\n    supervision: \"Under supervision of Prof. Christian Förch & Dr. Lovepreet Kalra\",\n    contact: \"Contact\",\n    accessCode: \"Research Access Code\",\n    accessCodePlaceholder: \"Enter research access code\",\n    accessResearchBtn: \"Access Research System\",\n    regulatoryStatus: \"Regulatory Status\",\n    protoTypeOnly: \"Research prototype - CE certification pending\",\n    dataProtection: \"Data Protection\",\n    gdprComplaint: \"GDPR compliant - local processing only\",\n    clinicalOversight: \"Clinical Oversight\",\n  },\n\n  de: {\n    // Header\n    appTitle: \"iGFAP\",\n    emergencyBadge: \"Notfall-Tool\",\n    helpButton: \"Hilfe und Anweisungen\",\n    darkModeButton: \"Dunklen Modus umschalten\",\n    languageToggle: \"Sprache\",\n\n    // Progress\n    step1: \"Erstbeurteilung\",\n    step2: \"Datenerhebung\",\n    step3: \"Ergebnisse\",\n\n    // Module titles\n    comaModuleTitle: \"Koma-Modul\",\n    limitedDataModuleTitle: \"Begrenzte Daten Modul\",\n    fullStrokeModuleTitle: \"Vollständiges Schlaganfall-Modul\",\n\n    // Triage 1\n    triage1Title: \"Patientenbeurteilung\",\n    triage1Question: \"Ist der Patient komatös?\",\n    triage1Help: \"Glasgow Coma Scale < 9\",\n    triage1Yes: \"JA - Komatös\",\n    triage1No: \"NEIN - Bei Bewusstsein\",\n\n    // Triage 2\n    triage2Title: \"Untersuchungsfähigkeit\",\n    triage2Question: \"Kann der Patient zuverlässig untersucht werden?\",\n    triage2Help: \"Patient ist nicht aphasisch, verwirrt oder unkooperativ\",\n    triage2Yes: \"JA - Vollständige Untersuchung möglich\",\n    triage2No: \"NEIN - Nur begrenzte Untersuchung\",\n\n    // Forms\n    ageLabel: \"Alter (Jahre)\",\n    ageHelp: \"Patientenalter in Jahren\",\n    systolicLabel: \"Systolischer RR (mmHg)\",\n    systolicHelp: \"Systolischer Blutdruck\",\n    diastolicLabel: \"Diastolischer RR (mmHg)\",\n    diastolicHelp: \"Diastolischer Blutdruck\",\n    gfapLabel: \"GFAP-Wert (pg/mL)\",\n    gfapHelp: \"GFAP-Biomarker-Wert\",\n    fastEdLabel: \"FAST-ED-Score\",\n    fastEdHelp: \"FAST-ED-Bewertungsscore (0-9)\",\n\n    // Checkboxes\n    headacheLabel: \"Kopfschmerzen\",\n    vigilanzLabel: \"Bewusstseinstrübung\",\n    armPareseLabel: \"Armschwäche\",\n    beinPareseLabel: \"Beinschwäche\",\n    eyeDeviationLabel: \"Blickdeviation\",\n    atrialFibLabel: \"Vorhofflimmern\",\n    anticoagLabel: \"Antikoaguliert (NOAK)\",\n    antiplateletsLabel: \"Thrombozytenaggregationshemmer\",\n\n    // Buttons\n    analyzeButton: \"Analysieren\",\n    analyzing: \"Analysiere...\",\n    printResults: \"Ergebnisse drucken\",\n    newAssessment: \"Neue Bewertung starten\",\n    startOver: \"Von vorn beginnen\",\n    goBack: \"Zurück\",\n    goHome: \"Zur Startseite\",\n\n    // Form sections\n    basicInformation: \"Grundinformationen\",\n    biomarkersScores: \"Biomarker & Scores\",\n    clinicalSymptoms: \"Klinische Symptome\",\n    medicalHistory: \"Anamnese\",\n\n    // Form labels with units\n    ageYearsLabel: \"Alter (Jahre)\",\n    systolicBpLabel: \"Systolischer RR (mmHg)\",\n    diastolicBpLabel: \"Diastolischer RR (mmHg)\",\n    gfapValueLabel: \"GFAP-Wert (pg/mL)\",\n    fastEdScoreLabel: \"FAST-ED-Score\",\n\n    // Help text\n    ageYearsHelp: \"Patientenalter in Jahren\",\n    systolicBpHelp: \"Normal: 90-140 mmHg\",\n    diastolicBpHelp: \"Normal: 60-90 mmHg\",\n    gfapTooltip: \"Hirnverletzungs-Biomarker\",\n    gfapTooltipLong: \"Glial Fibrillary Acidic Protein - Hirnverletzungs-Biomarker\",\n    gfapRange: \"Bereich: {min} - {max} pg/mL\",\n    fastEdTooltip: \"0-9 Skala für LVO-Screening\",\n\n    // Module buttons\n    analyzeIchRisk: \"ICB-Risiko analysieren\",\n    analyzeStrokeRisk: \"Schlaganfall-Risiko analysieren\",\n\n    // Alert messages\n    criticalPatient: \"Kritischer Patient\",\n    comaAlert: \"Patient ist komatös (GCS < 9). Schnelle Beurteilung erforderlich.\",\n    vigilanceReduction: \"Vigilanzminderung (Verminderte Wachheit)\",\n\n    // Additional symptom labels\n    armParesis: \"Armparese\",\n    legParesis: \"Beinparese\",\n    eyeDeviation: \"Blickdeviation\",\n    atrialFibrillation: \"Vorhofflimmern\",\n    onNoacDoac: \"NOAK/DOAK-Therapie\",\n    onAntiplatelets: \"Thrombozytenaggregationshemmer\",\n\n    // Results\n    resultsTitle: \"Bewertungsergebnisse\",\n    bleedingRiskAssessment: \"Blutungsrisiko-Bewertung\",\n    ichProbability: \"ICB-Risiko\",\n    lvoProbability: \"LVO-Risiko\",\n    lvoMayBePossible: \"Großgefäßverschluss möglich - weitere Abklärung empfohlen\",\n    riskFactorsTitle: \"Hauptrisikofaktoren\",\n    increasingRisk: \"Risikoerhöhend\",\n    decreasingRisk: \"Risikomindernd\",\n    noFactors: \"Keine Faktoren\",\n    riskLevel: \"Risikostufe\",\n    lowRisk: \"Niedriges Risiko\",\n    mediumRisk: \"Mittleres Risiko\",\n    highRisk: \"Hohes Risiko\",\n\n    // Risk levels\n    riskLow: \"Niedrig\",\n    riskMedium: \"Mittel\",\n    riskHigh: \"Hoch\",\n\n    // Risk Factors Analysis\n    riskFactorsAnalysis: \"Risikofaktoren\",\n    contributingFactors: \"Beitragende Faktoren zur Bewertung\",\n    riskFactors: \"Risikofaktoren\",\n    increaseRisk: \"ERHÖHEN\",\n    decreaseRisk: \"VERRINGERN\",\n    noPositiveFactors: \"Keine erhöhenden Faktoren\",\n    noNegativeFactors: \"Keine verringernden Faktoren\",\n    ichRiskFactors: \"ICB-Risikofaktoren\",\n    lvoRiskFactors: \"LVO-Risikofaktoren\",\n\n    // Critical Alert\n    criticalAlertTitle: \"KRITISCHES RISIKO ERKANNT\",\n    criticalAlertMessage: \"Hohe Wahrscheinlichkeit einer intrazerebralen Blutung erkannt.\",\n    immediateActionsRequired: \"Sofortige Maßnahmen erforderlich\",\n    initiateStrokeProtocol: \"Schlaganfall-Protokoll sofort einleiten\",\n    urgentCtImaging: \"Dringende CT-Bildgebung erforderlich\",\n    considerBpManagement: \"Blutdruckmanagement erwägen\",\n    prepareNeurosurgicalConsult: \"Neurochirurgische Konsultation vorbereiten\",\n\n    // Help Modal\n    helpTitle: \"Kurzreferenzleitfaden\",\n    gcsTitle: \"Glasgow Coma Scale (GCS)\",\n    gcsLow: \"GCS < 9: Komatöser Patient - Koma-Modul verwenden\",\n    gcsMod: \"GCS 8-12: Mäßige Beeinträchtigung\",\n    gcsHigh: \"GCS 13-15: Leichte Beeinträchtigung\",\n    fastEdTitle: \"FAST-ED-Score-Komponenten\",\n    fastEdFacial: \"Faziale Parese: 0-1 Punkte\",\n    fastEdArm: \"Armschwäche: 0-2 Punkte\",\n    fastEdSpeech: \"Sprachveränderungen: 0-2 Punkte\",\n    fastEdTime: \"Zeit: Kritischer Faktor\",\n    fastEdEye: \"Blickdeviation: 0-2 Punkte\",\n    fastEdDenial: \"Verneinung/Neglect: 0-2 Punkte\",\n    criticalValuesTitle: \"Kritische Werte\",\n    criticalBp: \"Systolischer RR > 180: Erhöhtes ICB-Risiko\",\n    criticalGfap: \"GFAP > 500 pg/mL: Signifikanter Marker\",\n    criticalFastEd: \"FAST-ED ≥ 4: LVO in Betracht ziehen\",\n\n    // FAST-ED Calculator Modal\n    fastEdCalculatorTitle: \"FAST-ED-Score-Rechner\",\n    fastEdCalculatorSubtitle: \"Klicken Sie, um FAST-ED-Score-Komponenten zu berechnen\",\n    facialPalsyTitle: \"Fazialisparese\",\n    facialPalsyNormal: \"Normal (0)\",\n    facialPalsyMild: \"Vorhanden (1)\",\n    armWeaknessTitle: \"Armschwäche\",\n    armWeaknessNormal: \"Normal (0)\",\n    armWeaknessMild: \"Leichte Schwäche oder Absinken (1)\",\n    armWeaknessSevere: \"Schwere Schwäche oder fällt sofort ab (2)\",\n    speechChangesTitle: \"Sprachstörungen\",\n    speechChangesNormal: \"Normal (0)\",\n    speechChangesMild: \"Leichte Dysarthrie oder Aphasie (1)\",\n    speechChangesSevere: \"Schwere Dysarthrie oder Aphasie (2)\",\n    eyeDeviationTitle: \"Blickdeviation\",\n    eyeDeviationNormal: \"Normal (0)\",\n    eyeDeviationPartial: \"Partielle Blickdeviation (1)\",\n    eyeDeviationForced: \"Forcierte Blickdeviation (2)\",\n    denialNeglectTitle: \"Verneinung/Neglect\",\n    denialNeglectNormal: \"Normal (0)\",\n    denialNeglectPartial: \"Partieller Neglect (1)\",\n    denialNeglectComplete: \"Kompletter Neglect (2)\",\n    totalScoreTitle: \"Gesamt-FAST-ED-Score\",\n    riskLevel: \"Risikostufe\",\n    riskLevelLow: \"NIEDRIG (Score <4)\",\n    riskLevelHigh: \"HOCH (Score ≥4 - LVO erwägen)\",\n    applyScore: \"Score Anwenden\",\n    cancel: \"Abbrechen\",\n\n    // Results Screen Enhancements\n    riskAnalysis: \"Risikoanalyse\",\n    riskAnalysisSubtitle: \"Klinische Faktoren in dieser Bewertung\",\n    contributingFactors: \"Beitragende Faktoren\",\n    factorsShown: \"angezeigt\",\n    positiveFactors: \"Positive Faktoren\",\n    negativeFactors: \"Negative Faktoren\",\n    clinicalInformation: \"Klinische Informationen\",\n    clinicalRecommendations: \"Klinische Empfehlungen\",\n    clinicalRec1: \"Sofortige Bildgebung erwägen bei hohem ICB-Risiko\",\n    clinicalRec2: \"Stroke-Team aktivieren bei LVO-Score ≥ 50%\",\n    clinicalRec3: \"Blutdruck engmaschig überwachen\",\n    clinicalRec4: \"Alle Befunde gründlich dokumentieren\",\n    noDriverData: \"Keine Treiberdaten verfügbar\",\n    driverAnalysisUnavailable: \"Treiberanalyse nicht verfügbar\",\n    driverInfoNotAvailable: \"Treiberinformationen von diesem Vorhersagemodell nicht verfügbar\",\n    driverAnalysisNotAvailable: \"Treiberanalyse für diese Vorhersage nicht verfügbar\",\n    lvoNotPossible: \"LVO-Bewertung mit begrenzten Daten nicht möglich\",\n    fullExamRequired: \"Vollständige neurologische Untersuchung für LVO-Screening erforderlich\",\n    limitedAssessment: \"Begrenzte Bewertung\",\n\n    // Disclaimer\n    disclaimer: \"Klinischer Haftungsausschluss\",\n    disclaimerText:\n      \"Dieses Tool dient nur zur klinischen Entscheidungsunterstützung. Verwenden Sie immer klinisches Urteilsvermögen und befolgen Sie lokale Protokolle. Kein Ersatz für ärztliche Beurteilung.\",\n    importantNote: \"Wichtig\",\n    importantText:\n      \"Diese Ergebnisse dienen nur zur klinischen Entscheidungsunterstützung. Verwenden Sie immer klinisches Urteilsvermögen und befolgen Sie institutionelle Protokolle.\",\n\n    // ICH Volume and Mortality\n    predictedMortality: \"Vorhergesagte 30-Tage-Mortalität\",\n    ichVolumeLabel: \"ICB-Volumen\",\n    references: \"Referenzen\",\n\n    // Input Summary\n    inputSummaryTitle: \"Eingabezusammenfassung\",\n    inputSummarySubtitle: \"Für diese Analyse verwendete Werte\",\n\n    // Footer\n    privacyLink: \"Datenschutzrichtlinie\",\n    disclaimerLink: \"Medizinischer Haftungsausschluss\",\n    versionLink: \"Version 2.1.0 - Research Preview\",\n\n    // Privacy and disclaimers\n    privacyPolicy:\n      \"Datenschutzrichtlinie: Dieses Tool verarbeitet Daten lokal. Keine Patientendaten werden gespeichert oder übertragen.\",\n    medicalDisclaimer:\n      \"Medizinischer Haftungsausschluss: Dieses Tool dient nur zur klinischen Entscheidungsunterstützung. Verwenden Sie immer klinisches Urteilsvermögen und befolgen Sie lokale Protokolle.\",\n\n    // Error messages\n    networkError:\n      \"Netzwerkfehler - bitte überprüfen Sie Ihre Verbindung und versuchen Sie es erneut\",\n    requestTimeout: \"Anfrage-Timeout - bitte versuchen Sie es erneut\",\n    apiError: \"Ergebnisse konnten nicht abgerufen werden\",\n    validationError: \"Bitte überprüfen Sie Ihre Eingabewerte\",\n\n    // Session\n    sessionTimeout: \"Ihre Sitzung war 30 Minuten lang inaktiv. Möchten Sie fortfahren?\",\n    unsavedData: \"Sie haben ungespeicherte Daten. Sind Sie sicher, dass Sie verlassen möchten?\",\n\n    // Stroke Centers\n    nearestCentersTitle: \"Nächstgelegene Schlaganfall-Zentren\",\n    useCurrentLocation: \"Aktuellen Standort verwenden\",\n    enterLocationPlaceholder: \"Stadt oder Adresse eingeben...\",\n    enterManually: \"Standort manuell eingeben\",\n    search: \"Suchen\",\n    yourLocation: \"Ihr Standort\",\n    recommendedCenters: \"Empfohlene Zentren\",\n    alternativeCenters: \"Alternative Zentren\",\n    noCentersFound: \"Keine Schlaganfall-Zentren in diesem Bereich gefunden\",\n    gettingLocation: \"Standort wird ermittelt\",\n    searchingLocation: \"Standort wird gesucht\",\n    locationError: \"Standort konnte nicht ermittelt werden\",\n    locationPermissionDenied:\n      \"Standortzugriff verweigert. Bitte erlauben Sie Standortzugriff und versuchen Sie es erneut.\",\n    locationUnavailable: \"Standortinformationen sind nicht verfügbar\",\n    locationTimeout: \"Standortanfrage ist abgelaufen\",\n    geolocationNotSupported: \"Geolokalisierung wird von diesem Browser nicht unterstützt\",\n    geocodingNotImplemented:\n      \"Standortsuche nicht verfügbar. Bitte verwenden Sie GPS oder geben Sie Koordinaten manuell ein.\",\n    tryManualEntry: \"Versuchen Sie, Ihren Standort manuell einzugeben oder GPS zu verwenden.\",\n    distanceNote:\n      \"Entfernungen werden als Luftlinie berechnet. Tatsächliche Fahrzeiten können variieren.\",\n    travelTimeNote:\n      \"Fahrzeiten berechnet für Rettungsfahrzeuge mit Sondersignalen und Vorfahrtsberechtigung.\",\n    calculatingTravelTimes: \"Fahrzeiten werden berechnet\",\n    minutes: \"Min\",\n    poweredByOrs: \"Fahrzeiten bereitgestellt von OpenRoute Service\",\n\n    // Center Types and Services\n    comprehensiveCenter: \"Überregionales Schlaganfall-Zentrum\",\n    primaryCenter: \"Regionales Schlaganfall-Zentrum\",\n    telemetryCenter: \"Telemedizin-Zentrum\",\n    thrombectomy: \"Thrombektomie\",\n    neurosurgery: \"Neurochirurgie\",\n    icu: \"Intensivstation\",\n    telemedicine: \"Telemedizin\",\n    stroke_unit: \"Stroke Unit\",\n\n    // Actions\n    call: \"Anrufen\",\n    directions: \"Wegbeschreibung\",\n    emergency: \"Notfall\",\n    certified: \"Zertifiziert\",\n\n    // Prerequisites Modal\n    prerequisitesTitle: \"Voraussetzungen für Schlaganfall-Triage\",\n    prerequisitesIntro: \"Bitte bestätigen Sie, dass alle folgenden Voraussetzungen erfüllt sind:\",\n    prerequisitesWarning: \"Alle Voraussetzungen müssen erfüllt sein, um fortzufahren\",\n    continue: \"Weiter\",\n    acute_deficit: \"Akutes (schweres) neurologisches Defizit vorhanden\",\n    symptom_onset: \"Symptombeginn innerhalb 6h\",\n    no_preexisting: \"Keine vorbestehende schwere neurologische Defizite\",\n    no_trauma: \"Kein Schädelhirntrauma vorhanden\",\n\n    // Differential Diagnoses for Stroke Modules\n    differentialDiagnoses: \"Differentialdiagnosen\",\n    reconfirmTimeWindow: \"Bitte Zeitfenster rekonfirmieren!\",\n    unclearTimeWindow:\n      \"Bei unklarem/erweitertem Zeitfenster ist auch ein beginnend demarkierter Hirninfarkt möglich\",\n    rareDiagnoses: \"Seltene Diagnosen wie ein Glioblastom sind auch möglich\",\n\n    // login Screen\n    researchAccessRequired: \"Forschungszugang erforderlich\",\n    researchrPreviewValidation:\n      \"Dies ist eine Forschungsvorschau des iGFAP Stroke Triage Assistant zur klinischen Validierung.\",\n    importantNotice: \"Wichtiger Hinweis\",\n    researchUseOnly: \"Nur für Forschungszwecke\",\n    noClinicalDecision: \" Nicht für klinische Entscheidungen\",\n    noDataStorage: \"Keine Speicherung von Patientendaten\",\n    dataProcessedLocally: \"Alle Daten werden lokal verarbeitet\",\n    clinicalAdvisory: \"Klinischer Hinweis\",\n    supervision: \"Unter Aufsicht von Prof. Christian Förch und Dr. Lovepreet Kalra\",\n    contact: \"Kontakt\",\n    accessCode: \"Forschungszugangscode\",\n    accessCodePlaceholder: \"Forschungszugangscode eingeben\",\n    accessResearchBtn: \"Forschungssystem zugreifen\",\n    regulatoryStatus: \"Regulatorischer Status\",\n    protoTypeOnly: \"Research prototype - CE certification pending\",\n    dataProtection: \"Daten- und Datenschutz\",\n    gdprComplaint: \"DSGVO-konform - nur lokale Verarbeitung\",\n    clinicalOversight: \"Klinische Aufsicht\",\n  },\n};\n","// Internationalization utilities for the Stroke Triage Assistant\n\nimport { messages } from \"./messages.js\";\n\nclass I18n {\n  constructor() {\n    this.supportedLanguages = [\"en\", \"de\"];\n    this.currentLanguage = this.detectLanguage();\n  }\n\n  // Detect browser language and default to appropriate language\n  detectLanguage() {\n    // Check if language is already set in localStorage\n    const savedLanguage = localStorage.getItem(\"language\");\n    if (savedLanguage && this.supportedLanguages.includes(savedLanguage)) {\n      return savedLanguage;\n    }\n\n    // Detect browser language\n    const browserLang = navigator.language || navigator.userLanguage;\n    const langCode = browserLang.substring(0, 2).toLowerCase();\n\n    // Default to German if browser language is German, otherwise English\n    return langCode === \"de\" ? \"de\" : \"en\";\n  }\n\n  // Get current language\n  getCurrentLanguage() {\n    return this.currentLanguage;\n  }\n\n  // Set language and save to localStorage\n  setLanguage(language) {\n    if (this.supportedLanguages.includes(language)) {\n      this.currentLanguage = language;\n      localStorage.setItem(\"language\", language);\n\n      // Dispatch custom event for language change\n      window.dispatchEvent(\n        new CustomEvent(\"languageChanged\", {\n          detail: { language },\n        })\n      );\n\n      return true;\n    }\n    return false;\n  }\n\n  // Get supported languages\n  getSupportedLanguages() {\n    return [...this.supportedLanguages];\n  }\n\n  // Translate a message key\n  t(key) {\n    const currentMessages = messages[this.currentLanguage] || messages.en;\n    return currentMessages[key] || key;\n  }\n\n  // Toggle between English and German\n  toggleLanguage() {\n    const newLanguage = this.currentLanguage === \"en\" ? \"de\" : \"en\";\n    return this.setLanguage(newLanguage);\n  }\n\n  // Get language display name\n  getLanguageDisplayName(lang = null) {\n    const language = lang || this.currentLanguage;\n    const displayNames = {\n      en: \"English\",\n      de: \"Deutsch\",\n    };\n    return displayNames[language] || language;\n  }\n\n  // Format date/time according to current locale\n  formatDateTime(date) {\n    const locale = this.currentLanguage === \"de\" ? \"de-DE\" : \"en-US\";\n    return new Intl.DateTimeFormat(locale, {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n    }).format(date);\n  }\n\n  // Format time only according to current locale\n  formatTime(date) {\n    const locale = this.currentLanguage === \"de\" ? \"de-DE\" : \"en-US\";\n    return new Intl.DateTimeFormat(locale, {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n    }).format(date);\n  }\n}\n\n// Create singleton instance\nconst i18n = new I18n();\n\n// Export both the instance and the class\nexport { i18n, I18n };\n\n// Export convenience function for translation\nexport const t = key => i18n.t(key);\n","import { t } from \"../../localization/i18n.js\";\nimport { navigate } from \"../../logic/handlers.js\";\nimport { safeSetInnerHTML } from \"../../security/html-sanitizer.js\";\n\n/**\n * Prerequisites checklist items\n */\nconst getPrerequisites = () => [\n  { id: \"acute_deficit\", checked: false },\n  { id: \"symptom_onset\", checked: false },\n  { id: \"no_preexisting\", checked: false },\n  { id: \"no_trauma\", checked: false },\n];\n\n/**\n * Render prerequisites modal\n * Tailwind redesigned version (light/dark theme compatible)\n */\nexport function renderPrerequisitesModal() {\n  const prerequisites = getPrerequisites();\n\n  return `\n    <div id=\"prerequisitesModal\" class=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm\">\n      <div class=\"w-full max-w-md bg-white dark:bg-gray-800 rounded-2xl shadow-2xl border border-gray-200 dark:border-gray-700 overflow-hidden animate-fadeIn\">\n        \n        <!-- Header -->\n        <div class=\"flex items-center justify-between px-6 py-4 border-b border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-900\">\n          <h2 class=\"text-lg font-semibold text-gray-800 dark:text-gray-100\">${t(\"prerequisitesTitle\")}</h2>\n          <button id=\"closePrerequisites\" class=\"text-gray-500 hover:text-gray-800 dark:hover:text-white text-xl leading-none\">&times;</button>\n        </div>\n\n        <!-- Body -->\n        <div class=\"px-6 py-5 space-y-5\">\n          <p class=\"text-sm text-gray-700 dark:text-gray-300\">${t(\"prerequisitesIntro\")}</p>\n          \n          <div class=\"space-y-4\">\n            ${prerequisites\n    .map(\n      item => `\n              <label class=\"flex items-center justify-between bg-gray-50 dark:bg-gray-900 p-3 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 hover:shadow-md transition\">\n                <span class=\"text-gray-800 dark:text-gray-100 font-medium\">${t(item.id)}</span>\n                <input type=\"checkbox\" id=\"${item.id}\" class=\"toggle-input w-5 h-5 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500\">\n              </label>\n            `\n    )\n    .join(\"\")}\n          </div>\n\n          <div id=\"prerequisitesWarning\" class=\"hidden items-center gap-2 text-red-600 dark:text-red-400 bg-red-50 dark:bg-red-900/30 border border-red-200 dark:border-red-800 rounded-xl p-3 text-sm\">\n            <span>⚠️</span>\n            <span>${t(\"prerequisitesWarning\")}</span>\n          </div>\n        </div>\n\n        <!-- Footer -->\n        <div class=\"flex justify-end gap-3 px-6 py-4 border-t border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-900\">\n          <button id=\"cancelPrerequisites\" class=\"px-4 py-2 text-sm font-medium rounded-lg border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-700 transition\">\n            ${t(\"cancel\")}\n          </button>\n          <button id=\"confirmPrerequisites\" class=\"px-4 py-2 text-sm font-semibold rounded-lg bg-blue-600 hover:bg-blue-700 text-white shadow-md transition\">\n            ${t(\"continue\")}\n          </button>\n        </div>\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Initialize prerequisites modal event handlers\n */\nexport function initPrerequisitesModal() {\n  const modal = document.getElementById(\"prerequisitesModal\");\n  if (!modal) return;\n\n  const closeBtn = document.getElementById(\"closePrerequisites\");\n  const cancelBtn = document.getElementById(\"cancelPrerequisites\");\n  const confirmBtn = document.getElementById(\"confirmPrerequisites\");\n\n  const closeModal = () => {\n    modal.remove();\n    navigate(\"welcome\");\n  };\n\n  closeBtn?.addEventListener(\"click\", closeModal);\n  cancelBtn?.addEventListener(\"click\", closeModal);\n\n  confirmBtn?.addEventListener(\"click\", e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const checkboxes = modal.querySelectorAll(\".toggle-input\");\n    const allChecked = Array.from(checkboxes).every(cb => cb.checked);\n\n    if (allChecked) {\n      modal.remove();\n      navigate(\"triage2\");\n    } else {\n      const warning = document.getElementById(\"prerequisitesWarning\");\n      if (warning) {\n        warning.classList.remove(\"hidden\");\n        warning.classList.add(\"animate-shake\");\n        setTimeout(() => warning.classList.remove(\"animate-shake\"), 500);\n      }\n    }\n  });\n\n  const checkboxes = modal.querySelectorAll(\".toggle-input\");\n  checkboxes.forEach(checkbox => {\n    checkbox.addEventListener(\"change\", () => {\n      const allChecked = Array.from(checkboxes).every(cb => cb.checked);\n      const warning = document.getElementById(\"prerequisitesWarning\");\n      if (allChecked && warning) warning.classList.add(\"hidden\");\n    });\n  });\n}\n\n/**\n * Show prerequisites modal\n */\nexport function showPrerequisitesModal() {\n  const existingModal = document.getElementById(\"prerequisitesModal\");\n  if (existingModal) existingModal.remove();\n\n  const modalElement = document.createElement(\"div\");\n  try {\n    safeSetInnerHTML(modalElement, renderPrerequisitesModal());\n    const modal = modalElement.firstElementChild;\n    if (!modal) throw new Error(\"Failed to create modal element\");\n    document.body.appendChild(modal);\n  } catch (error) {\n    console.error(\"Prerequisites modal sanitization failed:\", error);\n    const fallbackModal = document.createElement(\"div\");\n    fallbackModal.className =\n      \"fixed inset-0 flex items-center justify-center bg-black/50 text-white\";\n    fallbackModal.textContent = \"Failed to load prerequisites modal. Please refresh.\";\n    document.body.appendChild(fallbackModal);\n    return;\n  }\n\n  initPrerequisitesModal();\n}\n","import { store } from \"../state/store.js\";\nimport { predictComaIch, predictLimitedIch, predictFullStroke, APIError } from \"../api/client.js\";\nimport { t } from \"../localization/i18n.js\";\nimport { showPrerequisitesModal } from \"../ui/components/prerequisites-modal.js\";\nimport { safeSetInnerHTML } from \"../security/html-sanitizer.js\";\nimport { DEV_CONFIG } from \"../config.js\";\n\nimport { validateForm, showValidationErrors } from \"./validate.js\";\n\nexport function handleTriage1(isComatose) {\n  store.logEvent(\"triage1_answer\", { comatose: isComatose });\n\n  if (isComatose) {\n    navigate(\"coma\");\n  } else {\n    // Show prerequisites modal for conscious patients\n    showPrerequisitesModal();\n  }\n}\n\nexport function handleTriage2(isExaminable) {\n  store.logEvent(\"triage2_answer\", { examinable: isExaminable });\n  const nextScreen = isExaminable ? \"full\" : \"limited\";\n  navigate(nextScreen);\n}\n\nexport function navigate(screen) {\n  store.logEvent(\"navigate\", {\n    from: store.getState().currentScreen,\n    to: screen,\n  });\n  store.navigate(screen);\n  window.scrollTo(0, 0);\n}\n\nexport function reset() {\n  if (store.hasUnsavedData()) {\n    if (!confirm(\"Are you sure you want to start over? All entered data will be lost.\")) {\n      return;\n    }\n  }\n  store.logEvent(\"reset\");\n  store.reset();\n}\n\nexport function goBack() {\n  const success = store.goBack();\n\n  if (success) {\n    store.logEvent(\"navigate_back\");\n    window.scrollTo(0, 0);\n  } else {\n    goHome();\n  }\n}\n\nexport function goHome() {\n  store.logEvent(\"navigate_home\");\n  store.goHome();\n  window.scrollTo(0, 0);\n}\n\nexport async function handleSubmit(e, container) {\n  e.preventDefault();\n  const form = e.target;\n  const { module } = form.dataset;\n\n  // Validate form\n  const validation = validateForm(form);\n  if (!validation.isValid) {\n    showValidationErrors(container, validation.validationErrors);\n    try {\n      // Focus first invalid field and announce summary for screen readers\n      const firstErrorName = Object.keys(validation.validationErrors)[0];\n      if (firstErrorName && form.elements[firstErrorName]) {\n        const el = form.elements[firstErrorName];\n        el.focus({ preventScroll: true });\n        el.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n      }\n      const sr = document.createElement(\"div\");\n      sr.className = \"sr-only\";\n      sr.setAttribute(\"role\", \"status\");\n      sr.setAttribute(\"aria-live\", \"polite\");\n      const errorCount = Object.keys(validation.validationErrors).length;\n      sr.textContent = `${errorCount} field${errorCount === 1 ? \"\" : \"s\"} need attention.`;\n      document.body.appendChild(sr);\n      setTimeout(() => sr.remove(), 1200);\n    } catch {}\n    return;\n  }\n\n  // Collect inputs - handle all form elements including unchecked checkboxes\n  const inputs = {};\n\n  // Process all form elements to ensure checkboxes are included\n  Array.from(form.elements).forEach(element => {\n    if (element.name) {\n      if (element.type === \"checkbox\") {\n        inputs[element.name] = element.checked;\n      } else if (element.type === \"number\") {\n        const n = parseFloat(element.value);\n        inputs[element.name] = isNaN(n) ? 0 : n;\n      } else if (element.type === \"hidden\") {\n        // Handle hidden fields (like armparese from FAST-ED)\n        if (element.name === \"armparese\") {\n          inputs[element.name] = element.value === \"true\";\n        } else {\n          inputs[element.name] = element.value;\n        }\n      } else {\n        inputs[element.name] = element.value;\n      }\n    }\n  });\n\n  // Store form data\n  store.setFormData(module, inputs);\n\n  // Show loading state\n  const button = form.querySelector(\"button[type=submit]\");\n  const originalContent = button ? button.innerHTML : \"\";\n  if (button) {\n    button.disabled = true;\n    try {\n      safeSetInnerHTML(button, `<span class=\"loading-spinner\"></span> ${t(\"analyzing\")}`);\n    } catch (error) {\n      console.error(\"Button loading state sanitization failed:\", error);\n      button.textContent = t(\"analyzing\") || \"Analyzing...\";\n    }\n  }\n\n  try {\n    console.log(\"[Submit] Module:\", module);\n    console.log(\"[Submit] Inputs:\", inputs);\n    // Run models based on module\n    let results;\n\n    switch (module) {\n      case \"coma\":\n        const comaResult = await predictComaIch(inputs);\n        results = {\n          ich: {\n            ...comaResult,\n            module: \"Coma\",\n          },\n          lvo: null,\n        };\n        break;\n\n      case \"limited\":\n        const limitedResult = await predictLimitedIch(inputs);\n        results = {\n          ich: {\n            ...limitedResult,\n            module: \"Limited\",\n          },\n          lvo: { notPossible: true },\n        };\n        break;\n\n      case \"full\":\n        results = await predictFullStroke(inputs);\n        console.log(\"[Submit] Full results:\", {\n          ich: !!results?.ich,\n          lvo: !!results?.lvo,\n          ichP: results?.ich?.probability,\n          lvoP: results?.lvo?.probability,\n        });\n        // Validate results structure\n        if (!results || !results.ich) {\n          throw new Error(\"Invalid response structure from Full Stroke API\");\n        }\n        // Fix ICH probability mapping for Full Stroke\n        if (results.ich && !results.ich.probability && results.ich.ich_probability !== undefined) {\n          results.ich.probability = results.ich.ich_probability;\n          console.log(\"[Submit] Fixed ICH probability for Full Stroke:\", results.ich.probability);\n        }\n        // Ensure module property is set\n        if (results.ich && !results.ich.module) {\n          results.ich.module = \"Full Stroke\";\n        }\n        if (results.lvo && !results.lvo.module) {\n          results.lvo.module = \"Full Stroke\";\n        }\n        break;\n\n      default:\n        throw new Error(`Unknown module: ${module}`);\n    }\n\n    console.log(\"[Submit] Setting results in store:\", results);\n    store.setResults(results);\n    store.logEvent(\"models_complete\", { module, results });\n\n    // Verify results were stored\n    const storedState = store.getState();\n    console.log(\"[Submit] State after setResults:\", {\n      hasResults: !!storedState.results,\n      currentScreen: storedState.currentScreen,\n    });\n\n    console.log(\"[Submit] Navigating to results...\");\n    navigate(\"results\");\n    // Visual confirmation that results screen loaded\n    showToast(\"✅ Results loaded\", 2000);\n    // Double-check navigation and force if needed\n    setTimeout(() => {\n      try {\n        const cs = store.getState().currentScreen;\n        console.log(\"[Submit] currentScreen after navigate:\", cs);\n        if (cs !== \"results\") {\n          store.navigate(\"results\");\n          showToast(\"🔁 Forced results view\", 1500);\n        }\n      } catch {}\n    }, 0);\n  } catch (error) {\n    // Error running models - handle gracefully, with Full module fallback in preview\n    const isLocalPreview =\n      [\"localhost\", \"127.0.0.1\", \"0.0.0.0\"].includes(window.location.hostname) &&\n      !(import.meta && import.meta.env && import.meta.env.DEV);\n    if (module === \"full\" && isLocalPreview) {\n      try {\n        const m = DEV_CONFIG.mockApiResponses.full_stroke;\n        const ich = m.ich_prediction || {};\n        const lvo = m.lvo_prediction || {};\n        const pIch = parseFloat(ich.probability) || 0;\n        const pLvo = parseFloat(lvo.probability) || 0;\n        const fallbackResults = {\n          ich: {\n            probability: pIch > 1 ? pIch / 100 : pIch,\n            drivers: ich.drivers || null,\n            confidence: parseFloat(ich.confidence) || 0.85,\n            module: \"Full Stroke\",\n          },\n          lvo: {\n            probability: pLvo > 1 ? pLvo / 100 : pLvo,\n            drivers: lvo.drivers || null,\n            confidence: parseFloat(lvo.confidence) || 0.85,\n            module: \"Full Stroke\",\n          },\n        };\n        store.setResults(fallbackResults);\n        store.logEvent(\"models_complete_fallback\", { module, reason: error.message });\n        navigate(\"results\");\n        return;\n      } catch (e) {\n        // Continue to show error below\n      }\n    }\n\n    let errorMessage = \"An error occurred during analysis. Please try again.\";\n    if (error instanceof APIError) {\n      errorMessage = error.message;\n    }\n\n    showError(container, errorMessage);\n\n    if (button) {\n      button.disabled = false;\n      try {\n        safeSetInnerHTML(button, originalContent);\n      } catch (e2) {\n        console.error(\"Button restore sanitization failed:\", e2);\n        button.textContent = \"Submit\";\n      }\n    }\n  }\n}\n\nfunction showError(container, message) {\n  // Remove existing error alerts\n  container.querySelectorAll(\".critical-alert\").forEach(alert => {\n    if (alert.querySelector(\"h4\")?.textContent?.includes(\"Error\")) {\n      alert.remove();\n    }\n  });\n\n  const alert = document.createElement(\"div\");\n  alert.className = \"critical-alert\";\n\n  // Create safe DOM structure without innerHTML to prevent XSS\n  const h4 = document.createElement(\"h4\");\n  const iconSpan = document.createElement(\"span\");\n  iconSpan.className = \"alert-icon\";\n  iconSpan.textContent = \"⚠️\";\n  h4.appendChild(iconSpan);\n  h4.appendChild(document.createTextNode(\" Error\"));\n\n  const p = document.createElement(\"p\");\n  p.textContent = message; // Safe text content only\n\n  alert.appendChild(h4);\n  alert.appendChild(p);\n\n  const containerDiv = container.querySelector(\".container\");\n  if (containerDiv) {\n    containerDiv.prepend(alert);\n  } else {\n    container.prepend(alert);\n  }\n\n  setTimeout(() => alert.remove(), 10000);\n}\n\n// Lightweight toast helper (overlays at top center)\nfunction showToast(message, duration = 2000) {\n  try {\n    const toast = document.createElement(\"div\");\n    toast.textContent = message;\n    toast.setAttribute(\"role\", \"status\");\n    toast.setAttribute(\"aria-live\", \"polite\");\n    toast.style.cssText = `\n      position: fixed;\n      top: 16px;\n      left: 50%;\n      transform: translateX(-50%);\n      background: #0066CC;\n      color: #fff;\n      padding: 10px 14px;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.2);\n      z-index: 10000;\n      font-size: 14px;\n      pointer-events: none;\n      opacity: 0;\n      transition: opacity 160ms ease;\n    `;\n    document.body.appendChild(toast);\n    requestAnimationFrame(() => {\n      toast.style.opacity = \"1\";\n    });\n    setTimeout(() => {\n      toast.style.opacity = \"0\";\n      setTimeout(() => toast.remove(), 200);\n    }, duration);\n  } catch {}\n}\n","/**\n * Comprehensive Error Handling Utilities\n * iGFAP Stroke Triage Assistant - Enterprise Error Management\n *\n * Provides robust error handling for production medical applications\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\n/**\n * Error severity levels\n */\nexport const ERROR_SEVERITY = {\n  LOW: \"low\",\n  MEDIUM: \"medium\",\n  HIGH: \"high\",\n  CRITICAL: \"critical\",\n};\n\n/**\n * Error categories for medical applications\n */\nexport const ERROR_CATEGORIES = {\n  NETWORK: \"network\",\n  VALIDATION: \"validation\",\n  AUTHENTICATION: \"authentication\",\n  CALCULATION: \"calculation\",\n  STORAGE: \"storage\",\n  RENDERING: \"rendering\",\n  MEDICAL: \"medical\",\n  SECURITY: \"security\",\n};\n\n/**\n * Medical error codes\n */\nexport const MEDICAL_ERROR_CODES = {\n  INVALID_VITAL_SIGNS: \"MED001\",\n  CALCULATION_FAILED: \"MED002\",\n  DATA_INCOMPLETE: \"MED003\",\n  PREDICTION_UNAVAILABLE: \"MED004\",\n  SAFETY_THRESHOLD_EXCEEDED: \"MED005\",\n};\n\n/**\n * Enhanced error class for medical applications\n */\nexport class MedicalError extends Error {\n  constructor(\n    message,\n    code,\n    category = ERROR_CATEGORIES.MEDICAL,\n    severity = ERROR_SEVERITY.MEDIUM\n  ) {\n    super(message);\n    this.name = \"MedicalError\";\n    this.code = code;\n    this.category = category;\n    this.severity = severity;\n    this.timestamp = new Date().toISOString();\n    this.context = {};\n  }\n\n  /**\n   * Add context to error\n   * @param {Object} context - Error context\n   * @returns {MedicalError} - This error instance\n   */\n  withContext(context) {\n    this.context = { ...this.context, ...context };\n    return this;\n  }\n\n  /**\n   * Get user-friendly error message\n   * @returns {string} - User-friendly message\n   */\n  getUserMessage() {\n    switch (this.category) {\n    case ERROR_CATEGORIES.NETWORK:\n      return \"Network connection issue. Please check your internet connection and try again.\";\n    case ERROR_CATEGORIES.VALIDATION:\n      return \"Please check your input data and try again.\";\n    case ERROR_CATEGORIES.AUTHENTICATION:\n      return \"Authentication failed. Please log in again.\";\n    case ERROR_CATEGORIES.CALCULATION:\n      return \"Unable to complete calculation. Please verify your input data.\";\n    case ERROR_CATEGORIES.MEDICAL:\n      return \"Medical calculation could not be completed. Please verify all clinical data.\";\n    default:\n      return \"An unexpected error occurred. Please try again.\";\n    }\n  }\n}\n\n/**\n * Global error handler for unhandled errors\n */\nclass GlobalErrorHandler {\n  constructor() {\n    this.errorQueue = [];\n    this.maxQueueSize = 100;\n    this.setupGlobalHandlers();\n  }\n\n  setupGlobalHandlers() {\n    // Handle unhandled promise rejections\n    window.addEventListener(\"unhandledrejection\", event => {\n      this.handleError(event.reason, ERROR_CATEGORIES.NETWORK, ERROR_SEVERITY.HIGH);\n      event.preventDefault();\n    });\n\n    // Handle uncaught errors\n    window.addEventListener(\"error\", event => {\n      this.handleError(event.error, ERROR_CATEGORIES.RENDERING, ERROR_SEVERITY.MEDIUM);\n    });\n  }\n\n  handleError(error, category = ERROR_CATEGORIES.NETWORK, severity = ERROR_SEVERITY.MEDIUM) {\n    const errorEntry = {\n      error: error instanceof Error ? error : new Error(String(error)),\n      category,\n      severity,\n      timestamp: new Date().toISOString(),\n      userAgent: navigator.userAgent.substring(0, 100),\n      url: window.location.href,\n    };\n\n    // Add to queue\n    this.errorQueue.push(errorEntry);\n    if (this.errorQueue.length > this.maxQueueSize) {\n      this.errorQueue.shift();\n    }\n\n    // Handle critical errors immediately\n    if (severity === ERROR_SEVERITY.CRITICAL) {\n      this.handleCriticalError(errorEntry);\n    }\n  }\n\n  handleCriticalError(errorEntry) {\n    // For critical medical errors, show immediate user notification\n    if (errorEntry.category === ERROR_CATEGORIES.MEDICAL) {\n      this.showMedicalAlert(errorEntry.error.message);\n    }\n  }\n\n  showMedicalAlert(message) {\n    // Create a critical medical alert\n    const alert = document.createElement(\"div\");\n    alert.className = \"critical-medical-alert\";\n    alert.style.cssText = `\n      position: fixed;\n      top: 20px;\n      left: 50%;\n      transform: translateX(-50%);\n      background: #ff4444;\n      color: white;\n      padding: 15px 20px;\n      border-radius: 8px;\n      z-index: 10000;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.3);\n      max-width: 90%;\n      text-align: center;\n    `;\n    alert.textContent = `⚠️ Medical Error: ${message}`;\n\n    document.body.appendChild(alert);\n\n    // Auto-remove after 10 seconds\n    setTimeout(() => {\n      if (document.body.contains(alert)) {\n        document.body.removeChild(alert);\n      }\n    }, 10000);\n  }\n\n  getErrorSummary() {\n    return {\n      totalErrors: this.errorQueue.length,\n      criticalErrors: this.errorQueue.filter(e => e.severity === ERROR_SEVERITY.CRITICAL).length,\n      recentErrors: this.errorQueue.slice(-10),\n    };\n  }\n}\n\n// Initialize global error handler\nconst globalErrorHandler = new GlobalErrorHandler();\n\n/**\n * Wrapper for async operations with comprehensive error handling\n * @param {Function} asyncFn - Async function to execute\n * @param {Object} options - Error handling options\n * @returns {Promise} - Promise with error handling\n */\nexport async function safeAsync(asyncFn, options = {}) {\n  const {\n    category = ERROR_CATEGORIES.NETWORK,\n    severity = ERROR_SEVERITY.MEDIUM,\n    fallback = null,\n    timeout = 30000,\n    retries = 0,\n    context = {},\n  } = options;\n\n  let lastError;\n\n  for (let attempt = 0; attempt <= retries; attempt++) {\n    try {\n      // Add timeout wrapper\n      const timeoutPromise = new Promise((_, reject) => {\n        setTimeout(() => reject(new Error(\"Operation timeout\")), timeout);\n      });\n\n      const result = await Promise.race([asyncFn(), timeoutPromise]);\n      return result;\n    } catch (error) {\n      lastError = error;\n\n      // Log error\n      globalErrorHandler.handleError(error, category, severity);\n\n      // If we have retries left, wait and retry\n      if (attempt < retries) {\n        await new Promise(resolve => setTimeout(resolve, 1000 * (attempt + 1)));\n        continue;\n      }\n\n      // Final attempt failed\n      if (fallback !== null) {\n        return typeof fallback === \"function\" ? fallback(error) : fallback;\n      }\n\n      // Throw enhanced error\n      const enhancedError = new MedicalError(\n        error.message || \"Operation failed\",\n        error.code || \"UNKNOWN\",\n        category,\n        severity\n      ).withContext(context);\n\n      throw enhancedError;\n    }\n  }\n}\n\n/**\n * Safe wrapper for medical calculations\n * @param {Function} calculationFn - Medical calculation function\n * @param {Object} inputs - Input data\n * @param {Object} options - Calculation options\n * @returns {Promise} - Calculation result with error handling\n */\nexport async function safeMedicalCalculation(calculationFn, inputs, options = {}) {\n  return safeAsync(() => calculationFn(inputs), {\n    category: ERROR_CATEGORIES.MEDICAL,\n    severity: ERROR_SEVERITY.HIGH,\n    fallback: () => ({\n      error: true,\n      message: \"Medical calculation unavailable\",\n      fallbackUsed: true,\n    }),\n    context: {\n      operation: \"medical_calculation\",\n      inputKeys: Object.keys(inputs || {}),\n      ...options.context,\n    },\n    ...options,\n  });\n}\n\n/**\n * Safe wrapper for network requests\n * @param {Function} requestFn - Network request function\n * @param {Object} options - Request options\n * @returns {Promise} - Request result with error handling\n */\nexport async function safeNetworkRequest(requestFn, options = {}) {\n  return safeAsync(requestFn, {\n    category: ERROR_CATEGORIES.NETWORK,\n    severity: ERROR_SEVERITY.MEDIUM,\n    retries: 2,\n    timeout: 10000,\n    fallback: () => ({\n      error: true,\n      message: \"Network request failed\",\n      offline: true,\n    }),\n    ...options,\n  });\n}\n\n/**\n * Safe wrapper for authentication operations\n * @param {Function} authFn - Authentication function\n * @param {Object} options - Auth options\n * @returns {Promise} - Auth result with error handling\n */\nexport async function safeAuthOperation(authFn, options = {}) {\n  return safeAsync(authFn, {\n    category: ERROR_CATEGORIES.AUTHENTICATION,\n    severity: ERROR_SEVERITY.HIGH,\n    timeout: 15000,\n    fallback: () => ({\n      success: false,\n      error: true,\n      message: \"Authentication service unavailable\",\n    }),\n    ...options,\n  });\n}\n\n/**\n * Create error boundary for React-like error handling\n * @param {HTMLElement} element - DOM element to wrap\n * @param {Function} renderFn - Function to render content\n * @param {Function} errorFn - Function to render error state\n */\nexport function createErrorBoundary(element, renderFn, errorFn) {\n  try {\n    renderFn();\n  } catch (error) {\n    globalErrorHandler.handleError(error, ERROR_CATEGORIES.RENDERING, ERROR_SEVERITY.MEDIUM);\n\n    if (errorFn) {\n      errorFn(error);\n    } else {\n      element.textContent = \"Content could not be displayed due to an error.\";\n    }\n  }\n}\n\n/**\n * Validate medical input data\n * @param {Object} data - Input data\n * @param {Object} schema - Validation schema\n * @returns {Object} - Validation result\n */\nexport function validateMedicalInputs(data, schema) {\n  const errors = [];\n  const warnings = [];\n\n  Object.keys(schema).forEach(key => {\n    const rule = schema[key];\n    const value = data[key];\n\n    // Required field check\n    if (rule.required && (value === undefined || value === null || value === \"\")) {\n      errors.push({\n        field: key,\n        code: MEDICAL_ERROR_CODES.DATA_INCOMPLETE,\n        message: `${key} is required`,\n      });\n      return;\n    }\n\n    // Type check\n    if (value !== undefined && rule.type) {\n      const expectedType = rule.type;\n      const actualType = typeof value;\n\n      if (expectedType === \"number\" && (isNaN(value) || actualType !== \"number\")) {\n        errors.push({\n          field: key,\n          code: MEDICAL_ERROR_CODES.INVALID_VITAL_SIGNS,\n          message: `${key} must be a valid number`,\n        });\n        return;\n      }\n    }\n\n    // Range check for medical values\n    if (value !== undefined && typeof value === \"number\") {\n      if (rule.min !== undefined && value < rule.min) {\n        errors.push({\n          field: key,\n          code: MEDICAL_ERROR_CODES.INVALID_VITAL_SIGNS,\n          message: `${key} must be at least ${rule.min}`,\n        });\n      }\n\n      if (rule.max !== undefined && value > rule.max) {\n        errors.push({\n          field: key,\n          code: MEDICAL_ERROR_CODES.INVALID_VITAL_SIGNS,\n          message: `${key} must not exceed ${rule.max}`,\n        });\n      }\n\n      // Medical warning thresholds\n      if (rule.warningMin !== undefined && value < rule.warningMin) {\n        warnings.push({\n          field: key,\n          message: `${key} is below typical range (${rule.warningMin})`,\n        });\n      }\n\n      if (rule.warningMax !== undefined && value > rule.warningMax) {\n        warnings.push({\n          field: key,\n          message: `${key} is above typical range (${rule.warningMax})`,\n        });\n      }\n    }\n  });\n\n  return {\n    isValid: errors.length === 0,\n    errors,\n    warnings,\n    hasWarnings: warnings.length > 0,\n  };\n}\n\n/**\n * Get error handler instance for debugging\n */\nexport function getErrorHandler() {\n  return globalErrorHandler;\n}\n\n/**\n * Export error classes\n */\nexport { GlobalErrorHandler };\n","/**\n * Medical Type Definitions for iGFAP Stroke Triage Assistant\n * Provides comprehensive type safety for medical calculations and data\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\n/**\n * @typedef {Object} PatientData\n * @property {number} age - Patient age in years (0-120)\n * @property {string} gender - Patient gender ('male' | 'female' | 'other')\n * @property {number} gfap - GFAP biomarker level in pg/mL (29-10001)\n * @property {number} [nihss] - NIHSS score (0-42)\n * @property {number} [gcs] - Glasgow Coma Scale (3-15)\n * @property {boolean} [hypertension] - History of hypertension\n * @property {boolean} [diabetes] - History of diabetes\n * @property {boolean} [smoking] - Smoking status\n * @property {number} [sbp] - Systolic blood pressure (mmHg)\n * @property {number} [dbp] - Diastolic blood pressure (mmHg)\n */\n\n/**\n * @typedef {Object} ICHRiskResult\n * @property {number} probability - ICH risk probability (0-1)\n * @property {number} percentage - ICH risk percentage (0-100)\n * @property {'low'|'moderate'|'high'|'critical'} riskLevel - Risk classification\n * @property {string} module - Module used for calculation\n * @property {string} timestamp - ISO timestamp of calculation\n */\n\n/**\n * @typedef {Object} ICHVolumeResult\n * @property {number} volume - Predicted volume in mL\n * @property {number} confidence - Confidence level (0-1)\n * @property {'small'|'moderate'|'large'|'massive'} volumeCategory - Volume classification\n * @property {string} timestamp - ISO timestamp of calculation\n */\n\n/**\n * @typedef {Object} ValidationResult\n * @property {boolean} isValid - Whether the data is valid\n * @property {string[]} errors - Array of validation error messages\n * @property {string[]} warnings - Array of validation warnings\n */\n\n/**\n * @typedef {Object} PredictionRequest\n * @property {PatientData} data - Patient data for prediction\n * @property {string} module - Module type ('coma'|'limited'|'full')\n * @property {string} timestamp - ISO timestamp of request\n * @property {string} sessionId - Session identifier\n */\n\n/**\n * @typedef {Object} PredictionResponse\n * @property {boolean} success - Whether prediction was successful\n * @property {ICHRiskResult} [ichRisk] - ICH risk prediction result\n * @property {ICHVolumeResult} [ichVolume] - ICH volume prediction result\n * @property {string} [error] - Error message if prediction failed\n * @property {number} processingTime - Time taken for prediction (ms)\n */\n\n/**\n * @typedef {Object} QualityMetric\n * @property {string} name - Metric name\n * @property {'count'|'duration'|'percentage'|'average'} type - Metric type\n * @property {number} value - Metric value\n * @property {string} timestamp - ISO timestamp\n * @property {Object} [metadata] - Additional metric metadata\n */\n\n/**\n * @typedef {Object} AuditEvent\n * @property {string} eventType - Type of event ('data_entry'|'prediction'|'error')\n * @property {string} timestamp - ISO timestamp\n * @property {string} userId - User identifier\n * @property {Object} data - Event-specific data\n * @property {string} [sessionId] - Session identifier\n */\n\n/**\n * @typedef {Object} SessionInfo\n * @property {string} sessionId - Unique session identifier\n * @property {string} userId - User identifier\n * @property {number} startTime - Session start timestamp\n * @property {number} lastActivity - Last activity timestamp\n * @property {boolean} isValid - Whether session is still valid\n */\n\n/**\n * @typedef {Object} AppStatus\n * @property {boolean} isInitialized - Whether app is initialized\n * @property {boolean} isAuthenticated - Whether user is authenticated\n * @property {string} currentScreen - Current screen name\n * @property {Object} features - Feature availability status\n * @property {string} version - Application version\n */\n\n/**\n * @typedef {Object} ErrorContext\n * @property {string} operation - Operation being performed\n * @property {string} [component] - Component where error occurred\n * @property {Object} [metadata] - Additional error metadata\n * @property {string} timestamp - ISO timestamp\n */\n\n/**\n * @typedef {Object} SafeOperationOptions\n * @property {'AUTHENTICATION'|'NETWORK'|'MEDICAL'|'STORAGE'|'RENDERING'} category - Error category\n * @property {'LOW'|'MEDIUM'|'HIGH'|'CRITICAL'} severity - Error severity\n * @property {number} [timeout] - Operation timeout in milliseconds\n * @property {number} [retries] - Number of retry attempts\n * @property {ErrorContext} context - Error context information\n */\n\n/**\n * Type validation functions\n */\n\n/**\n * Validates patient data structure and ranges\n * @param {any} data - Data to validate\n * @returns {ValidationResult} Validation result\n */\nexport function validatePatientData(data) {\n  const errors = [];\n  const warnings = [];\n\n  if (!data || typeof data !== \"object\") {\n    errors.push(\"Patient data must be an object\");\n    return { isValid: false, errors, warnings };\n  }\n\n  // Required fields validation\n  if (typeof data.age !== \"number\" || data.age < 0 || data.age > 120) {\n    errors.push(\"Age must be a number between 0 and 120\");\n  }\n\n  if (![\"male\", \"female\", \"other\"].includes(data.gender)) {\n    errors.push(\"Gender must be \\\"male\\\", \\\"female\\\", or \\\"other\\\"\");\n  }\n\n  if (typeof data.gfap !== \"number\" || data.gfap < 29 || data.gfap > 10001) {\n    errors.push(\"GFAP must be a number between 29 and 10001 pg/mL\");\n  }\n\n  // Optional fields validation\n  if (data.nihss !== undefined && (typeof data.nihss !== \"number\" || data.nihss < 0 || data.nihss > 42)) {\n    errors.push(\"NIHSS must be a number between 0 and 42\");\n  }\n\n  if (data.gcs !== undefined && (typeof data.gcs !== \"number\" || data.gcs < 3 || data.gcs > 15)) {\n    errors.push(\"GCS must be a number between 3 and 15\");\n  }\n\n  if (data.sbp !== undefined && (typeof data.sbp !== \"number\" || data.sbp < 50 || data.sbp > 300)) {\n    warnings.push(\"Systolic BP should typically be between 50-300 mmHg\");\n  }\n\n  if (data.dbp !== undefined && (typeof data.dbp !== \"number\" || data.dbp < 30 || data.dbp > 200)) {\n    warnings.push(\"Diastolic BP should typically be between 30-200 mmHg\");\n  }\n\n  return { isValid: errors.length === 0, errors, warnings };\n}\n\n/**\n * Validates ICH risk result\n * @param {any} result - Result to validate\n * @returns {ValidationResult} Validation result\n */\nexport function validateICHRiskResult(result) {\n  const errors = [];\n  const warnings = [];\n\n  if (!result || typeof result !== \"object\") {\n    errors.push(\"ICH risk result must be an object\");\n    return { isValid: false, errors, warnings };\n  }\n\n  if (typeof result.probability !== \"number\" || result.probability < 0 || result.probability > 1) {\n    errors.push(\"Probability must be a number between 0 and 1\");\n  }\n\n  if (typeof result.percentage !== \"number\" || result.percentage < 0 || result.percentage > 100) {\n    errors.push(\"Percentage must be a number between 0 and 100\");\n  }\n\n  if (![\"low\", \"moderate\", \"high\", \"critical\"].includes(result.riskLevel)) {\n    errors.push(\"Risk level must be \\\"low\\\", \\\"moderate\\\", \\\"high\\\", or \\\"critical\\\"\");\n  }\n\n  if (!result.timestamp || !Date.parse(result.timestamp)) {\n    errors.push(\"Timestamp must be a valid ISO date string\");\n  }\n\n  return { isValid: errors.length === 0, errors, warnings };\n}\n\n/**\n * Type guard functions\n */\n\n/**\n * Checks if value is valid patient data\n * @param {any} value - Value to check\n * @returns {value is PatientData} Type guard result\n */\nexport function isPatientData(value) {\n  const validation = validatePatientData(value);\n  return validation.isValid;\n}\n\n/**\n * Checks if value is valid ICH risk result\n * @param {any} value - Value to check\n * @returns {value is ICHRiskResult} Type guard result\n */\nexport function isICHRiskResult(value) {\n  const validation = validateICHRiskResult(value);\n  return validation.isValid;\n}\n\n/**\n * Medical calculation constants with type safety\n */\nexport const MEDICAL_CONSTANTS = {\n  /** @type {[number, number]} Age range */\n  AGE_RANGE: [0, 120],\n\n  /** @type {[number, number]} GFAP range in pg/mL */\n  GFAP_RANGE: [29, 10001],\n\n  /** @type {[number, number]} NIHSS range */\n  NIHSS_RANGE: [0, 42],\n\n  /** @type {[number, number]} GCS range */\n  GCS_RANGE: [3, 15],\n\n  /** @type {Object.<string, number>} Risk thresholds */\n  RISK_THRESHOLDS: {\n    LOW: 0.25,\n    MODERATE: 0.50,\n    HIGH: 0.70,\n    CRITICAL: 0.85,\n  },\n\n  /** @type {Object.<string, number>} Volume thresholds in mL */\n  VOLUME_THRESHOLDS: {\n    SMALL: 10,\n    MODERATE: 30,\n    LARGE: 60,\n    MASSIVE: 100,\n  },\n};\n\n/**\n * Runtime type checking utility\n */\nexport class TypeChecker {\n  /**\n   * Ensures value matches expected type with detailed error\n   * @param {any} value - Value to check\n   * @param {string} expectedType - Expected type description\n   * @param {string} fieldName - Field name for error messages\n   * @throws {TypeError} If type check fails\n   */\n  static ensureType(value, expectedType, fieldName) {\n    let isValid = false;\n    let actualType = typeof value;\n\n    switch (expectedType) {\n    case \"PatientData\":\n      isValid = isPatientData(value);\n      actualType = \"Invalid PatientData\";\n      break;\n    case \"ICHRiskResult\":\n      isValid = isICHRiskResult(value);\n      actualType = \"Invalid ICHRiskResult\";\n      break;\n    case \"number\":\n      isValid = typeof value === \"number\" && !isNaN(value);\n      break;\n    case \"string\":\n      isValid = typeof value === \"string\";\n      break;\n    case \"boolean\":\n      isValid = typeof value === \"boolean\";\n      break;\n    default:\n      isValid = typeof value === expectedType;\n    }\n\n    if (!isValid) {\n      throw new TypeError(\n        `Type error in ${fieldName}: expected ${expectedType}, got ${actualType}. `\n        + \"This is a critical error in medical calculations.\",\n      );\n    }\n  }\n\n  /**\n   * Validates number is within range\n   * @param {number} value - Value to check\n   * @param {[number, number]} range - [min, max] range\n   * @param {string} fieldName - Field name for error messages\n   * @throws {RangeError} If value is out of range\n   */\n  static ensureRange(value, range, fieldName) {\n    this.ensureType(value, \"number\", fieldName);\n    const [min, max] = range;\n\n    if (value < min || value > max) {\n      throw new RangeError(\n        `Range error in ${fieldName}: value ${value} must be between ${min} and ${max}. `\n        + \"This is a critical error in medical calculations.\",\n      );\n    }\n  }\n}\n","/**\n * Professional Medical Logging System\n * iGFAP Stroke Triage Assistant - Enterprise-Grade Logging\n *\n * Provides structured, secure logging for medical applications with:\n * - HIPAA compliance (no PHI in logs)\n * - Structured JSON logging\n * - Performance monitoring\n * - Error tracking\n * - Audit trail capabilities\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\nimport { safeAsync, ERROR_CATEGORIES } from \"./error-handler.js\";\n\n/**\n * @typedef {Object} LogEntry\n * @property {string} timestamp - ISO timestamp\n * @property {string} level - Log level\n * @property {string} category - Log category\n * @property {string} message - Log message\n * @property {Object} [context] - Additional context (sanitized)\n * @property {string} [sessionId] - Session identifier\n * @property {string} [userId] - User identifier (anonymized)\n * @property {Object} [performance] - Performance metrics\n * @property {string} [stackTrace] - Stack trace for errors\n */\n\n/**\n * Log levels with priority ordering\n */\nexport const LOG_LEVELS = {\n  DEBUG: { level: 0, name: \"DEBUG\", color: \"#6366f1\" },\n  INFO: { level: 1, name: \"INFO\", color: \"#10b981\" },\n  WARN: { level: 2, name: \"WARN\", color: \"#f59e0b\" },\n  ERROR: { level: 3, name: \"ERROR\", color: \"#ef4444\" },\n  CRITICAL: { level: 4, name: \"CRITICAL\", color: \"#dc2626\" },\n};\n\n/**\n * Log categories for medical application\n */\nexport const LOG_CATEGORIES = {\n  AUTHENTICATION: \"AUTH\",\n  MEDICAL_CALCULATION: \"MEDICAL\",\n  NETWORK: \"NETWORK\",\n  PERFORMANCE: \"PERF\",\n  SECURITY: \"SECURITY\",\n  USER_INTERACTION: \"UI\",\n  DATA_VALIDATION: \"VALIDATION\",\n  AUDIT: \"AUDIT\",\n  SYSTEM: \"SYSTEM\",\n  ERROR: \"ERROR\",\n};\n\n/**\n * Professional Medical Logger Class\n */\nexport class MedicalLogger {\n  constructor() {\n    this.logLevel = this.getLogLevel();\n    this.sessionId = this.generateSessionId();\n    this.logBuffer = [];\n    this.maxBufferSize = 1000;\n    this.isProduction =\n      window.location.hostname !== \"localhost\" && window.location.hostname !== \"127.0.0.1\";\n    this.enableConsole = !this.isProduction;\n    this.enableStorage = true;\n    this.enableNetwork = false; // Would send to logging service in production\n\n    this.setupErrorHandlers();\n    this.startPeriodicFlush();\n  }\n\n  /**\n   * Get configured log level from environment or localStorage\n   */\n  getLogLevel() {\n    try {\n      const stored = localStorage.getItem(\"medicalLogLevel\");\n      if (stored && LOG_LEVELS[stored.toUpperCase()]) {\n        return LOG_LEVELS[stored.toUpperCase()].level;\n      }\n    } catch (error) {\n      // localStorage not available\n    }\n\n    // Default to INFO in production, DEBUG in development\n    return this.isProduction ? LOG_LEVELS.INFO.level : LOG_LEVELS.DEBUG.level;\n  }\n\n  /**\n   * Generate unique session identifier\n   */\n  generateSessionId() {\n    const timestamp = Date.now().toString(36);\n    const random = Math.random().toString(36).substring(2, 8);\n    return `sess_${timestamp}_${random}`;\n  }\n\n  /**\n   * Setup global error handlers\n   */\n  setupErrorHandlers() {\n    // Capture unhandled errors\n    window.addEventListener(\"error\", event => {\n      try {\n        this.critical(\"Unhandled JavaScript Error\", {\n          category: LOG_CATEGORIES.ERROR,\n          message: event.message,\n          filename: event.filename,\n          lineno: event.lineno,\n          colno: event.colno,\n          stack: event.error?.stack,\n        });\n      } catch (loggingError) {\n        // Fallback to console if logging fails\n        console.error(\"Logging failed:\", loggingError);\n        console.error(\"Original error:\", event.error);\n      }\n    });\n\n    // Capture unhandled promise rejections\n    window.addEventListener(\"unhandledrejection\", event => {\n      try {\n        this.critical(\"Unhandled Promise Rejection\", {\n          category: LOG_CATEGORIES.ERROR,\n          reason: event.reason?.message || String(event.reason) || \"Unknown rejection\",\n          stack: event.reason?.stack,\n        });\n      } catch (loggingError) {\n        // Fallback to console if logging fails\n        console.error(\"Logging failed:\", loggingError);\n        console.error(\"Original rejection:\", event.reason);\n      }\n    });\n  }\n\n  /**\n   * Create structured log entry\n   */\n  createLogEntry(level, message, context = {}) {\n    // Ensure context is always an object\n    const safeContext = context && typeof context === \"object\" ? context : {};\n\n    const entry = {\n      timestamp: new Date().toISOString(),\n      level: LOG_LEVELS[level]?.name || level,\n      category: safeContext.category || LOG_CATEGORIES.SYSTEM,\n      message: this.sanitizeMessage(message),\n      sessionId: this.sessionId,\n      context: this.sanitizeContext(safeContext),\n      performance: this.getPerformanceMetrics(),\n    };\n\n    // Add stack trace for errors\n    if (level === \"ERROR\" || level === \"CRITICAL\") {\n      entry.stackTrace = new Error().stack;\n    }\n\n    // Add user ID if available (anonymized)\n    const userId = this.getAnonymizedUserId();\n    if (userId) {\n      entry.userId = userId;\n    }\n\n    return entry;\n  }\n\n  /**\n   * Sanitize message to remove PHI\n   */\n  sanitizeMessage(message) {\n    if (typeof message !== \"string\") {\n      message = String(message);\n    }\n\n    // Remove potential PHI patterns\n    const sanitized = message\n      .replace(/\\b\\d{3}-\\d{2}-\\d{4}\\b/g, \"***-**-****\") // SSN\n      .replace(/\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/g, \"***@***.***\") // Email\n      .replace(/\\b\\d{10,}\\b/g, \"**********\") // Phone numbers\n      .replace(/\\b[A-Z][a-z]+ [A-Z][a-z]+\\b/g, \"[NAME]\"); // Names\n\n    return sanitized;\n  }\n\n  /**\n   * Sanitize context object to remove PHI\n   */\n  sanitizeContext(context) {\n    // Handle null or non-object inputs\n    if (!context || typeof context !== \"object\") {\n      return {};\n    }\n\n    const sanitized = { ...context };\n\n    // Remove sensitive fields\n    const sensitiveFields = [\n      \"password\",\n      \"token\",\n      \"sessionToken\",\n      \"authToken\",\n      \"patientName\",\n      \"firstName\",\n      \"lastName\",\n      \"fullName\",\n      \"email\",\n      \"phone\",\n      \"ssn\",\n      \"mrn\",\n      \"dob\",\n      \"dateOfBirth\",\n    ];\n\n    const removeSensitiveData = obj => {\n      if (!obj || typeof obj !== \"object\") {\n        return obj;\n      }\n\n      const cleaned = Array.isArray(obj) ? [] : {};\n\n      for (const [key, value] of Object.entries(obj)) {\n        const lowerKey = key.toLowerCase();\n\n        if (sensitiveFields.some(field => lowerKey.includes(field))) {\n          cleaned[key] = \"[REDACTED]\";\n        } else if (typeof value === \"object\" && value !== null) {\n          cleaned[key] = removeSensitiveData(value);\n        } else {\n          cleaned[key] = value;\n        }\n      }\n\n      return cleaned;\n    };\n\n    return removeSensitiveData(sanitized);\n  }\n\n  /**\n   * Get anonymized user ID\n   */\n  getAnonymizedUserId() {\n    try {\n      // Use a hash of session info, not actual user data\n      const sessionData = sessionStorage.getItem(\"session_hash\");\n      if (sessionData) {\n        return `user_${sessionData.substring(0, 8)}`;\n      }\n    } catch (error) {\n      // Session storage not available\n    }\n    return null;\n  }\n\n  /**\n   * Get performance metrics\n   */\n  getPerformanceMetrics() {\n    try {\n      if (\"performance\" in window) {\n        const navigation = performance.getEntriesByType(\"navigation\")[0];\n        return {\n          memoryUsed: performance.memory?.usedJSHeapSize || 0,\n          loadTime: navigation?.loadEventEnd - navigation?.loadEventStart || 0,\n          domReady:\n            navigation?.domContentLoadedEventEnd - navigation?.domContentLoadedEventStart || 0,\n        };\n      }\n    } catch (error) {\n      // Performance API not available\n    }\n    return null;\n  }\n\n  /**\n   * Log message at specified level\n   */\n  log(level, message, context = {}) {\n    return safeAsync(\n      async () => {\n        // Validate inputs\n        if (!level || !message) {\n          return; // Skip logging if no level or message\n        }\n\n        const levelInfo = LOG_LEVELS[level.toUpperCase()];\n        if (!levelInfo || levelInfo.level < this.logLevel) {\n          return; // Below configured log level\n        }\n\n        const entry = this.createLogEntry(level.toUpperCase(), message, context);\n\n        // Add to buffer\n        this.addToBuffer(entry);\n\n        // Console output in development\n        if (this.enableConsole) {\n          this.outputToConsole(entry);\n        }\n\n        // Store locally\n        if (this.enableStorage) {\n          this.storeEntry(entry);\n        }\n\n        // Send to logging service (production)\n        if (this.enableNetwork) {\n          await this.sendToLoggingService(entry);\n        }\n      },\n      {\n        category: ERROR_CATEGORIES.SYSTEM,\n        context: { operation: \"logging\", level, message: message.substring(0, 100) },\n      }\n    );\n  }\n\n  /**\n   * Add entry to buffer\n   */\n  addToBuffer(entry) {\n    this.logBuffer.push(entry);\n\n    // Maintain buffer size\n    if (this.logBuffer.length > this.maxBufferSize) {\n      this.logBuffer = this.logBuffer.slice(-this.maxBufferSize);\n    }\n  }\n\n  /**\n   * Output to browser console with styling\n   */\n  outputToConsole(entry) {\n    const levelInfo = LOG_LEVELS[entry.level];\n    const color = levelInfo?.color || \"#666666\";\n\n    const style = `color: ${color}; font-weight: bold;`;\n    const timestamp = new Date(entry.timestamp).toLocaleTimeString();\n\n    const consoleMethod =\n      entry.level === \"ERROR\" || entry.level === \"CRITICAL\"\n        ? \"error\"\n        : entry.level === \"WARN\"\n          ? \"warn\"\n          : \"log\";\n\n    console.groupCollapsed(\n      `%c[${entry.level}] ${timestamp} [${entry.category}] ${entry.message}`,\n      style\n    );\n\n    if (entry.context && Object.keys(entry.context).length > 0) {\n      console.log(\"Context:\", entry.context);\n    }\n\n    if (entry.performance) {\n      console.log(\"Performance:\", entry.performance);\n    }\n\n    if (entry.stackTrace && (entry.level === \"ERROR\" || entry.level === \"CRITICAL\")) {\n      console.log(\"Stack Trace:\", entry.stackTrace);\n    }\n\n    console.groupEnd();\n  }\n\n  /**\n   * Store entry locally\n   */\n  storeEntry(entry) {\n    try {\n      const key = `medicalLog_${entry.timestamp}`;\n      const serialized = JSON.stringify(entry);\n\n      // Use sessionStorage for temporary storage\n      sessionStorage.setItem(key, serialized);\n\n      // Clean old entries (keep last 100)\n      this.cleanOldEntries();\n    } catch (error) {\n      // Storage failed - continue silently\n    }\n  }\n\n  /**\n   * Clean old log entries from storage\n   */\n  cleanOldEntries() {\n    try {\n      const keys = Object.keys(sessionStorage)\n        .filter(key => key.startsWith(\"medicalLog_\"))\n        .sort()\n        .reverse();\n\n      // Keep only the last 100 entries\n      if (keys.length > 100) {\n        keys.slice(100).forEach(key => {\n          sessionStorage.removeItem(key);\n        });\n      }\n    } catch (error) {\n      // Cleanup failed - continue silently\n    }\n  }\n\n  /**\n   * Send to remote logging service\n   */\n  async sendToLoggingService(entry) {\n    // In production, this would send to a logging service like:\n    // - Google Cloud Logging\n    // - AWS CloudWatch\n    // - Elastic Stack\n    // - Splunk\n\n    // For now, just return - would implement actual service call\n    return Promise.resolve();\n  }\n\n  /**\n   * Start periodic buffer flush\n   */\n  startPeriodicFlush() {\n    setInterval(() => {\n      this.flushBuffer();\n    }, 30000); // Flush every 30 seconds\n  }\n\n  /**\n   * Flush log buffer\n   */\n  flushBuffer() {\n    if (this.logBuffer.length === 0) {\n      return;\n    }\n\n    // In production, this would batch-send logs to service\n    this.info(\"Log buffer flushed\", {\n      category: LOG_CATEGORIES.SYSTEM,\n      entriesCount: this.logBuffer.length,\n    });\n  }\n\n  /**\n   * Convenience methods for different log levels\n   */\n  debug(message, context = {}) {\n    return this.log(\"DEBUG\", message, context);\n  }\n\n  info(message, context = {}) {\n    return this.log(\"INFO\", message, context);\n  }\n\n  warn(message, context = {}) {\n    return this.log(\"WARN\", message, context);\n  }\n\n  error(message, context = {}) {\n    return this.log(\"ERROR\", message, context);\n  }\n\n  critical(message, context = {}) {\n    return this.log(\"CRITICAL\", message, context);\n  }\n\n  /**\n   * Specialized medical logging methods\n   */\n  medicalCalculation(operation, result, context = {}) {\n    return this.info(`Medical calculation: ${operation}`, {\n      category: LOG_CATEGORIES.MEDICAL_CALCULATION,\n      operation,\n      success: !context.error,\n      ...context,\n    });\n  }\n\n  authentication(action, success, context = {}) {\n    return this.info(`Authentication: ${action}`, {\n      category: LOG_CATEGORIES.AUTHENTICATION,\n      action,\n      success,\n      ...context,\n    });\n  }\n\n  userInteraction(action, context = {}) {\n    return this.debug(`User interaction: ${action}`, {\n      category: LOG_CATEGORIES.USER_INTERACTION,\n      action,\n      ...context,\n    });\n  }\n\n  networkRequest(url, method, status, context = {}) {\n    const level = status >= 400 ? \"ERROR\" : status >= 300 ? \"WARN\" : \"DEBUG\";\n    return this.log(level, `Network request: ${method} ${url}`, {\n      category: LOG_CATEGORIES.NETWORK,\n      method,\n      url: this.sanitizeUrl(url),\n      status,\n      ...context,\n    });\n  }\n\n  performance(metric, value, context = {}) {\n    return this.debug(`Performance metric: ${metric} = ${value}`, {\n      category: LOG_CATEGORIES.PERFORMANCE,\n      metric,\n      value,\n      ...context,\n    });\n  }\n\n  auditTrail(event, context = {}) {\n    return this.info(`Audit: ${event}`, {\n      category: LOG_CATEGORIES.AUDIT,\n      event,\n      ...context,\n    });\n  }\n\n  /**\n   * Sanitize URL to remove sensitive parameters\n   */\n  sanitizeUrl(url) {\n    try {\n      const urlObj = new URL(url);\n      const sensitiveParams = [\"token\", \"auth\", \"key\", \"secret\"];\n\n      sensitiveParams.forEach(param => {\n        if (urlObj.searchParams.has(param)) {\n          urlObj.searchParams.set(param, \"[REDACTED]\");\n        }\n      });\n\n      return urlObj.toString();\n    } catch (error) {\n      return url;\n    }\n  }\n\n  /**\n   * Get all logs from buffer and storage\n   */\n  getLogs(filters = {}) {\n    const allLogs = [...this.logBuffer];\n\n    // Add logs from storage\n    try {\n      const keys = Object.keys(sessionStorage)\n        .filter(key => key.startsWith(\"medicalLog_\"))\n        .sort();\n\n      keys.forEach(key => {\n        try {\n          const entry = JSON.parse(sessionStorage.getItem(key));\n          if (entry && !allLogs.find(log => log.timestamp === entry.timestamp)) {\n            allLogs.push(entry);\n          }\n        } catch (error) {\n          // Skip corrupted entries\n        }\n      });\n    } catch (error) {\n      // Storage access failed\n    }\n\n    // Apply filters\n    let filtered = allLogs.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n\n    if (filters.level) {\n      const minLevel = LOG_LEVELS[filters.level.toUpperCase()]?.level || 0;\n      filtered = filtered.filter(log => {\n        const logLevel = LOG_LEVELS[log.level]?.level || 0;\n        return logLevel >= minLevel;\n      });\n    }\n\n    if (filters.category) {\n      filtered = filtered.filter(log => log.category === filters.category);\n    }\n\n    if (filters.since) {\n      const sinceDate = new Date(filters.since);\n      filtered = filtered.filter(log => new Date(log.timestamp) >= sinceDate);\n    }\n\n    if (filters.limit) {\n      filtered = filtered.slice(0, filters.limit);\n    }\n\n    return filtered;\n  }\n\n  /**\n   * Export logs for debugging or compliance\n   */\n  exportLogs(format = \"json\") {\n    const logs = this.getLogs();\n\n    if (format === \"csv\") {\n      return this.logsToCSV(logs);\n    }\n\n    return JSON.stringify(logs, null, 2);\n  }\n\n  /**\n   * Convert logs to CSV format\n   */\n  logsToCSV(logs) {\n    if (logs.length === 0) {\n      return \"\";\n    }\n\n    const headers = [\"timestamp\", \"level\", \"category\", \"message\", \"sessionId\"];\n    const rows = logs.map(log => [\n      log.timestamp,\n      log.level,\n      log.category,\n      `\"${log.message.replace(/\"/g, \"\\\"\\\"\")}\"`,\n      log.sessionId,\n    ]);\n\n    return [headers.join(\",\"), ...rows.map(row => row.join(\",\"))].join(\"\\n\");\n  }\n\n  /**\n   * Clear all logs\n   */\n  clearLogs() {\n    this.logBuffer = [];\n\n    try {\n      const keys = Object.keys(sessionStorage).filter(key => key.startsWith(\"medicalLog_\"));\n\n      keys.forEach(key => sessionStorage.removeItem(key));\n    } catch (error) {\n      // Storage cleanup failed\n    }\n\n    this.info(\"Log storage cleared\", {\n      category: LOG_CATEGORIES.SYSTEM,\n    });\n  }\n}\n\n// Create global logger instance\nexport const medicalLogger = new MedicalLogger();\n\n// Export convenience functions\nexport const {\n  debug,\n  info,\n  warn,\n  error,\n  critical,\n  medicalCalculation,\n  authentication,\n  userInteraction,\n  networkRequest,\n  performance,\n  auditTrail,\n} = medicalLogger;\n","/**\n * Secure Authentication System for iGFAP Stroke Triage Assistant\n * Enterprise-grade authentication using Google Cloud Functions\n *\n * @typedef {import('../types/medical-types.js').SessionInfo} SessionInfo\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\nimport { API_URLS, DEV_CONFIG } from \"../config.js\";\nimport { getResearchPassword, isDevelopment, getSecurityConfig } from \"../security/environment.js\";\n\n// Bulletproof error handling utilities\nimport {\n  safeAsync,\n  safeAuthOperation,\n  MedicalError,\n  ERROR_CATEGORIES,\n  ERROR_SEVERITY,\n  MEDICAL_ERROR_CODES,\n} from \"../utils/error-handler.js\";\n\n// Type safety utilities\nimport { TypeChecker } from \"../types/medical-types.js\";\n\n// Professional logging\nimport { medicalLogger, LOG_CATEGORIES } from \"../utils/medical-logger.js\";\n\n// Encrypted storage\nimport { secureStore, secureRetrieve, secureRemove } from \"../security/data-encryption.js\";\n\nexport class AuthenticationManager {\n  constructor() {\n    this.isAuthenticated = false;\n    this.sessionToken = null;\n    this.sessionExpiry = null;\n    this.lastActivity = Date.now();\n    this.setupActivityTracking();\n  }\n\n  /**\n   * Authenticate user with research access password via secure Cloud Function\n   * @param {string} password - Research access password\n   * @returns {Promise<{success: boolean, message: string, sessionInfo?: SessionInfo}>} - Authentication result with success status and message\n   */\n  async authenticate(password) {\n    return safeAuthOperation(\n      async () => {\n        medicalLogger.info(\"Authentication attempt started\", {\n          category: LOG_CATEGORIES.AUTHENTICATION,\n          hasPassword: !!password && password.length > 0,\n          isDevelopment: DEV_CONFIG.isDevelopment,\n        });\n\n        // Type safety validation\n        TypeChecker.ensureType(password, \"string\", \"authentication password\");\n\n        if (!password || password.trim().length === 0) {\n          medicalLogger.warn(\"Authentication failed: empty password\", {\n            category: LOG_CATEGORIES.AUTHENTICATION,\n          });\n          throw new MedicalError(\n            \"Password is required\",\n            \"EMPTY_PASSWORD\",\n            ERROR_CATEGORIES.VALIDATION,\n            ERROR_SEVERITY.MEDIUM,\n          );\n        }\n\n        // Local preview (localhost, vite preview): authenticate locally to avoid CORS\n        const isLocalPreview = [\"localhost\", \"127.0.0.1\", \"0.0.0.0\"].includes(window.location.hostname) && !(import.meta && import.meta.env && import.meta.env.DEV);\n        if (isLocalPreview || DEV_CONFIG.isDevelopment) {\n          medicalLogger.info(\"Development mode authentication path\", {\n            category: LOG_CATEGORIES.AUTHENTICATION,\n          });\n\n          // SECURITY: Use environment-based research password\n          const expectedPassword = getResearchPassword();\n          if (password.trim() !== expectedPassword) {\n            await this.delayFailedAttempt();\n            return {\n              success: false,\n              message: \"Invalid credentials\",\n              errorCode: \"INVALID_CREDENTIALS\",\n            };\n          }\n\n          await new Promise((resolve) => setTimeout(resolve, 300)); // small UX delay\n\n          this.isAuthenticated = true;\n          this.sessionToken = DEV_CONFIG.mockAuthResponse.session_token;\n          this.sessionExpiry = new Date(DEV_CONFIG.mockAuthResponse.expires_at);\n          this.lastActivity = Date.now();\n\n          // Store session\n          try {\n            this.storeSecureSession();\n          } catch (storageError) {\n            console.warn(\"Session storage failed:\", storageError.message);\n          }\n\n          return {\n            success: true,\n            message: \"Authentication successful\",\n            sessionDuration: DEV_CONFIG.mockAuthResponse.session_duration,\n          };\n        }\n\n        // This branch is now unreachable due to isLocalPreview handling above; keep as guard\n        const isLocalHost = [\"localhost\", \"127.0.0.1\", \"0.0.0.0\"].includes(window.location.hostname);\n        const preferMock = localStorage.getItem(\"use_mock_api\") !== \"false\";\n        if (isLocalHost && preferMock && !(import.meta && import.meta.env && import.meta.env.DEV)) {\n          if (password.trim() !== getResearchPassword()) {\n            await this.delayFailedAttempt();\n            return {\n              success: false,\n              message: \"Invalid credentials\",\n              errorCode: \"INVALID_CREDENTIALS\",\n            };\n          }\n\n          // Simulate minimal delay for UX\n          await new Promise((resolve) => setTimeout(resolve, 200));\n\n          this.isAuthenticated = true;\n          this.sessionToken = `local-preview-token-${Date.now()}`;\n          this.sessionExpiry = new Date(Date.now() + 30 * 60 * 1000);\n          this.lastActivity = Date.now();\n\n          try {\n            this.storeSecureSession();\n          } catch {}\n\n          return {\n            success: true,\n            message: \"Authentication successful\",\n            sessionDuration: 1800,\n          };\n        }\n\n        medicalLogger.debug(\"Sending authentication request\", {\n          category: LOG_CATEGORIES.AUTHENTICATION,\n          url: API_URLS.AUTHENTICATE,\n        });\n\n        const response = await fetch(API_URLS.AUTHENTICATE, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            action: \"login\",\n            password: password.trim(),\n          }),\n        });\n\n        if (!response.ok) {\n          let errorMessage = \"Authentication failed\";\n          let errorCode = \"AUTH_FAILED\";\n\n          if (response.status === 429) {\n            errorMessage = \"Too many authentication attempts. Please wait and try again.\";\n            errorCode = \"RATE_LIMITED\";\n          } else if (response.status >= 500) {\n            errorMessage = \"Authentication service temporarily unavailable\";\n            errorCode = \"SERVICE_ERROR\";\n          }\n\n          throw new MedicalError(\n            errorMessage,\n            errorCode,\n            ERROR_CATEGORIES.AUTHENTICATION,\n            response.status >= 500 ? ERROR_SEVERITY.HIGH : ERROR_SEVERITY.MEDIUM,\n          ).withContext({ statusCode: response.status, url: API_URLS.AUTHENTICATE });\n        }\n\n        const data = await response.json();\n\n        if (!data || typeof data !== \"object\") {\n          throw new MedicalError(\n            \"Invalid response from authentication service\",\n            \"INVALID_RESPONSE\",\n            ERROR_CATEGORIES.AUTHENTICATION,\n            ERROR_SEVERITY.HIGH,\n          );\n        }\n\n        if (data.success) {\n          this.isAuthenticated = true;\n          this.sessionToken = data.session_token;\n          this.sessionExpiry = data.expires_at ? new Date(data.expires_at) : null;\n          this.lastActivity = Date.now();\n\n          // Safely store session\n          try {\n            this.storeSecureSession();\n          } catch (storageError) {\n            // Continue with authentication even if storage fails\n            console.warn(\"Session storage failed:\", storageError.message);\n          }\n\n          return {\n            success: true,\n            message: \"Authentication successful\",\n            sessionDuration: data.session_duration,\n          };\n        }\n        // Handle authentication failure\n        await this.delayFailedAttempt();\n\n        throw new MedicalError(\n          data.message || \"Invalid credentials\",\n          \"INVALID_CREDENTIALS\",\n          ERROR_CATEGORIES.AUTHENTICATION,\n          ERROR_SEVERITY.MEDIUM,\n        ).withContext({\n          remainingAttempts: data.rate_limit_remaining,\n          statusCode: response.status,\n        });\n      },\n      {\n        timeout: 15000,\n        fallback: (error) => ({\n          success: false,\n          message: error instanceof MedicalError ? error.getUserMessage() : \"Authentication service unavailable. Please try again.\",\n          errorCode: error.code || \"NETWORK_ERROR\",\n          details: error.message,\n          remainingAttempts: error.context?.remainingAttempts,\n        }),\n        context: {\n          operation: \"user_authentication\",\n          endpoint: \"authenticate\",\n        },\n      },\n    );\n  }\n\n  /**\n   * Check if current session is valid\n   * @returns {boolean} - Session validity\n   */\n  isValidSession() {\n    if (!this.isAuthenticated) {\n      return this.checkStoredSession();\n    }\n\n    // Check session expiry\n    if (this.sessionExpiry && new Date() > this.sessionExpiry) {\n      this.logout();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Validate session token with server\n   * @returns {boolean} - Server-side session validity\n   */\n  async validateSessionWithServer() {\n    if (!this.sessionToken) {\n      return false;\n    }\n\n    return safeAuthOperation(\n      async () => {\n        // Skip remote validation on local preview to avoid CORS noise\n        const isLocalPreview = [\"localhost\", \"127.0.0.1\", \"0.0.0.0\"].includes(window.location.hostname) && !(import.meta && import.meta.env && import.meta.env.DEV);\n        if (isLocalPreview) {\n          this.updateActivity();\n          return true;\n        }\n\n        const response = await fetch(API_URLS.AUTHENTICATE, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            action: \"validate_session\",\n            session_token: this.sessionToken,\n          }),\n        });\n\n        if (!response.ok) {\n          if (response.status === 401 || response.status === 403) {\n            // Session expired or invalid\n            this.logout();\n            return false;\n          }\n\n          throw new MedicalError(\n            \"Session validation service error\",\n            \"VALIDATION_ERROR\",\n            ERROR_CATEGORIES.AUTHENTICATION,\n            ERROR_SEVERITY.MEDIUM,\n          ).withContext({ statusCode: response.status });\n        }\n\n        const data = await response.json();\n\n        if (!data || typeof data !== \"object\") {\n          throw new MedicalError(\n            \"Invalid response from session validation service\",\n            \"INVALID_RESPONSE\",\n            ERROR_CATEGORIES.AUTHENTICATION,\n            ERROR_SEVERITY.MEDIUM,\n          );\n        }\n\n        if (data.success) {\n          this.updateActivity();\n          return true;\n        }\n        this.logout();\n        return false;\n      },\n      {\n        timeout: 10000,\n        fallback: (error) => {\n          // On network errors, allow local session to continue\n          // This prevents logout during temporary network issues\n          console.warn(\"Session validation failed, continuing with local session:\", error.message);\n          return this.isValidSession();\n        },\n        context: {\n          operation: \"session_validation\",\n          endpoint: \"validate_session\",\n        },\n      },\n    );\n  }\n\n  /**\n   * Update activity timestamp\n   */\n  updateActivity() {\n    this.lastActivity = Date.now();\n    this.storeAuthSession();\n  }\n\n  /**\n   * Logout and clear session securely\n   */\n  async logout() {\n    medicalLogger.info(\"User logout initiated\", {\n      category: LOG_CATEGORIES.AUTHENTICATION,\n    });\n\n    this.isAuthenticated = false;\n    this.sessionToken = null;\n    this.sessionExpiry = null;\n\n    // Clear all encrypted session storage securely\n    try {\n      await secureRemove(\"auth_session\", true);\n      await secureRemove(\"auth_timestamp\", true);\n      await secureRemove(\"session_token\", true);\n      await secureRemove(\"session_expiry\", true);\n\n      // Clear legacy unencrypted data\n      sessionStorage.removeItem(\"auth_session\");\n      sessionStorage.removeItem(\"auth_timestamp\");\n      sessionStorage.removeItem(\"session_token\");\n      sessionStorage.removeItem(\"session_expiry\");\n\n      medicalLogger.info(\"Session data cleared during logout\", {\n        category: LOG_CATEGORIES.SECURITY,\n      });\n    } catch (error) {\n      medicalLogger.warn(\"Failed to clear some session data during logout\", {\n        category: LOG_CATEGORIES.SECURITY,\n        error: error.message,\n      });\n    }\n  }\n\n  /**\n   * Simple hash function for password verification\n   * Note: For production medical device, use proper bcrypt/PBKDF2\n   * @param {string} input - Password to hash\n   * @returns {string} - Hashed password\n   */\n  async hashPassword(input) {\n    return safeAsync(\n      async () => {\n        if (!input || typeof input !== \"string\") {\n          throw new MedicalError(\n            \"Invalid input for password hashing\",\n            \"INVALID_INPUT\",\n            ERROR_CATEGORIES.VALIDATION,\n            ERROR_SEVERITY.MEDIUM,\n          );\n        }\n\n        if (!crypto || !crypto.subtle) {\n          throw new MedicalError(\n            \"Crypto API not available\",\n            \"CRYPTO_UNAVAILABLE\",\n            ERROR_CATEGORIES.SECURITY,\n            ERROR_SEVERITY.HIGH,\n          );\n        }\n\n        const encoder = new TextEncoder();\n        const data = encoder.encode(input);\n        const hashBuffer = await crypto.subtle.digest(\"SHA-256\", data);\n        const hashArray = Array.from(new Uint8Array(hashBuffer));\n        const hashHex = hashArray.map((b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n        return hashHex;\n      },\n      {\n        category: ERROR_CATEGORIES.SECURITY,\n        severity: ERROR_SEVERITY.HIGH,\n        timeout: 5000,\n        fallback: () => {\n          // Simple fallback hash for non-critical use\n          let hash = 0;\n          for (let i = 0; i < input.length; i++) {\n            const char = input.charCodeAt(i);\n            hash = ((hash << 5) - hash) + char;\n            hash &= hash; // Convert to 32-bit integer\n          }\n          return Math.abs(hash).toString(16);\n        },\n        context: {\n          operation: \"password_hashing\",\n          inputLength: input ? input.length : 0,\n        },\n      },\n    );\n  }\n\n  /**\n   * Store authenticated session securely\n   */\n  storeSecureSession() {\n    return safeAsync(\n      async () => {\n        if (!this.isAuthenticated || !this.sessionToken) {\n          throw new MedicalError(\n            \"Cannot store session: not authenticated\",\n            \"NOT_AUTHENTICATED\",\n            ERROR_CATEGORIES.AUTHENTICATION,\n            ERROR_SEVERITY.LOW,\n          );\n        }\n\n        if (typeof sessionStorage === \"undefined\") {\n          throw new MedicalError(\n            \"Session storage not available\",\n            \"STORAGE_UNAVAILABLE\",\n            ERROR_CATEGORIES.STORAGE,\n            ERROR_SEVERITY.MEDIUM,\n          );\n        }\n\n        // Store session data securely\n        sessionStorage.setItem(\"auth_session\", \"verified\");\n        sessionStorage.setItem(\"auth_timestamp\", this.lastActivity.toString());\n        sessionStorage.setItem(\"session_token\", this.sessionToken);\n        if (this.sessionExpiry) {\n          sessionStorage.setItem(\"session_expiry\", this.sessionExpiry.toISOString());\n        }\n\n        return true;\n      },\n      {\n        category: ERROR_CATEGORIES.STORAGE,\n        severity: ERROR_SEVERITY.LOW,\n        timeout: 1000,\n        fallback: (error) => {\n          console.warn(\"Failed to store session:\", error.message);\n          return false;\n        },\n        context: {\n          operation: \"store_session\",\n          hasToken: !!this.sessionToken,\n          hasExpiry: !!this.sessionExpiry,\n        },\n      },\n    );\n  }\n\n  /**\n   * Legacy method for compatibility\n   */\n  storeAuthSession() {\n    this.storeSecureSession();\n  }\n\n  /**\n   * Check for existing valid session\n   * @returns {boolean} - Stored session validity\n   */\n  checkStoredSession() {\n    try {\n      return safeAsync(\n        async () => {\n          if (typeof sessionStorage === \"undefined\") {\n            throw new MedicalError(\n              \"Session storage not available\",\n              \"STORAGE_UNAVAILABLE\",\n              ERROR_CATEGORIES.STORAGE,\n              ERROR_SEVERITY.LOW,\n            );\n          }\n\n          const session = await secureRetrieve(\"auth_session\", true);\n          const timestamp = await secureRetrieve(\"auth_timestamp\", true);\n          const storedToken = await secureRetrieve(\"session_token\", true);\n          const storedExpiry = await secureRetrieve(\"session_expiry\", true);\n\n          if (session === \"verified\" && timestamp && storedToken) {\n            // Check if session has expired\n            if (storedExpiry) {\n              const expiryDate = new Date(storedExpiry);\n              if (new Date() > expiryDate) {\n                this.logout();\n                return false;\n              }\n              this.sessionExpiry = expiryDate;\n            }\n\n            // Validate timestamp is a valid number\n            const timestampNum = parseInt(timestamp);\n            if (isNaN(timestampNum)) {\n              throw new MedicalError(\n                \"Invalid session timestamp\",\n                \"INVALID_SESSION_DATA\",\n                ERROR_CATEGORIES.STORAGE,\n                ERROR_SEVERITY.MEDIUM,\n              );\n            }\n\n            this.isAuthenticated = true;\n            this.sessionToken = storedToken;\n            this.lastActivity = timestampNum;\n            return true;\n          }\n\n          this.logout();\n          return false;\n        },\n        {\n          category: ERROR_CATEGORIES.STORAGE,\n          severity: ERROR_SEVERITY.LOW,\n          timeout: 1000,\n          fallback: (error) => {\n            console.warn(\"Failed to check stored session:\", error.message);\n            this.logout();\n            return false;\n          },\n          context: {\n            operation: \"check_stored_session\",\n          },\n        },\n      );\n    } catch (error) {\n      this.logout();\n      return false;\n    }\n  }\n\n  /**\n   * Setup activity tracking for session management\n   */\n  setupActivityTracking() {\n    // Track user interactions to maintain session\n    const events = [\"mousedown\", \"mousemove\", \"keypress\", \"scroll\", \"touchstart\"];\n\n    const updateActivity = () => {\n      if (this.isAuthenticated) {\n        this.updateActivity();\n      }\n    };\n\n    events.forEach((event) => {\n      document.addEventListener(event, updateActivity, { passive: true });\n    });\n  }\n\n  /**\n   * Rate limiting for failed authentication attempts\n   */\n  async delayFailedAttempt() {\n    return safeAsync(\n      async () => new Promise((resolve) => {\n        setTimeout(resolve, 1000); // 1 second delay\n      }),\n      {\n        category: ERROR_CATEGORIES.AUTHENTICATION,\n        severity: ERROR_SEVERITY.LOW,\n        timeout: 2000,\n        fallback: () =>\n          // If delay fails, continue without delay\n          Promise.resolve(),\n        context: {\n          operation: \"auth_delay\",\n        },\n      },\n    );\n  }\n\n  /**\n   * Get session status for UI\n   * @returns {object} - Session information\n   */\n  getSessionInfo() {\n    if (!this.isAuthenticated) {\n      return { authenticated: false };\n    }\n\n    const timeRemaining = this.sessionTimeout - (Date.now() - this.lastActivity);\n    const hoursRemaining = Math.floor(timeRemaining / (60 * 60 * 1000));\n    const minutesRemaining = Math.floor((timeRemaining % (60 * 60 * 1000)) / (60 * 1000));\n\n    return {\n      authenticated: true,\n      timeRemaining: `${hoursRemaining}h ${minutesRemaining}m`,\n      lastActivity: new Date(this.lastActivity).toLocaleTimeString(),\n    };\n  }\n}\n\n// Export singleton instance\nexport const authManager = new AuthenticationManager();\n","export function renderProgressIndicator(currentStep) {\n  const steps = [\n    { id: 1, label: \"Triage\" },\n    { id: 2, label: \"Assessment\" },\n    { id: 3, label: \"Results\" },\n  ];\n\n  let html = `\n    <div class=\"flex items-center justify-between mb-6 relative\">\n  `;\n\n  steps.forEach((step, index) => {\n    const isActive = step.id === currentStep;\n    const isCompleted = step.id < currentStep;\n\n    html += `\n      <div class=\"flex-1 flex flex-col items-center text-center relative\">\n        <!-- Step Circle -->\n        <div class=\"w-8 h-8 flex items-center justify-center rounded-full \n                    ${isCompleted ? \"bg-green-500 text-white\" : isActive ? \"bg-blue-500 text-white\" : \"bg-gray-300 text-gray-700\"} \n                    font-bold z-10\">\n          ${isCompleted ? \"✓\" : step.id}\n        </div>\n\n        <!-- Step Label -->\n        <span class=\"mt-2 text-xs ${isActive ? \"text-blue-500\" : \"text-gray-500\"}\">\n          ${step.label}\n        </span>\n\n        <!-- Connector Line (except last step) -->\n        ${\n  index < steps.length - 1\n    ? `<div class=\"absolute top-4 left-1/2 w-full h-1 ${isCompleted ? \"bg-green-500\" : \"bg-gray-300\"} z-0\"></div>`\n    : \"\"\n}\n      </div>\n    `;\n  });\n\n  html += \"</div>\";\n  return html;\n}\n","import { renderProgressIndicator } from \"../components/progress.js\";\nimport { GFAP_RANGES } from \"../../config.js\";\nimport { t } from \"../../localization/i18n.js\";\n\nexport function renderComa() {\n  return `\n\n   <div class=\"container mx-auto px-4 py-8 max-w-lg\">\n      <!-- Progress -->\n      <div class=\"mb-6\">\n        ${renderProgressIndicator(2)}\n      </div>\n\n        <div class=\"bg-white dark:bg-gray-800 shadow-lg rounded-2xl p-6\">\n        <!-- Title -->\n        <h2 class=\"text-2xl font-extrabold text-gray-900 dark:text-white mb-4 text-center\">\n             ${t(\"comaModuleTitle\") || \"Coma Module\"}\n        </h2>\n\n        <div class=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-xl mb-6\">\n             <form data-module=\"coma\" class=\"flex flex-col space-y-4\">\n                <div class=\"flex flex-col space-y-2\">\n                  <label for=\"gfap_value\" class=\"text-gray-700 dark:text-gray-200 font-semibold flex items-center space-x-2\">\n                    <span>${t(\"gfapValueLabel\")}</span>\n                    <span class=\"relative group cursor-pointer text-gray-400 dark:text-gray-300\">\n                      ℹ️\n                      <span class=\"absolute left-1/2 transform -translate-x-1/2 -top-8 w-56 p-2 bg-gray-800 text-white text-xs rounded opacity-0 group-hover:opacity-100 transition-opacity\">\n                        ${t(\"gfapTooltipLong\")}\n                      </span>\n                    </span>\n                  </label>\n                  <input\n                    type=\"number\"\n                    id=\"gfap_value\"\n                    name=\"gfap_value\"\n                    min=\"${GFAP_RANGES.min}\"\n                    max=\"${GFAP_RANGES.max}\"\n                    step=\"0.1\"\n                    required\n                    aria-describedby=\"gfap-help\"\n                    class=\"border border-gray-300 dark:border-gray-600 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                  >\n                  <div id=\"gfap-help\" class=\"text-gray-500 dark:text-gray-400 text-sm\">\n                    ${t(\"gfapRange\").replace(\"{min}\", GFAP_RANGES.min).replace(\"{max}\", GFAP_RANGES.max)}\n                  </div>\n                </div>\n       \n              <div class=\"flex flex-col sm:flex-row sm:space-x-4 space-y-2 sm:space-y-0\">\n                <button\n                  type=\"submit\"\n                  class=\"flex-1 bg-blue-500 hover:bg-blue-600 text-white font-semibold py-3 rounded-lg transition\"\n                >\n                  ${t(\"analyzeIchRisk\")}\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"flex-1 bg-gray-300 hover:bg-gray-400 text-gray-900 font-semibold py-3 rounded-lg transition\"\n                  data-action=\"reset\"\n                >\n                  ${t(\"startOver\")}\n                </button>\n              </div>\n            </form>\n      </div>\n    </div>\n  `;\n}\n","import { renderProgressIndicator } from \"../components/progress.js\";\nimport { GFAP_RANGES } from \"../../config.js\";\nimport { t } from \"../../localization/i18n.js\";\n\nexport function renderLimited() {\n  return `\n   <div class=\"container mx-auto px-4 py-8 max-w-lg\">\n        \n        <div class=\"mb-6 \">\n          ${renderProgressIndicator(2)}\n        \n        </div>\n\n           <div class=\"bg-white dark:bg-gray-800 shadow-lg rounded-2xl p-6\">\n            <!-- Title -->\n            <h2 class=\"text-2xl font-extrabold text-gray-900 dark:text-white mb-4 text-center\">\n              ${t(\"limitedDataModuleTitle\") || \"Limited Data Module\"}\n            </h2>\n              <p class=\"text-sm text-gray-500 dark:text-slate-400 mt-1\">${t(\"enterRequiredDetails\") || \"Enter the required data for limited module analysis\"}</p>\n\n                <form data-module=\"limited\" class=\"space-y-5\">\n          <div class=\"space-y-4\">\n            <!-- Age -->\n            <div class=\"flex flex-col\">\n              <label for=\"age_years\" class=\"text-sm font-medium text-gray-700 dark:text-slate-200\">${t(\"ageYearsLabel\")}</label>\n              <input type=\"number\" name=\"age_years\" id=\"age_years\"\n                     class=\"mt-1 bg-gray-50 dark:bg-slate-800 border border-gray-300 dark:border-slate-700 text-gray-900 dark:text-white rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:outline-none transition-colors duration-300\"\n                     min=\"0\" max=\"120\" required aria-describedby=\"age-help\">\n              <div id=\"age-help\" class=\"text-xs text-gray-500 dark:text-slate-400 mt-1\">${t(\"ageYearsHelp\")}</div>\n            </div>\n\n            <!-- Systolic BP -->\n            <div class=\"flex flex-col\">\n              <label for=\"systolic_bp\" class=\"text-sm font-medium text-gray-700 dark:text-slate-200\">${t(\"systolicBpLabel\")}</label>\n              <div class=\"relative\">\n                <input type=\"number\" name=\"systolic_bp\" id=\"systolic_bp\"\n                       class=\"mt-1 w-full bg-gray-50 dark:bg-slate-800 border border-gray-300 dark:border-slate-700 text-gray-900 dark:text-white rounded-lg px-3 py-2 pr-12 focus:ring-2 focus:ring-blue-500 focus:outline-none transition-colors duration-300\"\n                       min=\"60\" max=\"300\" required aria-describedby=\"sbp-help\" inputmode=\"numeric\">\n                <span class=\"absolute right-3 top-2.5 text-gray-400 dark:text-slate-400 text-sm\">mmHg</span>\n              </div>\n              <div id=\"sbp-help\" class=\"text-xs text-gray-500 dark:text-slate-400 mt-1\">${t(\"systolicBpHelp\")}</div>\n            </div>\n\n            <!-- Diastolic BP -->\n            <div class=\"flex flex-col\">\n              <label for=\"diastolic_bp\" class=\"text-sm font-medium text-gray-700 dark:text-slate-200\">${t(\"diastolicBpLabel\")}</label>\n              <div class=\"relative\">\n                <input type=\"number\" name=\"diastolic_bp\" id=\"diastolic_bp\"\n                       class=\"mt-1 w-full bg-gray-50 dark:bg-slate-800 border border-gray-300 dark:border-slate-700 text-gray-900 dark:text-white rounded-lg px-3 py-2 pr-12 focus:ring-2 focus:ring-blue-500 focus:outline-none transition-colors duration-300\"\n                       min=\"30\" max=\"200\" required aria-describedby=\"dbp-help\" inputmode=\"numeric\">\n                <span class=\"absolute right-3 top-2.5 text-gray-400 dark:text-slate-400 text-sm\">mmHg</span>\n              </div>\n              <div id=\"dbp-help\" class=\"text-xs text-gray-500 dark:text-slate-400 mt-1\">${t(\"diastolicBpHelp\")}</div>\n            </div>\n\n            <!-- GFAP Value -->\n            <div class=\"flex flex-col\">\n              <label for=\"gfap_value\" class=\"text-sm font-medium text-gray-700 dark:text-slate-200 flex items-center gap-2\">\n                ${t(\"gfapValueLabel\")}\n                <span class=\"tooltip relative group cursor-pointer\">\n                  ℹ️\n                  <span class=\"tooltiptext absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 bg-gray-800 dark:bg-slate-800 text-white text-xs rounded-lg p-2 opacity-0 group-hover:opacity-100 transition-opacity w-48 text-center z-10\">\n                    ${t(\"gfapTooltipLong\")}\n                  </span>\n                </span>\n              </label>\n              <div class=\"relative\">\n                <input type=\"number\" name=\"gfap_value\" id=\"gfap_value\"\n                       class=\"mt-1 w-full bg-gray-50 dark:bg-slate-800 border border-gray-300 dark:border-slate-700 text-gray-900 dark:text-white rounded-lg px-3 py-2 pr-12 focus:ring-2 focus:ring-blue-500 focus:outline-none transition-colors duration-300\"\n                       min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required inputmode=\"decimal\">\n                <span class=\"absolute right-3 top-2.5 text-gray-400 dark:text-slate-400 text-sm\">pg/mL</span>\n              </div>\n            </div>\n          </div>\n\n          <!-- Checkbox -->\n          <div class=\"flex items-center space-x-2\">\n            <input type=\"checkbox\" name=\"vigilanzminderung\" id=\"vigilanzminderung\"\n                   class=\"accent-blue-600 dark:accent-blue-500 w-4 h-4 rounded focus:ring-2 focus:ring-blue-600\">\n            <label for=\"vigilanzminderung\" class=\"text-sm text-gray-700 dark:text-slate-300\">${t(\"vigilanceReduction\")}</label>\n          </div>\n\n          <!-- Buttons -->\n          <div class=\"flex flex-col sm:flex-row sm:justify-between sm:space-x-2 space-y-3 sm:space-y-0 mt-6\">\n            <button type=\"submit\" class=\"w-full sm:w-auto bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-lg transition\">\n              ${t(\"analyzeIchRisk\")}\n            </button>\n            <button type=\"button\" class=\"w-full sm:w-auto bg-gray-200 hover:bg-gray-300 dark:bg-slate-700 dark:hover:bg-slate-600 text-gray-800 dark:text-white font-semibold py-2 px-4 rounded-lg transition\" data-action=\"reset\">\n              ${t(\"startOver\")}\n            </button>\n          </div>\n        </form>\n            </div>\n      </div>\n  `;\n}\n","import { renderProgressIndicator } from \"../components/progress.js\";\nimport { GFAP_RANGES } from \"../../config.js\";\nimport { t } from \"../../localization/i18n.js\";\n\nexport function renderFull() {\n  return `\n   <div class=\"container mx-auto px-4 py-8 max-w-lg\">\n        \n        <div class=\"mb-6\">\n          ${renderProgressIndicator(2)}\n        </div>\n\n        <div class=\"bg-white dark:bg-gray-800 shadow-lg rounded-2xl p-6\">\n          <!-- Title -->\n          <h2 class=\"text-2xl font-extrabold text-gray-900 dark:text-white mb-4 text-center\">\n            ${t(\"fullStrokeModuleTitle\") || \"Full Stroke Module\"}\n          </h2>\n          <p class=\"text-sm text-gray-500 dark:text-slate-400 mt-1 text-center\">\n            ${t(\"enterRequiredDetails\") || \"Enter the required data for full module analysis\"}\n          </p>\n\n          <form data-module=\"full\" class=\"space-y-8 mt-6\">\n\n            <!-- Basic Information -->\n            <div>\n              <h3 class=\"text-lg font-semibold text-gray-800 dark:text-white mb-3\">${t(\"basicInformation\")}</h3>\n              <div class=\"space-y-4\">\n                <!-- Age -->\n                <div class=\"flex flex-col\">\n                  <label for=\"age_years\" class=\"text-sm font-medium text-gray-700 dark:text-slate-200\">${t(\"ageYearsLabel\")}</label>\n                  <input type=\"number\" name=\"age_years\" id=\"age_years\"\n                         class=\"mt-1 bg-gray-50 dark:bg-slate-800 border border-gray-300 dark:border-slate-700 \n                                text-gray-900 dark:text-white rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:outline-none\"\n                         min=\"0\" max=\"120\" required>\n                </div>\n\n                <!-- Systolic BP -->\n                <div class=\"flex flex-col\">\n                  <label for=\"systolic_bp\" class=\"text-sm font-medium text-gray-700 dark:text-slate-200\">${t(\"systolicBpLabel\")}</label>\n                  <div class=\"relative\">\n                    <input type=\"number\" name=\"systolic_bp\" id=\"systolic_bp\"\n                           class=\"mt-1 w-full bg-gray-50 dark:bg-slate-800 border border-gray-300 dark:border-slate-700 \n                                  text-gray-900 dark:text-white rounded-lg px-3 py-2 pr-12 focus:ring-2 focus:ring-blue-500 focus:outline-none\"\n                           min=\"60\" max=\"300\" required inputmode=\"numeric\">\n                    <span class=\"absolute right-3 top-2.5 text-gray-400 dark:text-slate-400 text-sm\">mmHg</span>\n                  </div>\n                </div>\n\n                <!-- Diastolic BP -->\n                <div class=\"flex flex-col\">\n                  <label for=\"diastolic_bp\" class=\"text-sm font-medium text-gray-700 dark:text-slate-200\">${t(\"diastolicBpLabel\")}</label>\n                  <div class=\"relative\">\n                    <input type=\"number\" name=\"diastolic_bp\" id=\"diastolic_bp\"\n                           class=\"mt-1 w-full bg-gray-50 dark:bg-slate-800 border border-gray-300 dark:border-slate-700 \n                                  text-gray-900 dark:text-white rounded-lg px-3 py-2 pr-12 focus:ring-2 focus:ring-blue-500 focus:outline-none\"\n                           min=\"30\" max=\"200\" required inputmode=\"numeric\">\n                    <span class=\"absolute right-3 top-2.5 text-gray-400 dark:text-slate-400 text-sm\">mmHg</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Biomarkers & Scores -->\n            <div>\n              <h3 class=\"text-lg font-semibold text-gray-800 dark:text-white mb-3\">${t(\"biomarkersScores\")}</h3>\n              <div class=\"space-y-4\">\n\n                <!-- GFAP -->\n                <div class=\"flex flex-col\">\n                  <label for=\"gfap_value\" class=\"text-sm font-medium text-gray-700 dark:text-slate-200 flex items-center gap-2\">\n                    ${t(\"gfapValueLabel\")}\n                    <span class=\"tooltip relative group cursor-pointer\">\n                      ℹ️\n                      <span class=\"tooltiptext absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 bg-gray-800 dark:bg-slate-800 text-white text-xs rounded-lg p-2 opacity-0 group-hover:opacity-100 transition-opacity w-48 text-center z-10\">\n                        ${t(\"gfapTooltip\")}\n                      </span>\n                    </span>\n                  </label>\n                  <div class=\"relative\">\n                    <input type=\"number\" name=\"gfap_value\" id=\"gfap_value\"\n                           class=\"mt-1 w-full bg-gray-50 dark:bg-slate-800 border border-gray-300 dark:border-slate-700 \n                                  text-gray-900 dark:text-white rounded-lg px-3 py-2 pr-12 focus:ring-2 focus:ring-blue-500 focus:outline-none\"\n                           min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required inputmode=\"decimal\">\n                    <span class=\"absolute right-3 top-2.5 text-gray-400 dark:text-slate-400 text-sm\">pg/mL</span>\n                  </div>\n                </div>\n\n                <!-- FAST-ED Score -->\n                <div class=\"flex flex-col\">\n                  <label for=\"fast_ed_score\" class=\"text-sm font-medium text-gray-700 dark:text-slate-200 flex items-center gap-2\">\n                    ${t(\"fastEdScoreLabel\")}\n                    <span class=\"tooltip relative group cursor-pointer\">\n                      ℹ️\n                      <span class=\"tooltiptext absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 bg-gray-800 dark:bg-slate-800 text-white text-xs rounded-lg p-2 opacity-0 group-hover:opacity-100 transition-opacity w-48 text-center z-10\">\n                        ${t(\"fastEdCalculatorSubtitle\")}\n                      </span>\n                    </span>\n                  </label>\n                  <input type=\"number\" name=\"fast_ed_score\" id=\"fast_ed_score\"\n                         class=\"mt-1 bg-gray-50 dark:bg-slate-800 border border-gray-300 dark:border-slate-700 \n                                text-gray-900 dark:text-white rounded-lg px-3 py-2 cursor-pointer focus:ring-2 focus:ring-blue-500 focus:outline-none\"\n                         min=\"0\" max=\"9\" required readonly placeholder=\"${t(\"fastEdCalculatorSubtitle\")}\">\n                  <input type=\"hidden\" name=\"armparese\" id=\"armparese_hidden\" value=\"false\">\n                  <input type=\"hidden\" name=\"eye_deviation\" id=\"eye_deviation_hidden\" value=\"false\">\n                </div>\n              </div>\n            </div>\n\n            <!-- Clinical Symptoms -->\n            <div>\n              <h3 class=\"text-lg font-semibold text-gray-800 dark:text-white mb-3\">${t(\"clinicalSymptoms\")}</h3>\n              <div class=\"space-y-2\">\n                <label class=\"flex items-center space-x-2\">\n                  <input type=\"checkbox\" name=\"headache\" id=\"headache\" class=\"accent-blue-600 dark:accent-blue-500 w-4 h-4 rounded\">\n                  <span class=\"text-sm text-gray-700 dark:text-slate-300\">${t(\"headacheLabel\")}</span>\n                </label>\n                <label class=\"flex items-center space-x-2\">\n                  <input type=\"checkbox\" name=\"vigilanzminderung\" id=\"vigilanzminderung\" class=\"accent-blue-600 dark:accent-blue-500 w-4 h-4 rounded\">\n                  <span class=\"text-sm text-gray-700 dark:text-slate-300\">${t(\"vigilanzLabel\")}</span>\n                </label>\n                <label class=\"flex items-center space-x-2\">\n                  <input type=\"checkbox\" name=\"beinparese\" id=\"beinparese\" class=\"accent-blue-600 dark:accent-blue-500 w-4 h-4 rounded\">\n                  <span class=\"text-sm text-gray-700 dark:text-slate-300\">${t(\"legParesis\")}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Medical History -->\n            <div>\n              <h3 class=\"text-lg font-semibold text-gray-800 dark:text-white mb-3\">${t(\"medicalHistory\")}</h3>\n              <div class=\"space-y-2\">\n                <label class=\"flex items-center space-x-2\">\n                  <input type=\"checkbox\" name=\"atrial_fibrillation\" id=\"atrial_fibrillation\" class=\"accent-blue-600 dark:accent-blue-500 w-4 h-4 rounded\">\n                  <span class=\"text-sm text-gray-700 dark:text-slate-300\">${t(\"atrialFibrillation\")}</span>\n                </label>\n                <label class=\"flex items-center space-x-2\">\n                  <input type=\"checkbox\" name=\"anticoagulated_noak\" id=\"anticoagulated_noak\" class=\"accent-blue-600 dark:accent-blue-500 w-4 h-4 rounded\">\n                  <span class=\"text-sm text-gray-700 dark:text-slate-300\">${t(\"onNoacDoac\")}</span>\n                </label>\n                <label class=\"flex items-center space-x-2\">\n                  <input type=\"checkbox\" name=\"antiplatelets\" id=\"antiplatelets\" class=\"accent-blue-600 dark:accent-blue-500 w-4 h-4 rounded\">\n                  <span class=\"text-sm text-gray-700 dark:text-slate-300\">${t(\"onAntiplatelets\")}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Buttons -->\n            <div class=\"flex flex-col sm:flex-row sm:justify-between sm:space-x-2 space-y-3 sm:space-y-0 mt-6\">\n              <button type=\"submit\" class=\"w-full sm:w-auto bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-lg transition\">\n                ${t(\"analyzeStrokeRisk\")}\n              </button>\n              <button type=\"button\" class=\"w-full sm:w-auto bg-gray-200 hover:bg-gray-300 dark:bg-slate-700 dark:hover:bg-slate-600 text-gray-800 dark:text-white font-semibold py-2 px-4 rounded-lg transition\" data-action=\"reset\">\n                ${t(\"startOver\")}\n              </button>\n            </div>\n\n          </form>\n        </div>\n      </div>\n  `;\n}\n","import { t } from \"../../localization/i18n.js\";\n\nexport function renderCriticalAlert() {\n  return `\n   <div class=\"critical-alert bg-red-50 dark:bg-red-900/40 border-l-4 border-red-600 rounded-lg p-4 shadow-sm flex flex-col gap-2 transition-all duration-300 hover:shadow-md mb-3\">\n  <h4 class=\"flex items-center gap-2 text-red-700 dark:text-red-300 font-semibold text-lg\">\n    <span class=\"alert-icon text-xl\">🚨</span>\n    ${t(\"criticalAlertTitle\")}\n  </h4>\n  <p class=\"text-gray-700 dark:text-gray-300 leading-relaxed text-sm\">\n    ${t(\"criticalAlertMessage\")}\n  </p>\n</div>\n\n  `;\n}\n","// User-friendly label formatter for technical field names\n// Converts technical driver and field names to user-friendly labels\n\nimport { t } from \"../localization/i18n.js\";\n\n/**\n * Mapping of technical field names to the same labels used in input forms\n * Uses existing localization keys from the input forms\n */\nconst FIELD_LABEL_MAP = {\n  // Age and demographics\n  age_years: \"ageLabel\",\n  age: \"ageLabel\",\n\n  // Blood pressure\n  systolic_bp: \"systolicLabel\",\n  diastolic_bp: \"diastolicLabel\",\n  systolic_blood_pressure: \"systolicLabel\",\n  diastolic_blood_pressure: \"diastolicLabel\",\n  blood_pressure_systolic: \"systolicLabel\",\n  blood_pressure_diastolic: \"diastolicLabel\",\n\n  // Biomarkers\n  gfap_value: \"gfapLabel\",\n  gfap: \"gfapLabel\",\n  gfap_level: \"gfapLabel\",\n\n  // Clinical scores\n  fast_ed_score: \"fastEdLabel\",\n  fast_ed: \"fastEdLabel\",\n  fast_ed_total: \"fastEdLabel\",\n\n  // Neurological symptoms\n  vigilanzminderung: \"vigilanzLabel\",\n  vigilance_reduction: \"vigilanzLabel\",\n  reduced_consciousness: \"vigilanzLabel\",\n  armparese: \"armPareseLabel\",\n  arm_paresis: \"armPareseLabel\",\n  arm_weakness: \"armPareseLabel\",\n  beinparese: \"beinPareseLabel\",\n  leg_paresis: \"beinPareseLabel\",\n  leg_weakness: \"beinPareseLabel\",\n  eye_deviation: \"eyeDeviationLabel\",\n  blickdeviation: \"eyeDeviationLabel\",\n  headache: \"headacheLabel\",\n  kopfschmerzen: \"headacheLabel\",\n\n  // Medical history\n  atrial_fibrillation: \"atrialFibLabel\",\n  vorhofflimmern: \"atrialFibLabel\",\n  anticoagulated_noak: \"anticoagLabel\",\n  anticoagulation: \"anticoagLabel\",\n  antiplatelets: \"antiplateletsLabel\",\n  thrombozytenaggregationshemmer: \"antiplateletsLabel\",\n};\n\n/**\n * Fallback patterns for common technical terms\n * Used when no specific mapping exists\n */\nconst PATTERN_REPLACEMENTS = [\n  { pattern: /_score$/, replacement: \" Score\" },\n  { pattern: /_value$/, replacement: \" Level\" },\n  { pattern: /_bp$/, replacement: \" Blood Pressure\" },\n  { pattern: /_years?$/, replacement: \" (years)\" },\n  { pattern: /^ich_/, replacement: \"Brain Bleeding \" },\n  { pattern: /^lvo_/, replacement: \"Large Vessel \" },\n  { pattern: /parese$/, replacement: \"Weakness\" },\n  { pattern: /deviation$/, replacement: \"Movement\" },\n];\n\n/**\n * Format a technical field name using the same labels as input forms\n * @param {string} fieldName - Technical field name (e.g., 'fast_ed_score')\n * @returns {string} - Consistent medical terminology label\n */\nexport function formatDriverName(fieldName) {\n  if (!fieldName) {\n    return \"\";\n  }\n\n  // First, try to find exact match in mapping to input form labels\n  const mappedKey = FIELD_LABEL_MAP[fieldName.toLowerCase()];\n  if (mappedKey) {\n    const translated = t(mappedKey);\n    if (translated && translated !== mappedKey) {\n      return translated;\n    }\n  }\n\n  // Apply pattern-based replacements for common medical terms\n  let formatted = fieldName.toLowerCase();\n  PATTERN_REPLACEMENTS.forEach(({ pattern, replacement }) => {\n    formatted = formatted.replace(pattern, replacement);\n  });\n\n  // Clean up and format - keep medical terminology consistent\n  formatted = formatted\n    .replace(/_/g, \" \") // Replace underscores with spaces\n    .replace(/\\b\\w/g, l => l.toUpperCase()) // Title case\n    .trim();\n\n  return formatted;\n}\n\n/**\n * Format field names for input summary display\n * @param {string} fieldName - Technical field name\n * @returns {string} - User-friendly label for summary\n */\nexport function formatSummaryLabel(fieldName) {\n  // Use the same logic but with specific summary context\n  const friendlyLabel = formatDriverName(fieldName);\n\n  // Remove units from summary labels as they're shown in values\n  return friendlyLabel\n    .replace(/\\s*\\([^)]*\\)\\s*/g, \"\") // Remove anything in parentheses\n    .trim();\n}\n\n/**\n * Format field values for display\n * @param {any} value - Field value\n * @param {string} fieldName - Field name for context\n * @returns {string} - Formatted display value\n */\nexport function formatDisplayValue(value, fieldName = \"\") {\n  if (value === null || value === undefined || value === \"\") {\n    return \"\";\n  }\n\n  if (typeof value === \"boolean\") {\n    return value ? \"✓\" : \"✗\";\n  }\n\n  if (typeof value === \"number\") {\n    // Add units based on field type\n    if (fieldName.includes(\"bp\") || fieldName.includes(\"blood_pressure\")) {\n      return `${value} mmHg`;\n    }\n    if (fieldName.includes(\"gfap\")) {\n      return `${value} pg/mL`;\n    }\n    if (fieldName.includes(\"age\")) {\n      return `${value} years`;\n    }\n    if (fieldName.includes(\"score\")) {\n      return value.toString();\n    }\n\n    // Default number formatting\n    return Number.isInteger(value) ? value.toString() : value.toFixed(1);\n  }\n\n  return value.toString();\n}\n\n/**\n * Get a short description for a clinical field\n * @param {string} fieldName - Technical field name\n * @returns {string} - Brief description\n */\nexport function getFieldDescription(fieldName) {\n  const descriptions = {\n    fast_ed_score: \"Stroke severity assessment\",\n    gfap_value: \"Brain injury biomarker\",\n    vigilanzminderung: \"Level of consciousness\",\n    systolic_bp: \"Upper blood pressure reading\",\n    diastolic_bp: \"Lower blood pressure reading\",\n    atrial_fibrillation: \"Irregular heart rhythm\",\n    anticoagulated_noak: \"Blood-thinning medication\",\n    antiplatelets: \"Anti-clotting medication\",\n  };\n\n  return descriptions[fieldName.toLowerCase()] || \"\";\n}\n","import { t } from \"../../localization/i18n.js\";\nimport { formatDriverName } from \"../../utils/label-formatter.js\";\nimport { normalizeDrivers } from \"../../logic/shap.js\";\n\nexport function renderDriversSection(ich, lvo) {\n  // ('=== DRIVER RENDERING SECTION ===');\n\n  if (!ich?.drivers && !lvo?.drivers) {\n    // ('❌ No drivers available for rendering');\n    return \"\";\n  }\n\n  let html = `\n    <div class=\"drivers-section bg-white p-6 md:p-8 rounded-2xl shadow-sm drivers-section\">\n      <div class=\"drivers-header flex flex-col md:flex-row md:items-center md:justify-between gap-3 drivers-header\">\n        <div class=\"flex items-start md:items-center gap-3\">\n          <h3 class=\"driver-title text-lg md:text-xl font-semibold leading-tight flex items-center gap-2\">\n            <span class=\"driver-header-icon text-2xl\">🎯</span>\n            ${t(\"riskAnalysis\")}\n          </h3>\n          <p class=\"drivers-subtitle text-sm text-gray-500 mt-1 md:mt-0\">${t(\"riskAnalysisSubtitle\")}</p>\n        </div>\n        <!-- place for header actions (optional) -->\n        <div class=\"drivers-actions flex items-center gap-2\"></div>\n      </div>\n      <div class=\"enhanced-drivers-grid flex flex-col gap-4 mt-6 enhanced-drivers-grid\">\n  `;\n\n  console.log(\"[Drivers] ICH has drivers:\", !!ich?.drivers, ich?.drivers);\n  console.log(\n    \"[Drivers] LVO has drivers:\",\n    !!lvo?.drivers,\n    \"notPossible:\",\n    lvo?.notPossible,\n    lvo?.drivers\n  );\n\n  if (ich?.drivers) {\n    console.log(\"🧠 Rendering ICH drivers panel\");\n    html += renderEnhancedDriversPanel(ich.drivers, \"ICH\", \"ich\", ich.probability);\n  }\n\n  if (lvo?.drivers && !lvo.notPossible) {\n    console.log(\"🩸 Rendering LVO drivers panel\");\n    html += renderEnhancedDriversPanel(lvo.drivers, \"LVO\", \"lvo\", lvo.probability);\n  }\n\n  html += `\n      </div>\n    </div>\n  `;\n  return html;\n}\n\nexport function renderDriversPanel(drivers, title, type) {\n  if (!drivers || Object.keys(drivers).length === 0) {\n    return `\n      <div class=\"drivers-panel\">\n        <h4>\n          <span class=\"driver-icon ${type}\">${type === \"ich\" ? \"I\" : \"L\"}</span>\n          ${title} ${t(\"riskFactors\")}\n        </h4>\n        <p style=\"color: var(--text-secondary); font-style: italic;\">\n          Driver information not available from this prediction model.\n        </p>\n      </div>\n    `;\n  }\n\n  const driversViewModel = normalizeDrivers(drivers);\n\n  if (driversViewModel.kind === \"unavailable\") {\n    return `\n      <div class=\"drivers-panel\">\n        <h4>\n          <span class=\"driver-icon ${type}\">${type === \"ich\" ? \"I\" : \"L\"}</span>\n          ${title} ${t(\"riskFactors\")}\n        </h4>\n        <p style=\"color: var(--text-secondary); font-style: italic;\">\n          Driver analysis not available for this prediction.\n        </p>\n      </div>\n    `;\n  }\n\n  let html = `\n    <div class=\"drivers-panel\">\n      <h4>\n        <span class=\"driver-icon ${type}\">${type === \"ich\" ? \"I\" : \"L\"}</span>\n        ${title} Risk Factors\n      </h4>\n  `;\n\n  // Calculate relative importance for legacy panel\n  const totalPositiveWeightLegacy = driversViewModel.positive.reduce(\n    (sum, d) => sum + Math.abs(d.weight),\n    0\n  );\n  const totalNegativeWeightLegacy = driversViewModel.negative.reduce(\n    (sum, d) => sum + Math.abs(d.weight),\n    0\n  );\n\n  // Show positive drivers (increase risk)\n  if (driversViewModel.positive.length > 0) {\n    driversViewModel.positive.forEach(driver => {\n      const relativeImportance =\n        totalPositiveWeightLegacy > 0\n          ? (Math.abs(driver.weight) / totalPositiveWeightLegacy) * 100\n          : 0;\n      const width = Math.min(relativeImportance * 2, 100); // Scale for visualization\n      html += `\n        <div class=\"driver-item\">\n          <span class=\"driver-label\">${driver.label}</span>\n          <div class=\"driver-bar-container\">\n            <div class=\"driver-bar positive\" style=\"width: ${width}%\">\n              <span class=\"driver-value\">+${relativeImportance.toFixed(0)}%</span>\n            </div>\n          </div>\n        </div>\n      `;\n    });\n  }\n\n  // Show negative drivers (decrease risk)\n  if (driversViewModel.negative.length > 0) {\n    driversViewModel.negative.forEach(driver => {\n      const relativeImportance =\n        totalNegativeWeightLegacy > 0\n          ? (Math.abs(driver.weight) / totalNegativeWeightLegacy) * 100\n          : 0;\n      const width = Math.min(relativeImportance * 2, 100); // Scale for visualization\n      html += `\n        <div class=\"driver-item\">\n          <span class=\"driver-label\">${driver.label}</span>\n          <div class=\"driver-bar-container\">\n            <div class=\"driver-bar negative\" style=\"width: ${width}%\">\n              <span class=\"driver-value\">-${relativeImportance.toFixed(0)}%</span>\n            </div>\n          </div>\n        </div>\n      `;\n    });\n  }\n\n  // Show metadata if available\n  if (driversViewModel.meta && Object.keys(driversViewModel.meta).length > 0) {\n    html += `\n      <div style=\"margin-top: 15px; padding-top: 10px; border-top: 1px solid var(--border-color);\">\n        <small style=\"color: var(--text-secondary);\">\n    `;\n\n    if (driversViewModel.meta.base_value !== undefined) {\n      html += `Base value: ${driversViewModel.meta.base_value.toFixed(2)} `;\n    }\n    if (driversViewModel.meta.contrib_sum !== undefined) {\n      html += `Contrib sum: ${driversViewModel.meta.contrib_sum.toFixed(2)} `;\n    }\n    if (driversViewModel.meta.logit_total !== undefined) {\n      html += `Logit total: ${driversViewModel.meta.logit_total.toFixed(2)}`;\n    }\n\n    html += `\n        </small>\n      </div>\n    `;\n  }\n\n  html += \"</div>\";\n  return html;\n}\n\nexport function renderEnhancedDriversPanel(drivers, title, type, probability) {\n  if (!drivers || Object.keys(drivers).length === 0) {\n    return `\n      <div class=\"rounded-xl border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900 p-6 text-center shadow-sm\">\n        <div class=\"flex flex-col items-center justify-center gap-2\">\n          <div class=\"text-3xl ${type === \"ich\" ? \"text-blue-500\" : \"text-red-500\"}\">\n            ${type === \"ich\" ? \"🧠\" : \"🩸\"}\n          </div>\n          <h4 class=\"text-lg font-semibold text-gray-800 dark:text-gray-100\">${title} ${t(\"riskFactors\")}</h4>\n          <p class=\"text-sm text-gray-500 dark:text-gray-400\">${t(\"noDriverData\")}</p>\n          <p class=\"italic text-gray-400\">${t(\"driverInfoNotAvailable\")}</p>\n        </div>\n      </div>\n    `;\n  }\n\n  const driversViewModel = drivers;\n  if (driversViewModel.kind === \"unavailable\") {\n    return `\n      <div class=\"rounded-xl border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900 p-6 text-center shadow-sm\">\n        <div class=\"flex flex-col items-center justify-center gap-2\">\n          <div class=\"text-3xl ${type === \"ich\" ? \"text-blue-500\" : \"text-red-500\"}\">\n            ${type === \"ich\" ? \"🧠\" : \"🩸\"}\n          </div>\n          <h4 class=\"text-lg font-semibold text-gray-800 dark:text-gray-100\">${title} ${t(\"riskFactors\")}</h4>\n          <p class=\"text-sm text-gray-500 dark:text-gray-400\">${t(\"driverAnalysisUnavailable\")}</p>\n          <p class=\"italic text-gray-400\">${t(\"driverAnalysisNotAvailable\")}</p>\n        </div>\n      </div>\n    `;\n  }\n\n  const positiveDrivers = (driversViewModel.positive || [])\n    .sort((a, b) => Math.abs(b.weight) - Math.abs(a.weight))\n    .slice(0, 3);\n\n  const negativeDrivers = (driversViewModel.negative || [])\n    .sort((a, b) => Math.abs(b.weight) - Math.abs(a.weight))\n    .slice(0, 3);\n\n  const maxWeight = Math.max(\n    ...positiveDrivers.map(d => Math.abs(d.weight)),\n    ...negativeDrivers.map(d => Math.abs(d.weight)),\n    0.01\n  );\n\n  let html = `\n    <div class=\"rounded-xl border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900 shadow-sm p-6\">\n      <div class=\"flex items-center gap-3 mb-6\">\n        <div class=\"text-3xl ${type === \"ich\" ? \"text-blue-500\" : \"text-red-500\"}\">\n          ${type === \"ich\" ? \"🧠\" : \"🩸\"}\n        </div>\n        <div>\n          <h4 class=\"text-lg font-semibold text-gray-800 dark:text-gray-100\">${title} ${t(\"riskFactors\")}</h4>\n          <p class=\"text-sm text-gray-500 dark:text-gray-400\">${t(\"contributingFactors\")}</p>\n        </div>\n      </div>\n\n      <div class=\"grid md:grid-cols-2 gap-6\">\n  `;\n\n  // ✅ Positive Drivers\n  html += `\n    <div class=\"rounded-lg bg-green-50 dark:bg-green-950/30 border border-green-200 dark:border-green-700 p-4\">\n      <div class=\"flex items-center gap-2 mb-3\">\n        <span class=\"text-green-600 dark:text-green-400 text-lg\">⬆</span>\n        <span class=\"text-sm font-semibold text-green-700 dark:text-green-300\">${t(\"increaseRisk\")}</span>\n      </div>\n      <div class=\"space-y-3\">\n  `;\n\n  const totalPositiveWeight = positiveDrivers.reduce((sum, d) => sum + Math.abs(d.weight), 0);\n\n  if (positiveDrivers.length > 0) {\n    positiveDrivers.forEach(driver => {\n      const relativeImportance =\n        totalPositiveWeight > 0 ? (Math.abs(driver.weight) / totalPositiveWeight) * 100 : 0;\n      const barWidth = (Math.abs(driver.weight) / maxWeight) * 100;\n      const cleanLabel = formatDriverName(driver.label);\n\n      html += `\n        <div class=\"flex justify-between items-center text-sm bg-white dark:bg-gray-800 rounded-md px-3 py-2 shadow-sm border border-green-100 dark:border-green-800\">\n          <span class=\"text-gray-700 dark:text-gray-300\">${cleanLabel}</span>\n          <span class=\"text-green-600 dark:text-green-400 font-semibold\">+${relativeImportance.toFixed(0)}%</span>\n        </div>\n      `;\n    });\n  } else {\n    html += `<p class=\"text-sm italic text-gray-500 dark:text-gray-400\">${t(\"noPositiveFactors\")}</p>`;\n  }\n\n  html += `\n      </div>\n    </div>\n  `;\n\n  // ✅ Negative Drivers\n  html += `\n    <div class=\"rounded-lg bg-red-50 dark:bg-red-950/30 border border-red-200 dark:border-red-700 p-4\">\n      <div class=\"flex items-center gap-2 mb-3\">\n        <span class=\"text-red-600 dark:text-red-400 text-lg\">⬇</span>\n        <span class=\"text-sm font-semibold text-red-700 dark:text-red-300\">${t(\"decreaseRisk\")}</span>\n      </div>\n      <div class=\"space-y-3\">\n  `;\n\n  const totalNegativeWeight = negativeDrivers.reduce((sum, d) => sum + Math.abs(d.weight), 0);\n\n  if (negativeDrivers.length > 0) {\n    negativeDrivers.forEach(driver => {\n      const relativeImportance =\n        totalNegativeWeight > 0 ? (Math.abs(driver.weight) / totalNegativeWeight) * 100 : 0;\n      const barWidth = (Math.abs(driver.weight) / maxWeight) * 100;\n      const cleanLabel = formatDriverName(driver.label);\n\n      html += `\n        <div class=\"flex justify-between items-center text-sm bg-white dark:bg-gray-800 rounded-md px-3 py-2 shadow-sm border border-red-100 dark:border-red-800\">\n          <span class=\"text-gray-700 dark:text-gray-300\">${cleanLabel}</span>\n          <span class=\"text-red-600 dark:text-red-400 font-semibold\">-${relativeImportance.toFixed(0)}%</span>\n        </div>\n      `;\n    });\n  } else {\n    html += `<p class=\"text-sm italic text-gray-500 dark:text-gray-400\">${t(\"noNegativeFactors\")}</p>`;\n  }\n\n  html += `\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\n  return html;\n}\n","// Comprehensive stroke center database for Germany\n// Covers Bayern, Baden-Württemberg, and Nordrhein-Westfalen\n// Total: 316 hospitals with hierarchical capabilities\n\nconst COMPREHENSIVE_HOSPITAL_DATABASE = {\n  bayern: {\n    neurosurgicalCenters: [\n      {\n        id: \"BY-NS-001\",\n        name: \"LMU Klinikum München - Großhadern\",\n        address: \"Marchioninistraße 15, 81377 München\",\n        coordinates: { lat: 48.1106, lng: 11.4684 },\n        phone: \"+49 89 4400-0\",\n        emergency: \"+49 89 4400-73331\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1440,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-NS-002\",\n        name: \"Klinikum rechts der Isar München (TUM)\",\n        address: \"Ismaninger Str. 22, 81675 München\",\n        coordinates: { lat: 48.1497, lng: 11.6052 },\n        phone: \"+49 89 4140-0\",\n        emergency: \"+49 89 4140-2249\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1161,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-NS-003\",\n        name: \"Städtisches Klinikum München Schwabing\",\n        address: \"Kölner Platz 1, 80804 München\",\n        coordinates: { lat: 48.1732, lng: 11.5755 },\n        phone: \"+49 89 3068-0\",\n        emergency: \"+49 89 3068-2050\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 648,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-NS-004\",\n        name: \"Städtisches Klinikum München Bogenhausen\",\n        address: \"Englschalkinger Str. 77, 81925 München\",\n        coordinates: { lat: 48.1614, lng: 11.6254 },\n        phone: \"+49 89 9270-0\",\n        emergency: \"+49 89 9270-2050\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 689,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-NS-005\",\n        name: \"Universitätsklinikum Erlangen\",\n        address: \"Maximiliansplatz 2, 91054 Erlangen\",\n        coordinates: { lat: 49.5982, lng: 11.0037 },\n        phone: \"+49 9131 85-0\",\n        emergency: \"+49 9131 85-39003\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1371,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-NS-006\",\n        name: \"Universitätsklinikum Regensburg\",\n        address: \"Franz-Josef-Strauß-Allee 11, 93053 Regensburg\",\n        coordinates: { lat: 49.0134, lng: 12.0991 },\n        phone: \"+49 941 944-0\",\n        emergency: \"+49 941 944-7501\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1042,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-NS-007\",\n        name: \"Universitätsklinikum Würzburg\",\n        address: \"Oberdürrbacher Str. 6, 97080 Würzburg\",\n        coordinates: { lat: 49.7840, lng: 9.9721 },\n        phone: \"+49 931 201-0\",\n        emergency: \"+49 931 201-24444\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1264,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-NS-008\",\n        name: \"Klinikum Nürnberg Nord\",\n        address: \"Prof.-Ernst-Nathan-Str. 1, 90419 Nürnberg\",\n        coordinates: { lat: 49.4521, lng: 11.0767 },\n        phone: \"+49 911 398-0\",\n        emergency: \"+49 911 398-2369\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1368,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-NS-009\",\n        name: \"Universitätsklinikum Augsburg\",\n        address: \"Stenglinstr. 2, 86156 Augsburg\",\n        coordinates: { lat: 48.3668, lng: 10.9093 },\n        phone: \"+49 821 400-01\",\n        emergency: \"+49 821 400-2356\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1740,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-NS-010\",\n        name: \"Klinikum Aschaffenburg-Alzenau\",\n        address: \"Am Hasenkopf 1, 63739 Aschaffenburg\",\n        coordinates: { lat: 49.9737, lng: 9.1570 },\n        phone: \"+49 6021 32-0\",\n        emergency: \"+49 6021 32-2800\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 40,\n        network: \"TRANSIT\",\n      },\n      {\n        id: \"BY-NS-011\",\n        name: \"Klinikum Landshut\",\n        address: \"Robert-Koch-Str. 1, 84034 Landshut\",\n        coordinates: { lat: 48.5665, lng: 12.1512 },\n        phone: \"+49 871 698-0\",\n        emergency: \"+49 871 698-3333\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 505,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-NS-012\",\n        name: \"Klinikum Coburg\",\n        address: \"Ketschendorfer Str. 33, 96450 Coburg\",\n        coordinates: { lat: 50.2596, lng: 10.9644 },\n        phone: \"+49 9561 22-0\",\n        emergency: \"+49 9561 22-6800\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 547,\n        network: \"STENO\",\n      },\n      {\n        id: \"BY-NS-013\",\n        name: \"Klinikum Passau\",\n        address: \"Bischof-Pilgrim-Str. 1, 94032 Passau\",\n        coordinates: { lat: 48.5665, lng: 13.4777 },\n        phone: \"+49 851 5300-0\",\n        emergency: \"+49 851 5300-2222\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 696,\n        network: \"TEMPiS\",\n      },\n    ],\n\n    comprehensiveStrokeCenters: [\n      {\n        id: \"BY-CS-001\",\n        name: \"Klinikum Bamberg\",\n        address: \"Buger Str. 80, 96049 Bamberg\",\n        coordinates: { lat: 49.8988, lng: 10.9027 },\n        phone: \"+49 951 503-0\",\n        emergency: \"+49 951 503-11101\",\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 630,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-CS-002\",\n        name: \"Klinikum Bayreuth\",\n        address: \"Preuschwitzer Str. 101, 95445 Bayreuth\",\n        coordinates: { lat: 49.9459, lng: 11.5779 },\n        phone: \"+49 921 400-0\",\n        emergency: \"+49 921 400-5401\",\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 848,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-CS-003\",\n        name: \"Klinikum Coburg\",\n        address: \"Ketschendorfer Str. 33, 96450 Coburg\",\n        coordinates: { lat: 50.2596, lng: 10.9685 },\n        phone: \"+49 9561 22-0\",\n        emergency: \"+49 9561 22-6300\",\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 522,\n        network: \"TEMPiS\",\n      },\n    ],\n\n    regionalStrokeUnits: [\n      {\n        id: \"BY-RSU-001\",\n        name: \"Goldberg-Klinik Kelheim\",\n        address: \"Traubenweg 3, 93309 Kelheim\",\n        coordinates: { lat: 48.9166, lng: 11.8742 },\n        phone: \"+49 9441 702-0\",\n        emergency: \"+49 9441 702-6800\",\n        thrombolysis: true,\n        beds: 200,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-RSU-002\",\n        name: \"DONAUISAR Klinikum Deggendorf\",\n        address: \"Perlasberger Str. 41, 94469 Deggendorf\",\n        coordinates: { lat: 48.8372, lng: 12.9619 },\n        phone: \"+49 991 380-0\",\n        emergency: \"+49 991 380-2201\",\n        thrombolysis: true,\n        beds: 450,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-RSU-003\",\n        name: \"Klinikum St. Elisabeth Straubing\",\n        address: \"St.-Elisabeth-Str. 23, 94315 Straubing\",\n        coordinates: { lat: 48.8742, lng: 12.5733 },\n        phone: \"+49 9421 710-0\",\n        emergency: \"+49 9421 710-2000\",\n        thrombolysis: true,\n        beds: 580,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-RSU-004\",\n        name: \"Klinikum Freising\",\n        address: \"Mainburger Str. 29, 85356 Freising\",\n        coordinates: { lat: 48.4142, lng: 11.7461 },\n        phone: \"+49 8161 24-0\",\n        emergency: \"+49 8161 24-2800\",\n        thrombolysis: true,\n        beds: 380,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-RSU-005\",\n        name: \"Klinikum Landkreis Erding\",\n        address: \"Bajuwarenstr. 5, 85435 Erding\",\n        coordinates: { lat: 48.3061, lng: 11.9067 },\n        phone: \"+49 8122 59-0\",\n        emergency: \"+49 8122 59-2201\",\n        thrombolysis: true,\n        beds: 350,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-RSU-006\",\n        name: \"Helios Amper-Klinikum Dachau\",\n        address: \"Krankenhausstr. 15, 85221 Dachau\",\n        coordinates: { lat: 48.2599, lng: 11.4342 },\n        phone: \"+49 8131 76-0\",\n        emergency: \"+49 8131 76-2201\",\n        thrombolysis: true,\n        beds: 480,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-RSU-007\",\n        name: \"Klinikum Fürstenfeldbruck\",\n        address: \"Dachauer Str. 33, 82256 Fürstenfeldbruck\",\n        coordinates: { lat: 48.1772, lng: 11.2578 },\n        phone: \"+49 8141 99-0\",\n        emergency: \"+49 8141 99-2201\",\n        thrombolysis: true,\n        beds: 420,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-RSU-008\",\n        name: \"Klinikum Ingolstadt\",\n        address: \"Krumenauerstraße 25, 85049 Ingolstadt\",\n        coordinates: { lat: 48.7665, lng: 11.4364 },\n        phone: \"+49 841 880-0\",\n        emergency: \"+49 841 880-2201\",\n        thrombolysis: true,\n        beds: 665,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-RSU-009\",\n        name: \"Klinikum Passau\",\n        address: \"Bischof-Pilgrim-Str. 1, 94032 Passau\",\n        coordinates: { lat: 48.5665, lng: 13.4513 },\n        phone: \"+49 851 5300-0\",\n        emergency: \"+49 851 5300-2100\",\n        thrombolysis: true,\n        beds: 540,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-RSU-010\",\n        name: \"Klinikum Landshut\",\n        address: \"Robert-Koch-Str. 1, 84034 Landshut\",\n        coordinates: { lat: 48.5436, lng: 12.1619 },\n        phone: \"+49 871 698-0\",\n        emergency: \"+49 871 698-3333\",\n        thrombolysis: true,\n        beds: 790,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-RSU-011\",\n        name: \"RoMed Klinikum Rosenheim\",\n        address: \"Pettenkoferstr. 10, 83022 Rosenheim\",\n        coordinates: { lat: 47.8567, lng: 12.1265 },\n        phone: \"+49 8031 365-0\",\n        emergency: \"+49 8031 365-3711\",\n        thrombolysis: true,\n        beds: 870,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-RSU-012\",\n        name: \"Klinikum Memmingen\",\n        address: \"Bismarckstr. 23, 87700 Memmingen\",\n        coordinates: { lat: 47.9833, lng: 10.1833 },\n        phone: \"+49 8331 70-0\",\n        emergency: \"+49 8331 70-2500\",\n        thrombolysis: true,\n        beds: 520,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-RSU-013\",\n        name: \"Klinikum Kempten-Oberallgäu\",\n        address: \"Robert-Weixler-Str. 50, 87439 Kempten\",\n        coordinates: { lat: 47.7261, lng: 10.3097 },\n        phone: \"+49 831 530-0\",\n        emergency: \"+49 831 530-2201\",\n        thrombolysis: true,\n        beds: 650,\n        network: \"TEMPiS\",\n      },\n      {\n        id: \"BY-RSU-014\",\n        name: \"Klinikum Aschaffenburg-Alzenau\",\n        address: \"Am Hasenkopf 1, 63739 Aschaffenburg\",\n        coordinates: { lat: 49.9747, lng: 9.1581 },\n        phone: \"+49 6021 32-0\",\n        emergency: \"+49 6021 32-2700\",\n        thrombolysis: true,\n        beds: 590,\n        network: \"TEMPiS\",\n      },\n    ],\n\n    thrombolysisHospitals: [\n      // Add more smaller hospitals with thrombolysis capability\n      {\n        id: \"BY-TH-001\",\n        name: \"Krankenhaus Vilsbiburg\",\n        address: \"Sonnenstraße 10, 84137 Vilsbiburg\",\n        coordinates: { lat: 48.6333, lng: 12.2833 },\n        phone: \"+49 8741 60-0\",\n        thrombolysis: true,\n        beds: 180,\n      },\n      {\n        id: \"BY-TH-002\",\n        name: \"Krankenhaus Eggenfelden\",\n        address: \"Pfarrkirchener Str. 5, 84307 Eggenfelden\",\n        coordinates: { lat: 48.4000, lng: 12.7667 },\n        phone: \"+49 8721 98-0\",\n        thrombolysis: true,\n        beds: 220,\n      },\n      // ... more hospitals would be added here\n    ],\n  },\n\n  badenWuerttemberg: {\n    neurosurgicalCenters: [\n      {\n        id: \"BW-NS-001\",\n        name: \"Universitätsklinikum Freiburg\",\n        address: \"Hugstetter Str. 55, 79106 Freiburg\",\n        coordinates: { lat: 48.0025, lng: 7.8347 },\n        phone: \"+49 761 270-0\",\n        emergency: \"+49 761 270-34010\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1600,\n        network: \"FAST\",\n      },\n      {\n        id: \"BW-NS-002\",\n        name: \"Universitätsklinikum Heidelberg\",\n        address: \"Im Neuenheimer Feld 400, 69120 Heidelberg\",\n        coordinates: { lat: 49.4178, lng: 8.6706 },\n        phone: \"+49 6221 56-0\",\n        emergency: \"+49 6221 56-36643\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1621,\n        network: \"FAST\",\n      },\n      {\n        id: \"BW-NS-003\",\n        name: \"Universitätsklinikum Tübingen\",\n        address: \"Geissweg 3, 72076 Tübingen\",\n        coordinates: { lat: 48.5378, lng: 9.0538 },\n        phone: \"+49 7071 29-0\",\n        emergency: \"+49 7071 29-82211\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1550,\n        network: \"FAST\",\n      },\n      {\n        id: \"BW-NS-004\",\n        name: \"Universitätsklinikum Ulm\",\n        address: \"Albert-Einstein-Allee 23, 89081 Ulm\",\n        coordinates: { lat: 48.4196, lng: 9.9592 },\n        phone: \"+49 731 500-0\",\n        emergency: \"+49 731 500-63001\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1264,\n        network: \"FAST\",\n      },\n      {\n        id: \"BW-NS-005\",\n        name: \"Klinikum Stuttgart - Katharinenhospital\",\n        address: \"Kriegsbergstraße 60, 70174 Stuttgart\",\n        coordinates: { lat: 48.7784, lng: 9.1682 },\n        phone: \"+49 711 278-0\",\n        emergency: \"+49 711 278-32001\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 950,\n        network: \"FAST\",\n      },\n      {\n        id: \"BW-NS-006\",\n        name: \"Städtisches Klinikum Karlsruhe\",\n        address: \"Moltkestraße 90, 76133 Karlsruhe\",\n        coordinates: { lat: 49.0047, lng: 8.3858 },\n        phone: \"+49 721 974-0\",\n        emergency: \"+49 721 974-2301\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1570,\n        network: \"FAST\",\n      },\n      {\n        id: \"BW-NS-007\",\n        name: \"Klinikum Ludwigsburg\",\n        address: \"Posilipostraße 4, 71640 Ludwigsburg\",\n        coordinates: { lat: 48.8901, lng: 9.1953 },\n        phone: \"+49 7141 99-0\",\n        emergency: \"+49 7141 99-67201\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 720,\n        network: \"FAST\",\n      },\n    ],\n\n    comprehensiveStrokeCenters: [\n      {\n        id: \"BW-CS-001\",\n        name: \"Universitätsmedizin Mannheim\",\n        address: \"Theodor-Kutzer-Ufer 1-3, 68167 Mannheim\",\n        coordinates: { lat: 49.4828, lng: 8.4664 },\n        phone: \"+49 621 383-0\",\n        emergency: \"+49 621 383-2251\",\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1400,\n        network: \"FAST\",\n      },\n    ],\n\n    regionalStrokeUnits: [\n      // Regional stroke units in Baden-Württemberg\n      {\n        id: \"BW-RSU-001\",\n        name: \"Robert-Bosch-Krankenhaus Stuttgart\",\n        address: \"Auerbachstraße 110, 70376 Stuttgart\",\n        coordinates: { lat: 48.7447, lng: 9.2294 },\n        phone: \"+49 711 8101-0\",\n        emergency: \"+49 711 8101-3456\",\n        thrombolysis: true,\n        beds: 850,\n        network: \"FAST\",\n      },\n      // ... more would be added\n    ],\n\n    thrombolysisHospitals: [\n      // Smaller hospitals with thrombolysis capability\n      // ... would be populated from your database\n    ],\n  },\n\n  nordrheinWestfalen: {\n    neurosurgicalCenters: [\n      {\n        id: \"NRW-NS-001\",\n        name: \"Universitätsklinikum Düsseldorf\",\n        address: \"Moorenstraße 5, 40225 Düsseldorf\",\n        coordinates: { lat: 51.1906, lng: 6.8064 },\n        phone: \"+49 211 81-0\",\n        emergency: \"+49 211 81-17700\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1300,\n        network: \"NEVANO+\",\n      },\n      {\n        id: \"NRW-NS-002\",\n        name: \"Universitätsklinikum Köln\",\n        address: \"Kerpener Str. 62, 50937 Köln\",\n        coordinates: { lat: 50.9253, lng: 6.9187 },\n        phone: \"+49 221 478-0\",\n        emergency: \"+49 221 478-32500\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1500,\n        network: \"NEVANO+\",\n      },\n      {\n        id: \"NRW-NS-003\",\n        name: \"Universitätsklinikum Essen\",\n        address: \"Hufelandstraße 55, 45147 Essen\",\n        coordinates: { lat: 51.4285, lng: 7.0073 },\n        phone: \"+49 201 723-0\",\n        emergency: \"+49 201 723-84444\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1350,\n        network: \"NEVANO+\",\n      },\n      {\n        id: \"NRW-NS-004\",\n        name: \"Universitätsklinikum Münster\",\n        address: \"Albert-Schweitzer-Campus 1, 48149 Münster\",\n        coordinates: { lat: 51.9607, lng: 7.6261 },\n        phone: \"+49 251 83-0\",\n        emergency: \"+49 251 83-47255\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1513,\n        network: \"NEVANO+\",\n      },\n      {\n        id: \"NRW-NS-005\",\n        name: \"Universitätsklinikum Bonn\",\n        address: \"Venusberg-Campus 1, 53127 Bonn\",\n        coordinates: { lat: 50.6916, lng: 7.1127 },\n        phone: \"+49 228 287-0\",\n        emergency: \"+49 228 287-15107\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1200,\n        network: \"NEVANO+\",\n      },\n      {\n        id: \"NRW-NS-006\",\n        name: \"Klinikum Dortmund\",\n        address: \"Beurhausstraße 40, 44137 Dortmund\",\n        coordinates: { lat: 51.5036, lng: 7.4663 },\n        phone: \"+49 231 953-0\",\n        emergency: \"+49 231 953-20050\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1200,\n        network: \"NVNR\",\n      },\n      {\n        id: \"NRW-NS-007\",\n        name: \"Rhein-Maas Klinikum Würselen\",\n        address: \"Mauerfeldstraße 25, 52146 Würselen\",\n        coordinates: { lat: 50.8178, lng: 6.1264 },\n        phone: \"+49 2405 62-0\",\n        emergency: \"+49 2405 62-2222\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 420,\n        network: \"NEVANO+\",\n      },\n    ],\n\n    comprehensiveStrokeCenters: [\n      {\n        id: \"NRW-CS-001\",\n        name: \"Universitätsklinikum Aachen\",\n        address: \"Pauwelsstraße 30, 52074 Aachen\",\n        coordinates: { lat: 50.7780, lng: 6.0614 },\n        phone: \"+49 241 80-0\",\n        emergency: \"+49 241 80-89611\",\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1400,\n        network: \"NEVANO+\",\n      },\n    ],\n\n    regionalStrokeUnits: [\n      // Regional stroke units in NRW\n      {\n        id: \"NRW-RSU-001\",\n        name: \"Helios Universitätsklinikum Wuppertal\",\n        address: \"Heusnerstraße 40, 42283 Wuppertal\",\n        coordinates: { lat: 51.2467, lng: 7.1703 },\n        phone: \"+49 202 896-0\",\n        emergency: \"+49 202 896-2180\",\n        thrombolysis: true,\n        beds: 1050,\n        network: \"NEVANO+\",\n      },\n      // ... more would be added\n    ],\n\n    thrombolysisHospitals: [\n      {\n        id: \"NRW-TH-009\",\n        name: \"Elisabeth-Krankenhaus Essen\",\n        address: \"Klara-Kopp-Weg 1, 45138 Essen\",\n        coordinates: { lat: 51.4495, lng: 7.0137 },\n        phone: \"+49 201 897-0\",\n        thrombolysis: true,\n        beds: 583,\n      },\n      {\n        id: \"NRW-TH-010\",\n        name: \"Klinikum Oberberg Gummersbach\",\n        address: \"Wilhelm-Breckow-Allee 20, 51643 Gummersbach\",\n        coordinates: { lat: 51.0277, lng: 7.5694 },\n        phone: \"+49 2261 17-0\",\n        thrombolysis: true,\n        beds: 431,\n      },\n      {\n        id: \"NRW-TH-011\",\n        name: \"St. Vincenz-Krankenhaus Limburg\",\n        address: \"Auf dem Schafsberg, 65549 Limburg\",\n        coordinates: { lat: 50.3856, lng: 8.0584 },\n        phone: \"+49 6431 292-0\",\n        thrombolysis: true,\n        beds: 452,\n      },\n      {\n        id: \"NRW-TH-012\",\n        name: \"Klinikum Lüdenscheid\",\n        address: \"Paulmannshöher Straße 14, 58515 Lüdenscheid\",\n        coordinates: { lat: 51.2186, lng: 7.6298 },\n        phone: \"+49 2351 46-0\",\n        thrombolysis: true,\n        beds: 869,\n      },\n      // ... more hospitals from your database\n    ],\n  },\n};\n\n// ==========================================\n// ENHANCED ROUTING ALGORITHM\n// ==========================================\n\nconst ROUTING_ALGORITHM = {\n\n  // Main routing function with enhanced ICH probability thresholds\n  routePatient(patientData) {\n    const {\n      location,\n      state,\n      ichProbability,\n      timeFromOnset,\n      clinicalFactors,\n    } = patientData;\n\n    // Auto-detect state if not provided\n    const detectedState = state || this.detectState(location);\n    const database = COMPREHENSIVE_HOSPITAL_DATABASE[detectedState];\n\n    // Enhanced decision tree based on ICH probability\n    if (ichProbability >= 0.50) {\n      // HIGH ICH RISK - Direct to neurosurgery\n      const destination = this.findNearest(location, database.neurosurgicalCenters);\n      if (!destination) {\n        throw new Error(`No neurosurgical centers available in ${detectedState}`);\n      }\n\n      return {\n        category: \"NEUROSURGICAL_CENTER\",\n        destination,\n        urgency: \"IMMEDIATE\",\n        reasoning: \"High bleeding probability (≥50%) - neurosurgical evaluation required\",\n        preAlert: \"Activate neurosurgery team\",\n        bypassLocal: true,\n        threshold: \"≥50%\",\n        state: detectedState,\n      };\n    }\n\n    if (ichProbability >= 0.30) {\n      // INTERMEDIATE ICH RISK - Comprehensive center preferred\n      const comprehensiveOptions = [\n        ...database.neurosurgicalCenters,\n        ...database.comprehensiveStrokeCenters,\n      ];\n\n      return {\n        category: \"COMPREHENSIVE_CENTER\",\n        destination: this.findNearest(location, comprehensiveOptions),\n        urgency: \"URGENT\",\n        reasoning: \"Intermediate bleeding risk (30-50%) - CT and possible intervention\",\n        preAlert: \"Prepare for possible neurosurgical consultation\",\n        transferPlan: this.findNearest(location, database.neurosurgicalCenters),\n        threshold: \"30-50%\",\n        state: detectedState,\n      };\n    }\n\n    if (timeFromOnset && timeFromOnset <= 270) { // Within 4.5 hour window\n      // LOW ICH RISK, WITHIN tPA WINDOW - Any thrombolysis center\n      const allThrombolysisCapable = [\n        ...database.neurosurgicalCenters,\n        ...database.comprehensiveStrokeCenters,\n        ...database.regionalStrokeUnits,\n        ...database.thrombolysisHospitals,\n      ];\n\n      return {\n        category: \"THROMBOLYSIS_CAPABLE\",\n        destination: this.findNearest(location, allThrombolysisCapable),\n        urgency: \"TIME_CRITICAL\",\n        reasoning: \"Low bleeding risk (<30%), within tPA window - nearest thrombolysis\",\n        preAlert: \"Prepare for thrombolysis protocol\",\n        bypassLocal: false,\n        threshold: \"<30%\",\n        timeWindow: \"≤4.5h\",\n        state: detectedState,\n      };\n    }\n\n    // LOW ICH RISK, OUTSIDE tPA WINDOW OR NO TIME - Regional stroke unit adequate\n    const strokeUnitsAndHigher = [\n      ...database.neurosurgicalCenters,\n      ...database.comprehensiveStrokeCenters,\n      ...database.regionalStrokeUnits,\n    ];\n\n    return {\n      category: \"STROKE_UNIT\",\n      destination: this.findNearest(location, strokeUnitsAndHigher),\n      urgency: \"STANDARD\",\n      reasoning: timeFromOnset > 270\n        ? \"Low bleeding risk, outside tPA window - standard stroke evaluation\"\n        : \"Low bleeding risk - standard stroke evaluation\",\n      preAlert: \"Standard stroke protocol\",\n      bypassLocal: false,\n      threshold: \"<30%\",\n      timeWindow: timeFromOnset ? \">4.5h\" : \"unknown\",\n      state: detectedState,\n    };\n  },\n\n  // Auto-detect state based on coordinates (more precise boundaries)\n  detectState(location) {\n    // Baden-Württemberg: check first for western regions\n    if (location.lat >= 47.5 && location.lat <= 49.8\n        && location.lng >= 7.5 && location.lng <= 10.2) {\n      return \"badenWuerttemberg\";\n    }\n\n    // NRW: northern regions\n    if (location.lat >= 50.3 && location.lat <= 52.5\n        && location.lng >= 5.9 && location.lng <= 9.5) {\n      return \"nordrheinWestfalen\";\n    }\n\n    // Bayern: eastern regions (more restrictive western bound to avoid overlap)\n    if (location.lat >= 47.2 && location.lat <= 50.6\n        && location.lng >= 10.2 && location.lng <= 13.8) {\n      return \"bayern\";\n    }\n\n    // Overlap region - use nearest state center\n    return this.findNearestState(location);\n  },\n\n  // Find nearest state for edge cases\n  findNearestState(location) {\n    const stateCenters = {\n      bayern: { lat: 49.0, lng: 11.5 },\n      badenWuerttemberg: { lat: 48.5, lng: 9.0 },\n      nordrheinWestfalen: { lat: 51.5, lng: 7.5 },\n    };\n\n    let nearestState = \"bayern\";\n    let minDistance = Infinity;\n\n    for (const [state, center] of Object.entries(stateCenters)) {\n      const distance = this.calculateDistance(location, center);\n      if (distance < minDistance) {\n        minDistance = distance;\n        nearestState = state;\n      }\n    }\n\n    return nearestState;\n  },\n\n  // Helper function to find nearest hospital\n  findNearest(userLocation, hospitals) {\n    if (!hospitals || hospitals.length === 0) {\n      // ('No hospitals available in database');\n      return null;\n    }\n\n    return hospitals\n      .map((hospital) => {\n        // Validate hospital has coordinates\n        if (!hospital.coordinates || typeof hospital.coordinates.lat !== \"number\") {\n          // (`Hospital ${hospital.name} missing valid coordinates`);\n          return null;\n        }\n\n        return {\n          ...hospital,\n          distance: this.calculateDistance(userLocation, hospital.coordinates),\n        };\n      })\n      .filter((hospital) => hospital !== null) // Remove invalid hospitals\n      .sort((a, b) => a.distance - b.distance)[0];\n  },\n\n  // Calculate distance between two GPS points\n  calculateDistance(point1, point2) {\n    const R = 6371; // Earth radius in km\n    const dLat = this.toRad(point2.lat - point1.lat);\n    const dLng = this.toRad(point2.lng - point1.lng);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2)\n      + Math.cos(this.toRad(point1.lat)) * Math.cos(this.toRad(point2.lat))\n      * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  },\n\n  toRad(deg) {\n    return deg * (Math.PI / 180);\n  },\n};\n\nexport { COMPREHENSIVE_HOSPITAL_DATABASE, ROUTING_ALGORITHM };\n","// Stroke centers in Bayern (Bavaria), Germany\n// Data includes comprehensive stroke centers and stroke units with neurosurgical capabilities\n\nexport const strokeCenters = [\n  // Major comprehensive stroke centers in München\n  {\n    id: \"klinikum-grosshadern-muenchen\",\n    name: \"LMU Klinikum München - Großhadern\",\n    type: \"comprehensive\",\n    address: \"Marchioninistraße 15, 81377 München\",\n    coordinates: {\n      lat: 48.1106,\n      lng: 11.4684,\n    },\n    phone: \"+49 89 4400-0\",\n    emergency: \"+49 89 4400-73331\",\n    services: [\"thrombectomy\", \"neurosurgery\", \"icu\", \"telemedicine\"],\n    certified: true,\n    certification: \"DSG/DGN\",\n    lastUpdated: \"2024-08-01\",\n  },\n  {\n    id: \"klinikum-rechts-der-isar-muenchen\",\n    name: \"Klinikum rechts der Isar München (TUM)\",\n    type: \"comprehensive\",\n    address: \"Ismaninger Str. 22, 81675 München\",\n    coordinates: {\n      lat: 48.1497,\n      lng: 11.6052,\n    },\n    phone: \"+49 89 4140-0\",\n    emergency: \"+49 89 4140-2249\",\n    services: [\"thrombectomy\", \"neurosurgery\", \"icu\", \"telemedicine\"],\n    certified: true,\n    certification: \"DSG/DGN\",\n    lastUpdated: \"2024-08-01\",\n  },\n  {\n    id: \"klinikum-schwabing-muenchen\",\n    name: \"Städtisches Klinikum München Schwabing\",\n    type: \"comprehensive\",\n    address: \"Kölner Platz 1, 80804 München\",\n    coordinates: {\n      lat: 48.1732,\n      lng: 11.5755,\n    },\n    phone: \"+49 89 3068-0\",\n    emergency: \"+49 89 3068-2050\",\n    services: [\"thrombectomy\", \"neurosurgery\", \"icu\"],\n    certified: true,\n    certification: \"DSG/DGN\",\n    lastUpdated: \"2024-08-01\",\n  },\n  {\n    id: \"klinikum-bogenhausen-muenchen\",\n    name: \"Städtisches Klinikum München Bogenhausen\",\n    type: \"comprehensive\",\n    address: \"Englschalkinger Str. 77, 81925 München\",\n    coordinates: {\n      lat: 48.1614,\n      lng: 11.6254,\n    },\n    phone: \"+49 89 9270-0\",\n    emergency: \"+49 89 9270-2050\",\n    services: [\"thrombectomy\", \"neurosurgery\", \"icu\"],\n    certified: true,\n    certification: \"DSG/DGN\",\n    lastUpdated: \"2024-08-01\",\n  },\n\n  // Major centers in other Bayern cities\n  {\n    id: \"uniklinikum-erlangen\",\n    name: \"Universitätsklinikum Erlangen\",\n    type: \"comprehensive\",\n    address: \"Maximiliansplatz 2, 91054 Erlangen\",\n    coordinates: {\n      lat: 49.5982,\n      lng: 11.0037,\n    },\n    phone: \"+49 9131 85-0\",\n    emergency: \"+49 9131 85-39003\",\n    services: [\"thrombectomy\", \"neurosurgery\", \"icu\", \"telemedicine\"],\n    certified: true,\n    certification: \"DSG/DGN\",\n    lastUpdated: \"2024-08-01\",\n  },\n  {\n    id: \"uniklinikum-regensburg\",\n    name: \"Universitätsklinikum Regensburg\",\n    type: \"comprehensive\",\n    address: \"Franz-Josef-Strauß-Allee 11, 93053 Regensburg\",\n    coordinates: {\n      lat: 49.0134,\n      lng: 12.0991,\n    },\n    phone: \"+49 941 944-0\",\n    emergency: \"+49 941 944-7501\",\n    services: [\"thrombectomy\", \"neurosurgery\", \"icu\", \"telemedicine\"],\n    certified: true,\n    certification: \"DSG/DGN\",\n    lastUpdated: \"2024-08-01\",\n  },\n  {\n    id: \"uniklinikum-wuerzburg\",\n    name: \"Universitätsklinikum Würzburg\",\n    type: \"comprehensive\",\n    address: \"Oberdürrbacher Str. 6, 97080 Würzburg\",\n    coordinates: {\n      lat: 49.7840,\n      lng: 9.9721,\n    },\n    phone: \"+49 931 201-0\",\n    emergency: \"+49 931 201-24444\",\n    services: [\"thrombectomy\", \"neurosurgery\", \"icu\", \"telemedicine\"],\n    certified: true,\n    certification: \"DSG/DGN\",\n    lastUpdated: \"2024-08-01\",\n  },\n  {\n    id: \"klinikum-nuernberg\",\n    name: \"Klinikum Nürnberg Nord\",\n    type: \"comprehensive\",\n    address: \"Prof.-Ernst-Nathan-Str. 1, 90419 Nürnberg\",\n    coordinates: {\n      lat: 49.4521,\n      lng: 11.0767,\n    },\n    phone: \"+49 911 398-0\",\n    emergency: \"+49 911 398-2369\",\n    services: [\"thrombectomy\", \"neurosurgery\", \"icu\"],\n    certified: true,\n    certification: \"DSG/DGN\",\n    lastUpdated: \"2024-08-01\",\n  },\n  {\n    id: \"klinikum-augsburg\",\n    name: \"Universitätsklinikum Augsburg\",\n    type: \"comprehensive\",\n    address: \"Stenglinstr. 2, 86156 Augsburg\",\n    coordinates: {\n      lat: 48.3668,\n      lng: 10.9093,\n    },\n    phone: \"+49 821 400-01\",\n    emergency: \"+49 821 400-2356\",\n    services: [\"thrombectomy\", \"neurosurgery\", \"icu\", \"telemedicine\"],\n    certified: true,\n    certification: \"DSG/DGN\",\n    lastUpdated: \"2024-08-01\",\n  },\n\n  // Primary stroke centers\n  {\n    id: \"klinikum-ingolstadt\",\n    name: \"Klinikum Ingolstadt\",\n    type: \"primary\",\n    address: \"Krumenauerstraße 25, 85049 Ingolstadt\",\n    coordinates: {\n      lat: 48.7665,\n      lng: 11.4364,\n    },\n    phone: \"+49 841 880-0\",\n    emergency: \"+49 841 880-2201\",\n    services: [\"stroke_unit\", \"telemedicine\"],\n    certified: true,\n    certification: \"DSG\",\n    lastUpdated: \"2024-08-01\",\n  },\n  {\n    id: \"klinikum-passau\",\n    name: \"Klinikum Passau\",\n    type: \"primary\",\n    address: \"Bischof-Pilgrim-Str. 1, 94032 Passau\",\n    coordinates: {\n      lat: 48.5665,\n      lng: 13.4513,\n    },\n    phone: \"+49 851 5300-0\",\n    emergency: \"+49 851 5300-2100\",\n    services: [\"stroke_unit\", \"telemedicine\"],\n    certified: true,\n    certification: \"DSG\",\n    lastUpdated: \"2024-08-01\",\n  },\n  {\n    id: \"klinikum-bamberg\",\n    name: \"Sozialstiftung Bamberg Klinikum\",\n    type: \"primary\",\n    address: \"Buger Str. 80, 96049 Bamberg\",\n    coordinates: {\n      lat: 49.8988,\n      lng: 10.9027,\n    },\n    phone: \"+49 951 503-0\",\n    emergency: \"+49 951 503-11101\",\n    services: [\"stroke_unit\", \"telemedicine\"],\n    certified: true,\n    certification: \"DSG\",\n    lastUpdated: \"2024-08-01\",\n  },\n  {\n    id: \"klinikum-bayreuth\",\n    name: \"Klinikum Bayreuth\",\n    type: \"primary\",\n    address: \"Preuschwitzer Str. 101, 95445 Bayreuth\",\n    coordinates: {\n      lat: 49.9459,\n      lng: 11.5779,\n    },\n    phone: \"+49 921 400-0\",\n    emergency: \"+49 921 400-5401\",\n    services: [\"stroke_unit\", \"telemedicine\"],\n    certified: true,\n    certification: \"DSG\",\n    lastUpdated: \"2024-08-01\",\n  },\n  {\n    id: \"klinikum-landshut\",\n    name: \"Klinikum Landshut\",\n    type: \"primary\",\n    address: \"Robert-Koch-Str. 1, 84034 Landshut\",\n    coordinates: {\n      lat: 48.5436,\n      lng: 12.1619,\n    },\n    phone: \"+49 871 698-0\",\n    emergency: \"+49 871 698-3333\",\n    services: [\"stroke_unit\", \"telemedicine\"],\n    certified: true,\n    certification: \"DSG\",\n    lastUpdated: \"2024-08-01\",\n  },\n  {\n    id: \"klinikum-rosenheim\",\n    name: \"RoMed Klinikum Rosenheim\",\n    type: \"primary\",\n    address: \"Pettenkoferstr. 10, 83022 Rosenheim\",\n    coordinates: {\n      lat: 47.8567,\n      lng: 12.1265,\n    },\n    phone: \"+49 8031 365-0\",\n    emergency: \"+49 8031 365-3711\",\n    services: [\"stroke_unit\", \"telemedicine\"],\n    certified: true,\n    certification: \"DSG\",\n    lastUpdated: \"2024-08-01\",\n  },\n  {\n    id: \"klinikum-memmingen\",\n    name: \"Klinikum Memmingen\",\n    type: \"primary\",\n    address: \"Bismarckstr. 23, 87700 Memmingen\",\n    coordinates: {\n      lat: 47.9833,\n      lng: 10.1833,\n    },\n    phone: \"+49 8331 70-0\",\n    emergency: \"+49 8331 70-2500\",\n    services: [\"stroke_unit\", \"telemedicine\"],\n    certified: true,\n    certification: \"DSG\",\n    lastUpdated: \"2024-08-01\",\n  },\n  {\n    id: \"klinikum-kempten\",\n    name: \"Klinikum Kempten-Oberallgäu\",\n    type: \"primary\",\n    address: \"Robert-Weixler-Str. 50, 87439 Kempten\",\n    coordinates: {\n      lat: 47.7261,\n      lng: 10.3097,\n    },\n    phone: \"+49 831 530-0\",\n    emergency: \"+49 831 530-2201\",\n    services: [\"stroke_unit\", \"telemedicine\"],\n    certified: true,\n    certification: \"DSG\",\n    lastUpdated: \"2024-08-01\",\n  },\n  {\n    id: \"klinikum-coburg\",\n    name: \"Klinikum Coburg\",\n    type: \"primary\",\n    address: \"Ketschendorfer Str. 33, 96450 Coburg\",\n    coordinates: {\n      lat: 50.2596,\n      lng: 10.9685,\n    },\n    phone: \"+49 9561 22-0\",\n    emergency: \"+49 9561 22-6300\",\n    services: [\"stroke_unit\", \"telemedicine\"],\n    certified: true,\n    certification: \"DSG\",\n    lastUpdated: \"2024-08-01\",\n  },\n  {\n    id: \"klinikum-aschaffenburg\",\n    name: \"Klinikum Aschaffenburg-Alzenau\",\n    type: \"primary\",\n    address: \"Am Hasenkopf 1, 63739 Aschaffenburg\",\n    coordinates: {\n      lat: 49.9747,\n      lng: 9.1581,\n    },\n    phone: \"+49 6021 32-0\",\n    emergency: \"+49 6021 32-2700\",\n    services: [\"stroke_unit\", \"telemedicine\"],\n    certified: true,\n    certification: \"DSG\",\n    lastUpdated: \"2024-08-01\",\n  },\n\n  // Additional smaller stroke units in Bayern\n  {\n    id: \"goldberg-klinik-kelheim\",\n    name: \"Goldberg-Klinik Kelheim\",\n    type: \"primary\",\n    address: \"Traubenweg 3, 93309 Kelheim\",\n    coordinates: {\n      lat: 48.9166,\n      lng: 11.8742,\n    },\n    phone: \"+49 9441 702-0\",\n    emergency: \"+49 9441 702-6800\",\n    services: [\"stroke_unit\", \"telemedicine\"],\n    certified: true,\n    certification: \"DSG\",\n    lastUpdated: \"2024-08-01\",\n  },\n  {\n    id: \"klinikum-deggendorf\",\n    name: \"DONAUISAR Klinikum Deggendorf\",\n    type: \"primary\",\n    address: \"Perlasberger Str. 41, 94469 Deggendorf\",\n    coordinates: {\n      lat: 48.8372,\n      lng: 12.9619,\n    },\n    phone: \"+49 991 380-0\",\n    emergency: \"+49 991 380-2201\",\n    services: [\"stroke_unit\", \"telemedicine\"],\n    certified: true,\n    certification: \"DSG\",\n    lastUpdated: \"2024-08-01\",\n  },\n  {\n    id: \"klinikum-straubing\",\n    name: \"Klinikum St. Elisabeth Straubing\",\n    type: \"primary\",\n    address: \"St.-Elisabeth-Str. 23, 94315 Straubing\",\n    coordinates: {\n      lat: 48.8742,\n      lng: 12.5733,\n    },\n    phone: \"+49 9421 710-0\",\n    emergency: \"+49 9421 710-2000\",\n    services: [\"stroke_unit\", \"telemedicine\"],\n    certified: true,\n    certification: \"DSG\",\n    lastUpdated: \"2024-08-01\",\n  },\n  {\n    id: \"klinikum-freising\",\n    name: \"Klinikum Freising\",\n    type: \"primary\",\n    address: \"Mainburger Str. 29, 85356 Freising\",\n    coordinates: {\n      lat: 48.4142,\n      lng: 11.7461,\n    },\n    phone: \"+49 8161 24-0\",\n    emergency: \"+49 8161 24-2800\",\n    services: [\"stroke_unit\", \"telemedicine\"],\n    certified: true,\n    certification: \"DSG\",\n    lastUpdated: \"2024-08-01\",\n  },\n  {\n    id: \"klinikum-erding\",\n    name: \"Klinikum Landkreis Erding\",\n    type: \"primary\",\n    address: \"Bajuwarenstr. 5, 85435 Erding\",\n    coordinates: {\n      lat: 48.3061,\n      lng: 11.9067,\n    },\n    phone: \"+49 8122 59-0\",\n    emergency: \"+49 8122 59-2201\",\n    services: [\"stroke_unit\", \"telemedicine\"],\n    certified: true,\n    certification: \"DSG\",\n    lastUpdated: \"2024-08-01\",\n  },\n  {\n    id: \"helios-dachau\",\n    name: \"Helios Amper-Klinikum Dachau\",\n    type: \"primary\",\n    address: \"Krankenhausstr. 15, 85221 Dachau\",\n    coordinates: {\n      lat: 48.2599,\n      lng: 11.4342,\n    },\n    phone: \"+49 8131 76-0\",\n    emergency: \"+49 8131 76-2201\",\n    services: [\"stroke_unit\", \"telemedicine\"],\n    certified: true,\n    certification: \"DSG\",\n    lastUpdated: \"2024-08-01\",\n  },\n  {\n    id: \"klinikum-fuerstenfeldbruck\",\n    name: \"Klinikum Fürstenfeldbruck\",\n    type: \"primary\",\n    address: \"Dachauer Str. 33, 82256 Fürstenfeldbruck\",\n    coordinates: {\n      lat: 48.1772,\n      lng: 11.2578,\n    },\n    phone: \"+49 8141 99-0\",\n    emergency: \"+49 8141 99-2201\",\n    services: [\"stroke_unit\", \"telemedicine\"],\n    certified: true,\n    certification: \"DSG\",\n    lastUpdated: \"2024-08-01\",\n  },\n];\n\n// Helper functions for stroke center data\nexport function getStrokeCentersByType(type) {\n  return strokeCenters.filter((center) => center.type === type);\n}\n\nexport function getComprehensiveStrokeCenters() {\n  return getStrokeCentersByType(\"comprehensive\");\n}\n\nexport function getPrimaryStrokeCenters() {\n  return getStrokeCentersByType(\"primary\");\n}\n\nexport function getStrokeCenterById(id) {\n  return strokeCenters.find((center) => center.id === id);\n}\n\n// Calculate distance between two coordinates using Haversine formula (fallback)\nexport function calculateDistance(lat1, lng1, lat2, lng2) {\n  const R = 6371; // Earth's radius in kilometers\n  const dLat = toRadians(lat2 - lat1);\n  const dLng = toRadians(lng2 - lng1);\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2)\n    + Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2))\n    * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n}\n\nfunction toRadians(degrees) {\n  return degrees * (Math.PI / 180);\n}\n\n// Calculate travel time using OpenRoute Service API\nexport async function calculateTravelTime(fromLat, fromLng, toLat, toLng, profile = \"driving-car\") {\n  try {\n    // Using OpenRoute Service (free tier)\n    const url = `https://api.openrouteservice.org/v2/directions/${profile}`;\n    const body = {\n      coordinates: [[fromLng, fromLat], [toLng, toLat]],\n      radiuses: [1000, 1000], // Allow 1km radius for routing\n      format: \"json\",\n    };\n\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8\",\n        Authorization: \"5b3ce3597851110001cf624868c4c27b63ae476c9c26c8bffbc35688\", // Free tier key\n        \"Content-Type\": \"application/json; charset=utf-8\",\n      },\n      body: JSON.stringify(body),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Routing API error: ${response.status}`);\n    }\n\n    const data = await response.json();\n\n    if (data.routes && data.routes.length > 0) {\n      const route = data.routes[0];\n      return {\n        duration: Math.round(route.summary.duration / 60), // Convert to minutes\n        distance: Math.round(route.summary.distance / 1000), // Convert to km\n        source: \"routing\",\n      };\n    }\n    throw new Error(\"No route found\");\n  } catch (error) {\n    // Enhanced CORS-aware fallback to distance-based time estimation\n    let source = \"estimated\";\n\n    // Detect CORS errors specifically\n    if (error.name === \"TypeError\" && error.message.includes(\"Failed to fetch\")) {\n      console.info(\"[TravelTime] OpenRouteService blocked by CORS, using distance estimation\");\n      source = \"cors-fallback\";\n    } else if (error.message.includes(\"signal\")) {\n      console.info(\"[TravelTime] OpenRouteService timeout, using distance estimation\");\n      source = \"timeout-fallback\";\n    } else {\n      console.info(\"[TravelTime] OpenRouteService error, using distance estimation:\", error.message);\n      source = \"error-fallback\";\n    }\n\n    // Fallback to distance-based time estimation\n    const distance = calculateDistance(fromLat, fromLng, toLat, toLng);\n    const estimatedTime = Math.round(distance / 0.8); // Assume 48 km/h average (urban + highway)\n\n    return {\n      duration: estimatedTime,\n      distance: Math.round(distance),\n      source,\n    };\n  }\n}\n\n// Enhanced travel time calculation for emergency vehicles\nexport async function calculateEmergencyTravelTime(fromLat, fromLng, toLat, toLng) {\n  try {\n    // For emergency vehicles, we can use a faster profile and adjust\n    const result = await calculateTravelTime(fromLat, fromLng, toLat, toLng, \"driving-car\");\n\n    // Reduce time by 25% for emergency vehicle (sirens, priority routing)\n    const emergencyDuration = Math.round(result.duration * 0.75);\n\n    return {\n      duration: emergencyDuration,\n      distance: result.distance,\n      source: result.source === \"routing\" ? \"emergency-routing\" : \"emergency-estimated\",\n    };\n  } catch (error) {\n    // Fallback calculation\n    const distance = calculateDistance(fromLat, fromLng, toLat, toLng);\n    const emergencyTime = Math.round(distance / 1.2); // Assume 72 km/h for emergency vehicles\n\n    return {\n      duration: emergencyTime,\n      distance: Math.round(distance),\n      source: \"emergency-estimated\",\n    };\n  }\n}\n\n// Find nearest stroke centers with travel time calculation\nexport async function findNearestStrokeCentersWithTravelTime(lat, lng, maxResults = 5, maxTime = 120, useEmergencyRouting = true) {\n  // ('Calculating travel times to stroke centers...');\n\n  const centersWithTravelTime = await Promise.all(\n    strokeCenters.map(async (center) => {\n      try {\n        const travelInfo = useEmergencyRouting\n          ? await calculateEmergencyTravelTime(lat, lng, center.coordinates.lat, center.coordinates.lng)\n          : await calculateTravelTime(lat, lng, center.coordinates.lat, center.coordinates.lng);\n\n        return {\n          ...center,\n          travelTime: travelInfo.duration,\n          distance: travelInfo.distance,\n          travelSource: travelInfo.source,\n        };\n      } catch (error) {\n        // (`Failed to calculate travel time to ${center.name}:`, error);\n        // Fallback to distance calculation\n        const distance = calculateDistance(lat, lng, center.coordinates.lat, center.coordinates.lng);\n        return {\n          ...center,\n          travelTime: Math.round(distance / 0.8), // Estimate: 48 km/h average\n          distance: Math.round(distance),\n          travelSource: \"fallback\",\n        };\n      }\n    }),\n  );\n\n  return centersWithTravelTime\n    .filter((center) => center.travelTime <= maxTime)\n    .sort((a, b) => a.travelTime - b.travelTime)\n    .slice(0, maxResults);\n}\n\n// Find nearest stroke centers using distance (fallback/fast method)\nexport function findNearestStrokeCenters(lat, lng, maxResults = 5, maxDistance = 100) {\n  const centersWithDistance = strokeCenters.map((center) => ({\n    ...center,\n    distance: calculateDistance(lat, lng, center.coordinates.lat, center.coordinates.lng),\n  }));\n\n  return centersWithDistance\n    .filter((center) => center.distance <= maxDistance)\n    .sort((a, b) => a.distance - b.distance)\n    .slice(0, maxResults);\n}\n\n// Get stroke center recommendations with travel time (async)\nexport async function getRecommendedStrokeCentersWithTravelTime(lat, lng, conditionType = \"stroke\") {\n  const nearestCenters = await findNearestStrokeCentersWithTravelTime(lat, lng, 10, 120, true);\n\n  if (conditionType === \"lvo\" || conditionType === \"thrombectomy\") {\n    // For LVO cases, prioritize comprehensive stroke centers within 60 minutes\n    const comprehensive = nearestCenters.filter((center) => center.type === \"comprehensive\"\n      && center.services.includes(\"thrombectomy\")\n      && center.travelTime <= 60);\n\n    const primary = nearestCenters.filter((center) => center.type === \"primary\");\n\n    return {\n      recommended: comprehensive.slice(0, 3),\n      alternative: primary.slice(0, 2),\n    };\n  }\n\n  // For ICH cases, prioritize neurosurgical capabilities\n  if (conditionType === \"ich\") {\n    const neurosurgical = nearestCenters.filter((center) => center.services.includes(\"neurosurgery\")\n      && center.travelTime <= 45);\n\n    return {\n      recommended: neurosurgical.slice(0, 3),\n      alternative: nearestCenters.filter((c) => !neurosurgical.includes(c)).slice(0, 2),\n    };\n  }\n\n  // For general stroke cases, return nearest centers regardless of type\n  return {\n    recommended: nearestCenters.slice(0, 5),\n    alternative: [],\n  };\n}\n\n// Get stroke center recommendations based on patient condition (fallback - distance only)\nexport function getRecommendedStrokeCenters(lat, lng, conditionType = \"stroke\") {\n  const nearestCenters = findNearestStrokeCenters(lat, lng, 10);\n\n  if (conditionType === \"lvo\" || conditionType === \"thrombectomy\") {\n    // For LVO cases, prioritize comprehensive stroke centers\n    const comprehensive = nearestCenters.filter((center) => center.type === \"comprehensive\"\n      && center.services.includes(\"thrombectomy\"));\n\n    const primary = nearestCenters.filter((center) => center.type === \"primary\");\n\n    return {\n      recommended: comprehensive.slice(0, 3),\n      alternative: primary.slice(0, 2),\n    };\n  }\n\n  // For general stroke cases, return nearest centers regardless of type\n  return {\n    recommended: nearestCenters.slice(0, 5),\n    alternative: [],\n  };\n}\n","import { CRITICAL_THRESHOLDS } from \"../config.js\";\n\nexport function getRiskLevel(probabilityPercent, type) {\n  const p = Number(probabilityPercent);\n  const thresholds = CRITICAL_THRESHOLDS[type];\n\n  if (p >= thresholds.high) {\n    return \"🔴 HIGH RISK\";\n  } if (p >= thresholds.medium) {\n    return \"🟡 MEDIUM RISK\";\n  }\n  return \"🟢 LOW RISK\";\n}\n\nexport function formatTime(milliseconds) {\n  const seconds = Math.floor(milliseconds / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n  return `${minutes}:${remainingSeconds.toString().padStart(2, \"0\")}`;\n}\n","import { renderProgressIndicator } from \"../components/progress.js\";\r\nimport { renderCriticalAlert } from \"../components/alerts.js\";\r\nimport { renderDriversSection } from \"../components/drivers.js\";\r\nimport { renderStrokeCenterMap } from \"../components/stroke-center-map.js\";\r\nimport { getRiskLevel } from \"../../logic/formatters.js\";\r\nimport { CRITICAL_THRESHOLDS } from \"../../config.js\";\r\nimport { t, i18n } from \"../../localization/i18n.js\";\r\nimport { store } from \"../../state/store.js\";\r\nimport {\r\n  formatSummaryLabel,\r\n  formatDisplayValue,\r\n  formatDriverName,\r\n} from \"../../utils/label-formatter.js\";\r\nimport {\r\n  estimateVolumeFromGFAP,\r\n  estimateMortalityFromVolume,\r\n} from \"../../logic/ich-volume-calculator.js\";\r\nimport {\r\n  renderCircularBrainDisplay,\r\n  initializeVolumeAnimations,\r\n} from \"../components/brain-visualization.js\";\r\nimport { calculateLegacyICH } from \"../../research/legacy-ich-model.js\";\r\nimport { safeLogResearchData, isResearchModeEnabled } from \"../../research/data-logger.js\";\r\nimport { renderModelComparison, renderResearchToggle } from \"../../research/comparison-ui.js\";\r\n\r\nfunction renderInputSummary() {\r\n  const { formData } = store.getState() || {};\r\n\r\n  if (!formData || Object.keys(formData).length === 0) return \"\";\r\n\r\n  let summaryHtml = Object.entries(formData)\r\n    .map(([module, data]) => {\r\n      if (!data || Object.keys(data).length === 0) return \"\";\r\n\r\n      const moduleTitle =\r\n        t(`${module}ModuleTitle`) || module.charAt(0).toUpperCase() + module.slice(1);\r\n\r\n      const itemsHtml = Object.entries(data)\r\n        .filter(([_, value]) => value !== \"\" && value !== null && value !== undefined)\r\n        .map(([key, value]) => {\r\n          const label = formatSummaryLabel(key);\r\n          const displayValue = formatDisplayValue(value, key);\r\n          return `\r\n            <div class=\"summary-item flex justify-between items-center py-1.5 border-b border-gray-200 dark:border-gray-700\">\r\n              <span class=\"summary-label text-gray-600 dark:text-gray-300 font-medium\">${label}</span>\r\n              <span class=\"summary-value text-gray-900 dark:text-gray-100 font-semibold\">${displayValue}</span>\r\n            </div>\r\n          `;\r\n        })\r\n        .join(\"\");\r\n\r\n      if (!itemsHtml) return \"\";\r\n\r\n      return `\r\n        <div class=\"summary-module bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-4 mb-4 transition-all duration-200 hover:shadow-md\">\r\n          <h4 class=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3 flex items-center gap-2\">\r\n            <span class=\"text-blue-600 dark:text-blue-400\">🩺</span> ${moduleTitle}\r\n          </h4>\r\n          <div class=\"summary-items divide-y divide-gray-200 dark:divide-gray-700\">\r\n            ${itemsHtml}\r\n          </div>\r\n        </div>\r\n      `;\r\n    })\r\n    .join(\"\");\r\n\r\n  if (!summaryHtml) return \"\";\r\n\r\n  return `\r\n    <div class=\"\">\r\n      <div class=\"summary-content space-y-5\">\r\n        ${summaryHtml}\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n\r\nfunction renderRiskCard(type, data, results) {\r\n  if (!data) {\r\n    console.log(`[RiskCard] No data for ${type}`);\r\n    return \"\";\r\n  }\r\n\r\n  const percent = Math.round((data.probability || 0) * 100);\r\n  console.log(`[RiskCard] ${type} - probability: ${data.probability}, percent: ${percent}%`);\r\n\r\n  const riskLevel = getRiskLevel(percent, type);\r\n  const isCritical = percent > 70; // Very high risk threshold\r\n  const isHigh = percent > CRITICAL_THRESHOLDS[type].high;\r\n\r\n  const icons = { ich: \"🩸\", lvo: \"🧠\" };\r\n  const titles = { ich: t(\"ichProbability\"), lvo: t(\"lvoProbability\") };\r\n\r\n  const level = isCritical ? \"critical\" : isHigh ? \"high\" : \"normal\";\r\n\r\n  return `\r\n   <div class=\"enhanced-risk-card ${type} ${level} bg-white dark:bg-gray-800 shadow-md rounded-2xl p-5 transition-all duration-300 hover:shadow-lg\">\r\n      <!-- Header -->\r\n      <div class=\"risk-header flex items-center gap-3 border-b border-gray-200 dark:border-gray-700 pb-3 mb-4\">\r\n          <div class=\"risk-icon text-3xl\">${icons[type]}</div>\r\n          <div class=\"risk-title\">\r\n            <h3 class=\"text-lg font-semibold text-gray-800 dark:text-gray-100\">${titles[type]}</h3>\r\n          </div>\r\n      </div>\r\n      <!-- Probability Section -->\r\n      <div class=\"risk-probability flex flex-col items-center\">\r\n          <div class=\"circles-container flex flex-col items-center\">\r\n            <div class=\"rings-row flex justify-center\">\r\n                <div class=\"circle-item flex flex-col items-center\">\r\n                  <!-- React ring mount -->\r\n                  <div\r\n                      class=\"probability-circle w-28 h-28 relative flex items-center justify-center\"\r\n                      data-react-ring\r\n                      data-percent=\"${percent}\"\r\n                      data-level=\"${level}\"\r\n                      >\r\n                      <svg viewBox=\"0 0 120 120\" class=\"probability-svg w-full h-full absolute top-0 left-0\">\r\n                        <circle\r\n                            cx=\"60\" cy=\"60\" r=\"50\"\r\n                            fill=\"none\"\r\n                            stroke=\"rgba(255,255,255,0.2)\"\r\n                            stroke-width=\"8\"\r\n                            />\r\n                        <circle\r\n                        cx=\"60\" cy=\"60\" r=\"50\"\r\n                        fill=\"none\"\r\n                        stroke=\"${level === \"critical\" ? \"#ff4444\" : level === \"high\" ? \"#ff8800\" : \"#0066cc\"}\"\r\n                        stroke-width=\"8\"\r\n                        stroke-dasharray=\"${Math.PI * 100}\"\r\n                        stroke-dashoffset=\"${Math.PI * 100 * (1 - percent / 100)}\"\r\n                        stroke-linecap=\"round\"\r\n                        transform=\"rotate(-90 60 60)\"\r\n                        />\r\n                        <text\r\n                            x=\"60\" y=\"60\"\r\n                            text-anchor=\"middle\"\r\n                            dominant-baseline=\"middle\"\r\n                            class=\"probability-text fill-white font-bold text-xl\"\r\n                            >\r\n                            ${percent}%\r\n                        </text>\r\n                      </svg>\r\n                  </div>\r\n                  <!-- Label -->\r\n                  <div class=\"circle-label text-sm font-medium text-gray-700 dark:text-gray-300 mt-3\">\r\n                      ${type === \"ich\" ? \"ICH Risk\" : \"LVO Risk\"}\r\n                  </div>\r\n                </div>\r\n            </div>\r\n            <!-- Risk Level -->\r\n            <div class=\"risk-level ${level} text-center mt-4 px-3 py-1 rounded-full text-sm font-semibold\r\n            ${\r\n              level === \"critical\"\r\n                ? \"bg-red-100 text-red-700 dark:bg-red-900/40 dark:text-red-300\"\r\n                : level === \"high\"\r\n                  ? \"bg-orange-100 text-orange-700 dark:bg-orange-900/40 dark:text-orange-300\"\r\n                  : \"bg-blue-100 text-blue-700 dark:bg-blue-900/40 dark:text-blue-300\"\r\n            }\">\r\n            ${riskLevel}\r\n          </div>\r\n      </div>\r\n    </div>\r\n</div>\r\n  `;\r\n}\r\n\r\n/**\r\n * Render ICH volume display for integration into risk card\r\n * @param {object} data - ICH risk data containing GFAP value\r\n * @returns {string} HTML for volume display\r\n */\r\nfunction renderICHVolumeDisplay(data) {\r\n  const gfapValue = data.gfap_value || getCurrentGfapValue();\r\n  if (!gfapValue || gfapValue <= 0) return \"\";\r\n\r\n  const estVolume = estimateVolumeFromGFAP(gfapValue);\r\n  return `\r\n    <div class=\"volume-display-container\">\r\n      ${renderCircularBrainDisplay(estVolume)}\r\n    </div>\r\n  `;\r\n}\r\n\r\n/**\r\n * Get current GFAP value from form data\r\n * @returns {number} GFAP value or 0 if not available\r\n */\r\nfunction getCurrentGfapValue() {\r\n  const state = store.getState();\r\n  const { formData } = state;\r\n\r\n  // Check all modules for GFAP value\r\n  for (const module of [\"coma\", \"limited\", \"full\"]) {\r\n    if (formData[module]?.gfap_value) {\r\n      return parseFloat(formData[module].gfap_value);\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\nfunction renderLVONotPossible() {\r\n  return `\r\n    <div class=\"enhanced-risk-card lvo not-possible\">\r\n      <div class=\"risk-header\">\r\n        <div class=\"risk-icon\">🔍</div>\r\n        <div class=\"risk-title\">\r\n          <h3>${t(\"lvoProbability\")}</h3>\r\n          <span class=\"risk-module\">${t(\"limitedAssessment\")}</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"not-possible-content\">\r\n        <p>${t(\"lvoNotPossible\")}</p>\r\n        <p>${t(\"fullExamRequired\")}</p>\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n\r\nexport function renderResults(results, startTime) {\r\n  try {\r\n    // Add error handling for missing results\r\n    if (!results) {\r\n      console.error(\"renderResults: No results data provided\");\r\n      return `\r\n        <div class=\"container\">\r\n          <div class=\"error-message\">\r\n            <h2>No Results Available</h2>\r\n            <p>Please complete an assessment first.</p>\r\n            <button class=\"primary\" onclick=\"window.location.reload()\">Start Over</button>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n\r\n    const { ich, lvo } = results;\r\n\r\n    // Determine current module\r\n    const currentModule = getCurrentModuleName(ich);\r\n\r\n    // Calculate legacy model for research comparison (only for stroke modules)\r\n    const legacyResults = currentModule !== \"coma\" ? calculateLegacyFromResults(results) : null;\r\n\r\n    // Debug logging for research mode\r\n\r\n    // Log research data if research mode is enabled (background, non-breaking)\r\n    if (legacyResults && isResearchModeEnabled(currentModule)) {\r\n      safeLogResearchData(ich, legacyResults, getPatientInputs());\r\n    }\r\n\r\n    // Detect which module was used based on the data\r\n    const isLimitedOrComa =\r\n      ich?.module === \"Limited\" || ich?.module === \"Coma\" || lvo?.notPossible === true;\r\n    const isFullModule = ich?.module === \"Full Stroke\" || ich?.module?.includes(\"Full\");\r\n\r\n    let resultsHtml;\r\n\r\n    // Debug logging\r\n    console.log(\"[Results] ICH data:\", ich);\r\n    console.log(\"[Results] LVO data:\", lvo);\r\n    console.log(\"[Results] ICH module:\", ich?.module);\r\n    console.log(\"[Results] isLimitedOrComa:\", isLimitedOrComa);\r\n    console.log(\"[Results] isFullModule:\", isFullModule);\r\n\r\n    // For limited/coma modules - only show ICH\r\n    if (isLimitedOrComa) {\r\n      resultsHtml = renderICHFocusedResults(ich, results, startTime, legacyResults, currentModule);\r\n    } else {\r\n      // For full module - show ICH prominently with conditional LVO text\r\n      resultsHtml = renderFullModuleResults(\r\n        ich,\r\n        lvo,\r\n        results,\r\n        startTime,\r\n        legacyResults,\r\n        currentModule\r\n      );\r\n    }\r\n\r\n    // Initialize animations after DOM update\r\n    setTimeout(async () => {\r\n      console.log(\"[Results] Initializing volume animations...\");\r\n      initializeVolumeAnimations();\r\n      try {\r\n        const { mountIslands } = await import(\"../../react/mountIslands.jsx\");\r\n        mountIslands();\r\n      } catch (err) {\r\n        // ('React islands not available:', err);\r\n      }\r\n    }, 100);\r\n\r\n    return resultsHtml;\r\n  } catch (error) {\r\n    console.error(\"Error in renderResults:\", error);\r\n    return `\r\n      <div class=\"container\">\r\n        <div class=\"error-message\">\r\n          <h2>Error Displaying Results</h2>\r\n          <p>There was an error displaying the results. Error: ${error.message}</p>\r\n          <button class=\"primary\" onclick=\"window.location.reload()\">Start Over</button>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\nexport function renderICHFocusedResults(ich, results, startTime, legacyResults, currentModule) {\r\n  const criticalAlert = ich && ich.probability > 0.6 ? renderCriticalAlert() : \"\";\r\n  const ichPercentLocal = Math.round((ich?.probability || 0) * 100);\r\n  const strokeCenterHtml = renderStrokeCenterMap(results);\r\n  const inputSummaryHtml = renderInputSummary();\r\n  const researchToggleHtml = isResearchModeEnabled(currentModule) ? renderResearchToggle() : \"\";\r\n  const researchComparisonHtml =\r\n    legacyResults && isResearchModeEnabled(currentModule)\r\n      ? renderModelComparison(ich, legacyResults, getPatientInputs())\r\n      : \"\";\r\n\r\n  const alternativeDiagnosesHtml =\r\n    ich?.module === \"Coma\" ? renderComaAlternativeDiagnoses(ich.probability) : \"\";\r\n\r\n  const strokeDifferentialHtml =\r\n    ich?.module !== \"Coma\" ? renderStrokeDifferentialDiagnoses(ich.probability) : \"\";\r\n\r\n  return `\r\n    <div class=\"container mx-auto px-4 py-8 max-w-5xl\">\r\n      <!-- Progress -->\r\n      <div class=\"mb-8\">\r\n        ${renderProgressIndicator(3)}\r\n      </div>\r\n\r\n      <!-- Title -->\r\n      <h2 class=\"text-2xl font-bold text-center text-gray-900 dark:text-white mb-6\">\r\n        ${t(\"bleedingRiskAssessment\") || \"Blutungsrisiko-Bewertung / Bleeding Risk Assessment\"}\r\n      </h2>\r\n\r\n      <!-- Critical Alert -->\r\n      ${criticalAlert ? `<div class=\"mb-6\">${criticalAlert}</div>` : \"\"}\r\n\r\n      <!-- ICH Risk Card -->\r\n      <div class=\"bg-white dark:bg-gray-800 shadow-lg rounded-2xl p-6 mb-6\">\r\n        ${renderRiskCard(\"ich\", ich, results)}\r\n      </div>\r\n\r\n      <!-- ICH Volume (Coma only) -->\r\n      ${\r\n        ich?.module === \"Coma\" && ichPercentLocal >= 50\r\n          ? `\r\n          <div class=\"bg-white dark:bg-gray-800 shadow-lg rounded-2xl p-6 mb-6\">\r\n            ${renderVolumeCard(ich)}\r\n          </div>\r\n        `\r\n          : \"\"\r\n      }\r\n\r\n      <!-- Alternative Diagnoses (Coma) -->\r\n      ${alternativeDiagnosesHtml ? `<div class=\"mb-6\">${alternativeDiagnosesHtml}</div>` : \"\"}\r\n\r\n      <!-- Stroke Differential Diagnoses -->\r\n      ${strokeDifferentialHtml ? `<div class=\"mb-6\">${strokeDifferentialHtml}</div>` : \"\"}\r\n\r\n      <!-- Research Comparison -->\r\n      ${researchComparisonHtml ? `<div class=\"mb-6\">${researchComparisonHtml}</div>` : \"\"}\r\n\r\n      <!-- ICH Drivers (non-Coma) -->\r\n      ${\r\n        ich?.module !== \"Coma\"\r\n          ? `\r\n          <div class=\"alternative-diagnosis-card bg-white dark:bg-gray-800 rounded-2xl shadow-md p-6 my-6 transition-all duration-300 hover:shadow-lg\">\r\n          <div class=\"diagnosis-header flex items-center gap-3 border-b border-gray-200 dark:border-gray-700 pb-3 mb-4\">\r\n            <span class=\"text-3xl\">⚡</span>\r\n            <h3 class=\"text-lg font-semibold text-gray-800 dark:text-gray-100\"> ${t(\"riskFactorsTitle\") || \"Hauptrisikofaktoren / Main Risk Factorss\"}</h3>\r\n          </div>\r\n           ${renderICHDriversOnly(ich)}\r\n        </div>`\r\n          : \"\"\r\n      }\r\n\r\n      <!-- Collapsible Sections -->\r\n      <div class=\"space-y-4 mb-8\">\r\n        <!-- Input Summary -->\r\n        <div class=\"border border-gray-200 dark:border-gray-700 rounded-xl overflow-hidden\">\r\n          <button \r\n            class=\"w-full flex items-center justify-between px-4 py-3 bg-gray-50 dark:bg-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 transition info-toggle\"\r\n            data-target=\"input-summary\">\r\n            <div class=\"flex items-center gap-2\">\r\n              <span class=\"text-xl\">📋</span>\r\n              <span class=\"font-medium text-gray-800 dark:text-gray-200\">${t(\"inputSummaryTitle\")}</span>\r\n            </div>\r\n            <span class=\"text-gray-600 dark:text-gray-300\">▼</span>\r\n          </button>\r\n          <div id=\"input-summary\" class=\"collapsible-content hidden bg-white dark:bg-gray-800 p-4\">\r\n            ${inputSummaryHtml}\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Stroke Centers -->\r\n        <div class=\"border border-gray-200 dark:border-gray-700 rounded-xl overflow-hidden\">\r\n          <button \r\n            class=\"info-toggle w-full flex items-center justify-between px-4 py-3 bg-gray-50 dark:bg-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 transition\"\r\n            data-target=\"stroke-centers\">\r\n            <div class=\"flex items-center gap-2\">\r\n              <span class=\"text-xl\">🏥</span>\r\n              <span class=\"font-medium text-gray-800 dark:text-gray-200\">${t(\"nearestCentersTitle\")}</span>\r\n            </div>\r\n            <span class=\"text-gray-600 dark:text-gray-300\">▼</span>\r\n          </button>\r\n          <div id=\"stroke-centers\" class=\"collapsible-content hidden bg-white dark:bg-gray-800 p-4 my-3\">\r\n            ${strokeCenterHtml}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Actions -->\r\n      <div class=\"flex flex-col md:flex-row md:justify-between gap-4 mb-8\">\r\n        <div class=\"flex flex-wrap gap-4\">\r\n          <button id=\"printResults\" class=\"px-5 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-xl font-semibold shadow-md transition\">\r\n            📄 ${t(\"printResults\")}\r\n          </button>\r\n          <button data-action=\"reset\" class=\"px-5 py-3 bg-gray-200 hover:bg-gray-300 text-gray-800 rounded-xl font-semibold shadow-md transition\">\r\n            ${t(\"newAssessment\")}\r\n          </button>\r\n        </div>\r\n        <div class=\"flex flex-wrap gap-4\">\r\n          <button data-action=\"goBack\" class=\"px-5 py-3 text-blue-600 hover:text-blue-700 font-medium transition\">\r\n            ← ${t(\"goBack\")}\r\n          </button>\r\n          <button data-action=\"goHome\" class=\"px-5 py-3 text-blue-600 hover:text-blue-700 font-medium transition\">\r\n            🏠 ${t(\"goHome\")}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Disclaimer -->\r\n      <div class=\"bg-yellow-50 dark:bg-yellow-900 border-l-4 border-yellow-400 p-4 rounded-xl text-sm text-yellow-800 dark:text-yellow-100 mb-6\">\r\n        <strong>⚠️ ${t(\"importantNote\")}:</strong> ${t(\"importantText\")} \r\n        <span class=\"block mt-1 text-xs opacity-80\">Results generated at ${new Date().toLocaleTimeString()}.</span>\r\n      </div>\r\n\r\n      <!-- Bibliography -->\r\n      <div class=\"mt-6\">${renderBibliography(ich)}</div>\r\n\r\n      <!-- Research Toggle -->\r\n      ${researchToggleHtml ? `<div class=\"mt-6\">${researchToggleHtml}</div>` : \"\"}\r\n    </div>\r\n  `;\r\n}\r\n\r\nfunction renderFullModuleResults(ich, lvo, results, startTime, legacyResults, currentModule) {\r\n  const ichPercent = Math.round((ich?.probability || 0) * 100);\r\n  const lvoPercent = Math.round((lvo?.probability || 0) * 100);\r\n\r\n  console.log(\"[FullModuleResults] ICH probability:\", ich?.probability, \"-> %:\", ichPercent);\r\n  console.log(\"[FullModuleResults] LVO probability:\", lvo?.probability, \"-> %:\", lvoPercent);\r\n\r\n  const criticalAlert = ich && ich.probability > 0.6 ? renderCriticalAlert() : \"\";\r\n  const strokeCenterHtml = renderStrokeCenterMap(results);\r\n  const inputSummaryHtml = renderInputSummary();\r\n  const researchToggleHtml = isResearchModeEnabled(currentModule) ? renderResearchToggle() : \"\";\r\n  const researchComparisonHtml =\r\n    legacyResults && isResearchModeEnabled(currentModule)\r\n      ? renderModelComparison(ich, legacyResults, getPatientInputs())\r\n      : \"\";\r\n\r\n  // Get FAST-ED score from form data to determine LVO display\r\n  const state = store.getState();\r\n  const fastEdScore = parseInt(state.formData?.full?.fast_ed_score) || 0;\r\n\r\n  // Ensure we only show LVO in full module and when LVO data is available\r\n  const isFullModule = currentModule === \"full\" || ich?.module === \"Full\";\r\n  const hasValidLVO = lvo && typeof lvo.probability === \"number\" && !lvo.notPossible;\r\n  const showLVORiskCard = isFullModule && fastEdScore > 3 && hasValidLVO;\r\n\r\n  // ('  Conditions: isFullModule:', isFullModule);\r\n  // ('  Conditions: fastEdScore > 3:', fastEdScore > 3);\r\n  // ('  Conditions: hasValidLVO:', hasValidLVO);\r\n  // ('  Show LVO Card:', showLVORiskCard);\r\n\r\n  // Determine layout configuration\r\n  const showVolumeCard = ichPercent >= 50;\r\n  const maxProbability = Math.max(ichPercent, lvoPercent);\r\n  // Robust ratio for gating (avoid divide-by-zero)\r\n  const eps = 0.5;\r\n  const ratio = lvoPercent / Math.max(ichPercent, eps);\r\n  const inRatioBand = ratio >= 0.6 && ratio <= 1.7;\r\n  // Strong-signal gate: both ICH and LVO at least 50%, and ratio in an informative band\r\n  const showTachometer = isFullModule && ichPercent >= 50 && lvoPercent >= 50 && inRatioBand;\r\n  const showDominanceBanner = isFullModule && ichPercent >= 50 && lvoPercent >= 50 && !inRatioBand;\r\n  // DEBUG: Temporary relaxed conditions for testing\r\n  const debugShowTachometer = isFullModule && ichPercent >= 30 && lvoPercent >= 30;\r\n\r\n  // Calculate number of cards and layout class\r\n  let cardCount = 1; // Always have ICH\r\n  // No placeholder needed - only show LVO card when FAST-ED > 3\r\n  if (showLVORiskCard) {\r\n    cardCount++;\r\n  }\r\n  if (showVolumeCard) {\r\n    cardCount++;\r\n  }\r\n\r\n  const layoutClass =\r\n    cardCount === 1\r\n      ? \"risk-results-single\"\r\n      : cardCount === 2\r\n        ? \"risk-results-dual\"\r\n        : \"risk-results-triple\";\r\n\r\n  // Add differential diagnoses for stroke modules\r\n  const strokeDifferentialHtml = renderStrokeDifferentialDiagnoses(ich.probability);\r\n\r\n  return `\r\n     <div class=\"container mx-auto px-4 py-8 max-w-5xl\">\r\n      <!-- Progress -->\r\n      <div class=\"mb-8\">\r\n        ${renderProgressIndicator(3)}\r\n      </div>\r\n      <h2 class=\"text-2xl font-extrabold text-gray-900 dark:text-white mb-4 text-center\">\r\n        ${t(\"resultsTitle\")}\r\n      </h2>\r\n      ${criticalAlert}\r\n      \r\n      <!-- Risk Assessment Display -->\r\n      <div class=\"${layoutClass} gap-1 flex flex-col flex-wrap justify-center items-stretch mb-6\">\r\n        ${renderRiskCard(\"ich\", ich, results)}\r\n        ${showLVORiskCard ? renderRiskCard(\"lvo\", lvo, results) : \"\"}\r\n        ${showVolumeCard ? renderVolumeCard(ich) : \"\"}\r\n      </div>\r\n      \r\n      <!-- Treatment Decision Gauge (when strong signal) -->\r\n      ${debugShowTachometer ? renderTachometerGauge(ichPercent, lvoPercent) : \"\"}\r\n      ${!debugShowTachometer && showDominanceBanner ? renderDominanceBanner(ichPercent, lvoPercent, ratio) : \"\"}\r\n      \r\n      <!-- Differential Diagnoses for Stroke Modules -->\r\n      ${strokeDifferentialHtml}\r\n      \r\n      <!-- Research Model Comparison (hidden unless research mode) -->\r\n      ${researchComparisonHtml}\r\n      \r\n      <!-- Risk Factor Drivers -->\r\n      <div class=\"alternative-diagnosis-card bg-white dark:bg-gray-800 rounded-2xl shadow-md p-6 my-6 transition-all duration-300 hover:shadow-lg\">\r\n        <div class=\"diagnosis-header flex items-center gap-3 border-b border-gray-200 dark:border-gray-700 pb-3 mb-4\">\r\n          <span class=\"text-3xl\">⚡</span>\r\n          <h3 class=\"text-lg font-semibold text-gray-800 dark:text-gray-100\"> ${t(\"riskFactorsTitle\") || \"Risikofaktoren / Risk Factors\"}</h3>\r\n        </div>\r\n      ${showLVORiskCard ? renderDriversSection(ich, lvo) : renderICHDriversOnly(ich)}\r\n      </div>\r\n      \r\n      <!-- Collapsible Additional Information -->\r\n      <div class=\"space-y-4 mb-8\">\r\n        <!-- Input Summary -->\r\n        <div class=\"border border-gray-200 dark:border-gray-700 rounded-xl overflow-hidden\">\r\n          <button \r\n            class=\"w-full flex items-center justify-between px-4 py-3 bg-gray-50 dark:bg-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 transition info-toggle\"\r\n            data-target=\"input-summary\">\r\n            <div class=\"flex items-center gap-2\">\r\n              <span class=\"text-xl\">📋</span>\r\n              <span class=\"font-medium text-gray-800 dark:text-gray-200\">${t(\"inputSummaryTitle\")}</span>\r\n            </div>\r\n            <span class=\"text-gray-600 dark:text-gray-300\">▼</span>\r\n          </button>\r\n          <div id=\"input-summary\" class=\"collapsible-content hidden bg-white dark:bg-gray-800 p-4\">\r\n            ${inputSummaryHtml}\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Stroke Centers -->\r\n        <div class=\"border border-gray-200 dark:border-gray-700 rounded-xl overflow-hidden\">\r\n          <button \r\n            class=\"info-toggle w-full flex items-center justify-between px-4 py-3 bg-gray-50 dark:bg-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 transition\"\r\n            data-target=\"stroke-centers\">\r\n            <div class=\"flex items-center gap-2\">\r\n              <span class=\"text-xl\">🏥</span>\r\n              <span class=\"font-medium text-gray-800 dark:text-gray-200\">${t(\"nearestCentersTitle\")}</span>\r\n            </div>\r\n            <span class=\"text-gray-600 dark:text-gray-300\">▼</span>\r\n          </button>\r\n          <div id=\"stroke-centers\" class=\"collapsible-content hidden bg-white dark:bg-gray-800 p-4\">\r\n            ${strokeCenterHtml}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n       <!-- Actions -->\r\n      <div class=\"flex flex-col md:flex-row md:justify-between gap-4 mb-8\">\r\n        <div class=\"flex flex-wrap gap-4\">\r\n          <button id=\"printResults\" class=\"px-5 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-xl font-semibold shadow-md transition\">\r\n            📄 ${t(\"printResults\")}\r\n          </button>\r\n          <button data-action=\"reset\" class=\"px-5 py-3 bg-gray-200 hover:bg-gray-300 text-gray-800 rounded-xl font-semibold shadow-md transition\">\r\n            ${t(\"newAssessment\")}\r\n          </button>\r\n        </div>\r\n        <div class=\"flex flex-wrap gap-4\">\r\n          <button data-action=\"goBack\" class=\"px-5 py-3 text-blue-600 hover:text-blue-700 font-medium transition\">\r\n            ← ${t(\"goBack\")}\r\n          </button>\r\n          <button data-action=\"goHome\" class=\"px-5 py-3 text-blue-600 hover:text-blue-700 font-medium transition\">\r\n            🏠 ${t(\"goHome\")}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Disclaimer -->\r\n      <div class=\"bg-yellow-50 dark:bg-yellow-900 border-l-4 border-yellow-400 p-4 rounded-xl text-sm text-yellow-800 dark:text-yellow-100 mb-6\">\r\n        <strong>⚠️ ${t(\"importantNote\")}:</strong> ${t(\"importantText\")} \r\n        <span class=\"block mt-1 text-xs opacity-80\">Results generated at ${new Date().toLocaleTimeString()}.</span>\r\n      </div>\r\n\r\n      <!-- Bibliography -->\r\n      <div class=\"mt-6\">${renderBibliography(ich)}</div>\r\n\r\n      <!-- Research Toggle -->\r\n      ${researchToggleHtml ? `<div class=\"mt-6\">${researchToggleHtml}</div>` : \"\"}\r\n    </div>\r\n  `;\r\n}\r\n\r\nfunction renderLVONotification() {\r\n  return `\r\n    <div class=\"secondary-notification\">\r\n      <p class=\"lvo-possible\">\r\n        ⚡ ${t(\"lvoMayBePossible\") || \"Großgefäßverschluss möglich / Large vessel occlusion possible\"}\r\n      </p>\r\n    </div>\r\n  `;\r\n}\r\n\r\nfunction renderDominanceBanner(ichPercent, lvoPercent, ratio) {\r\n  const dominant = ratio > 1 ? \"LVO\" : \"ICH\";\r\n  const icon = dominant === \"LVO\" ? \"🧠\" : \"🩸\";\r\n  const dominantText =\r\n    i18n.getCurrentLanguage() === \"de\"\r\n      ? dominant === \"LVO\"\r\n        ? \"LVO-dominant\"\r\n        : \"ICH-dominant\"\r\n      : dominant === \"LVO\"\r\n        ? \"LVO dominant\"\r\n        : \"ICH dominant\";\r\n  const subtitle =\r\n    i18n.getCurrentLanguage() === \"de\"\r\n      ? `Verhältnis LVO/ICH: ${ratio.toFixed(2)}`\r\n      : `LVO/ICH ratio: ${ratio.toFixed(2)}`;\r\n  return `\r\n    <div class=\"tachometer-section w-full my-6\">\r\n      <div class=\"tachometer-card\">\r\n        <div class=\"treatment-recommendation ${dominant === \"LVO\" ? \"lvo-dominant\" : \"ich-dominant\"}\">\r\n          <div class=\"recommendation-icon\">${icon}</div>\r\n          <div class=\"recommendation-text\">\r\n            <h4>${dominantText}</h4>\r\n            <p>${subtitle}</p>\r\n          </div>\r\n          <div class=\"probability-summary\">\r\n            ICH: ${ichPercent}% | LVO: ${lvoPercent}%\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n\r\nfunction renderICHDriversOnly(ich) {\r\n  if (!ich || !ich.drivers) {\r\n    return `\r\n      <div class=\"no-drivers text-center py-6 text-gray-500 dark:text-gray-400 italic\">\r\n        No driver data available\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  const { positive = [], negative = [] } = ich.drivers || {};\r\n\r\n  if (!Array.isArray(positive) && !Array.isArray(negative)) {\r\n    return `\r\n      <div class=\"no-drivers text-center py-6 text-red-500 dark:text-red-400 font-medium\">\r\n        Driver format error\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  return `\r\n    <div class=\"drivers-split-view grid grid-cols-1 md:grid-cols-2 gap-5 my-5\">\r\n      \r\n      <!-- Positive Drivers -->\r\n      <div class=\"drivers-column positive-column rounded-2xl bg-gradient-to-br from-green-50 to-white dark:from-green-950/40 dark:to-gray-900 border border-green-200 dark:border-green-800 shadow-sm hover:shadow-md transition-all duration-300\">\r\n        <div class=\"column-header flex items-center gap-2 px-5 py-3 border-b border-green-100 dark:border-green-800\">\r\n          <span class=\"column-icon text-green-600 dark:text-green-400 text-xl\">⬆</span>\r\n          <span class=\"column-title font-semibold text-green-800 dark:text-green-200 tracking-wide uppercase text-sm\">\r\n            ${t(\"increasingRisk\") || \"Increasing Risk\"}\r\n          </span>\r\n        </div>\r\n        <div class=\"compact-drivers p-4 space-y-2\">\r\n          ${\r\n            positive.length > 0\r\n              ? positive\r\n                  .slice(0, 5)\r\n                  .map(d => renderCompactDriver(d, \"positive\"))\r\n                  .join(\"\")\r\n              : `<p class=\"no-factors text-gray-500 dark:text-gray-400 italic text-sm\"> \r\n                  ${t(\"noFactors\") || \"No factors\"} \r\n                 </p>`\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Negative Drivers -->\r\n      <div class=\"drivers-column negative-column rounded-2xl bg-gradient-to-br from-blue-50 to-white dark:from-blue-950/40 dark:to-gray-900 border border-blue-200 dark:border-blue-800 shadow-sm hover:shadow-md transition-all duration-300\">\r\n        <div class=\"column-header flex items-center gap-2 px-5 py-3 border-b border-blue-100 dark:border-blue-800\">\r\n          <span class=\"column-icon text-blue-600 dark:text-blue-400 text-xl\">⬇</span>\r\n          <span class=\"column-title font-semibold text-blue-800 dark:text-blue-200 tracking-wide uppercase text-sm\">\r\n            ${t(\"decreasingRisk\") || \"Decreasing Risk\"}\r\n          </span>\r\n        </div>\r\n        <div class=\"compact-drivers p-4 space-y-2\">\r\n          ${\r\n            negative.length > 0\r\n              ? negative\r\n                  .slice(0, 5)\r\n                  .map(d => renderCompactDriver(d, \"negative\"))\r\n                  .join(\"\")\r\n              : `<p class=\"no-factors text-gray-500 dark:text-gray-400 italic text-sm\">\r\n                  ${t(\"noFactors\") || \"No factors\"}\r\n                 </p>`\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n\r\nfunction renderCompactDriver(driver, type) {\r\n  const percentage = Math.abs(driver.weight * 100).toFixed(1);\r\n  const isPositive = type === \"positive\";\r\n\r\n  const textColor = isPositive\r\n    ? \"text-green-700 dark:text-green-300\"\r\n    : \"text-blue-700 dark:text-blue-300\";\r\n\r\n  const borderColor = isPositive\r\n    ? \"border-green-300 dark:border-green-600\"\r\n    : \"border-blue-300 dark:border-blue-600\";\r\n\r\n  const bgColor = isPositive\r\n    ? \"bg-green-50 dark:bg-green-950/40\"\r\n    : \"bg-blue-50 dark:bg-blue-950/40\";\r\n\r\n  return `\r\n    <div class=\"compact-driver-item flex justify-between items-center ${bgColor} border ${borderColor} rounded-lg px-3 py-2 shadow-sm hover:shadow-md transition-all duration-300\">\r\n      <div class=\"compact-driver-label text-sm font-medium ${textColor}\">\r\n        ${formatDriverName(driver.label)}\r\n      </div>\r\n      <div class=\"compact-driver-value text-sm font-semibold ${textColor}\">\r\n        ${percentage}%\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n\r\n/**\r\n * Render bibliography footer with research citations\r\n * @param {object} ichData - ICH risk data containing probability\r\n * @returns {string} HTML for bibliography section\r\n */\r\nfunction renderBibliography(ichData) {\r\n  if (!ichData || !ichData.probability) return \"\";\r\n\r\n  const ichPercent = Math.round((ichData.probability || 0) * 100);\r\n  if (ichPercent < 50) return \"\";\r\n\r\n  const gfapValue = getCurrentGfapValue();\r\n  if (!gfapValue || gfapValue <= 0) return \"\";\r\n\r\n  return `\r\n    <div class=\"my-6 border border-gray-200 dark:border-gray-700 rounded-lg bg-white dark:bg-gray-900 p-5 shadow-sm\">\r\n      <h4 class=\"text-lg font-semibold text-gray-800 dark:text-gray-100 mb-4 flex items-center gap-2\">\r\n        📚 ${t(\"references\")}\r\n      </h4>\r\n      \r\n      <div class=\"space-y-3\">\r\n        <div class=\"flex items-start gap-2\">\r\n          <span class=\"text-sm font-semibold text-blue-600 dark:text-blue-400\">¹</span>\r\n          <p class=\"text-sm text-gray-700 dark:text-gray-300 leading-snug\">\r\n            Broderick et al. (1993). <em>Volume of intracerebral hemorrhage: A powerful and easy-to-use predictor of 30-day mortality.</em> Stroke, 24(7), 987–993.\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"flex items-start gap-2\">\r\n          <span class=\"text-sm font-semibold text-blue-600 dark:text-blue-400\">²</span>\r\n          <p class=\"text-sm text-gray-700 dark:text-gray-300 leading-snug\">\r\n            Krishnan et al. (2013). <em>Hematoma expansion in intracerebral hemorrhage: Predictors and outcomes.</em> Neurology, 81(19), 1660–1666.\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"flex items-start gap-2\">\r\n          <span class=\"text-sm font-semibold text-blue-600 dark:text-blue-400\">³</span>\r\n          <p class=\"text-sm text-gray-700 dark:text-gray-300 leading-snug\">\r\n            Putra et al. (2020). <em>Functional outcomes and mortality in patients with intracerebral hemorrhage.</em> Critical Care Medicine, 48(3), 347–354.\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"flex items-start gap-2\">\r\n          <span class=\"text-sm font-semibold text-blue-600 dark:text-blue-400\">⁴</span>\r\n          <p class=\"text-sm text-gray-700 dark:text-gray-300 leading-snug\">\r\n            Tangella et al. (2020). <em>Early prediction of mortality in intracerebral hemorrhage using clinical markers.</em> Journal of Neurocritical Care, 13(2), 89–97.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n\r\n/**\r\n * Calculate legacy model results from current results data (background, non-breaking)\r\n * @param {object} results - Main model results\r\n * @returns {object|null} - Legacy model results or null if not possible\r\n */\r\nfunction calculateLegacyFromResults(results) {\r\n  try {\r\n    const patientInputs = getPatientInputs();\r\n\r\n    if (!patientInputs.age || !patientInputs.gfap) {\r\n      // console.log('🔍 Missing required inputs for legacy model:', {\r\n      //  age: patientInputs.age,\r\n      //  gfap: patientInputs.gfap,\r\n      // });\r\n      return null;\r\n    }\r\n\r\n    const legacyResult = calculateLegacyICH(patientInputs);\r\n\r\n    return legacyResult;\r\n  } catch (error) {\r\n    // console.log('Legacy model calculation failed (non-critical):', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Get patient input data from store for research logging\r\n * @returns {object} - Patient input data\r\n */\r\nfunction getPatientInputs() {\r\n  const state = store.getState();\r\n  const { formData } = state;\r\n\r\n  // Extract age and GFAP from any module\r\n  let age = null;\r\n  let gfap = null;\r\n\r\n  for (const module of [\"coma\", \"limited\", \"full\"]) {\r\n    if (formData[module]) {\r\n      age = age || formData[module].age_years;\r\n      gfap = gfap || formData[module].gfap_value;\r\n    }\r\n  }\r\n\r\n  const result = {\r\n    age: parseInt(age) || null,\r\n    gfap: parseFloat(gfap) || null,\r\n  };\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Render alternative diagnoses for coma module\r\n * @param {number} probability - ICH probability (0-1)\r\n * @returns {string} HTML for alternative diagnoses\r\n */\r\n\r\nfunction renderStrokeDifferentialDiagnoses(probability) {\r\n  const percent = Math.round(probability * 100);\r\n  if (percent <= 25) return \"\";\r\n\r\n  return `\r\n    <div class=\"alternative-diagnosis-card bg-white dark:bg-gray-800 rounded-2xl shadow-md p-6 my-6 transition-all duration-300 hover:shadow-lg\">\r\n      <!-- Header -->\r\n      <div class=\"diagnosis-header flex items-center gap-3 border-b border-gray-200 dark:border-gray-700 pb-3 mb-4\">\r\n        <span class=\"lightning-icon text-2xl text-yellow-500\">⚡</span>\r\n        <h3 class=\"text-lg font-semibold text-gray-800 dark:text-gray-100\">\r\n          ${t(\"differentialDiagnoses\")}\r\n        </h3>\r\n      </div>\r\n\r\n      <!-- Content -->\r\n      <div class=\"diagnosis-content space-y-4\">\r\n        <!-- Clinical Action Heading -->\r\n        <h4 class=\"clinical-action-heading text-base font-medium text-blue-600 dark:text-blue-400\">\r\n          ${t(\"reconfirmTimeWindow\")}\r\n        </h4>\r\n\r\n        <!-- Diagnosis List -->\r\n        <ul class=\"diagnosis-list list-disc list-inside text-gray-700 dark:text-gray-300 space-y-2 ml-2\">\r\n          <li>${t(\"unclearTimeWindow\")}</li>\r\n          <li>${t(\"rareDiagnoses\")}</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n\r\nfunction renderComaAlternativeDiagnoses(probability) {\r\n  const percent = Math.round(probability * 100);\r\n  const isDE = i18n.getCurrentLanguage() === \"de\";\r\n\r\n  const isHigh = percent > 25;\r\n\r\n  const title = isDE ? \"Differentialdiagnosen\" : \"Differential Diagnoses\";\r\n\r\n  const highRiskList = [\r\n    isDE\r\n      ? \"Alternative Diagnosen sind SAB, SDH, EDH (Subarachnoidalblutung, Subduralhämatom, Epiduralhämatom)\"\r\n      : \"Alternative diagnoses include SAH, SDH, EDH (Subarachnoid Hemorrhage, Subdural Hematoma, Epidural Hematoma)\",\r\n    isDE\r\n      ? \"Bei unklarem Zeitfenster seit Symptombeginn oder im erweiterten Zeitfenster kommen auch ein demarkierter Infarkt oder hypoxischer Hirnschaden in Frage\"\r\n      : \"In cases of unclear time window since symptom onset or extended time window, demarcated infarction or hypoxic brain injury should also be considered\",\r\n  ];\r\n\r\n  const lowRiskList = [\r\n    isDE\r\n      ? \"Alternative Diagnose von Vigilanzminderung wahrscheinlich\"\r\n      : \"Alternative diagnosis for reduced consciousness likely\",\r\n    isDE\r\n      ? \"Ein Verschluss der Arteria Basilaris ist nicht ausgeschlossen\"\r\n      : \"Basilar artery occlusion cannot be excluded\",\r\n  ];\r\n\r\n  const listItems = (isHigh ? highRiskList : lowRiskList)\r\n    .map(item => `<li class=\"mb-2 text-gray-700 dark:text-gray-300 leading-relaxed\">${item}</li>`)\r\n    .join(\"\");\r\n\r\n  return `\r\n    <div class=\"alternative-diagnosis-card bg-white dark:bg-gray-800 shadow-md rounded-2xl p-5 transition-all duration-300 hover:shadow-lg\">\r\n      <!-- Header -->\r\n      <div class=\"diagnosis-header flex items-center gap-3 border-b border-gray-200 dark:border-gray-700 pb-3 mb-4\">\r\n        <span class=\"text-3xl\">⚡</span>\r\n        <h3 class=\"text-lg font-semibold text-gray-800 dark:text-gray-100\">${title}</h3>\r\n      </div>\r\n\r\n      <!-- Content -->\r\n      <div class=\"diagnosis-content\">\r\n        <ul class=\"diagnosis-list list-disc pl-5\">\r\n          ${listItems}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n\r\n/**\r\n * Get current module name from results\r\n * @param {object} ich - ICH results containing module information\r\n * @returns {string} - Module name ('coma', 'limited', 'full')\r\n */\r\nfunction getCurrentModuleName(ich) {\r\n  if (!ich?.module) {\r\n    return \"unknown\";\r\n  }\r\n\r\n  const module = ich.module.toLowerCase();\r\n  if (module.includes(\"coma\")) {\r\n    return \"coma\";\r\n  }\r\n  if (module.includes(\"limited\")) {\r\n    return \"limited\";\r\n  }\r\n  if (module.includes(\"full\")) {\r\n    return \"full\";\r\n  }\r\n\r\n  return \"unknown\";\r\n}\r\n\r\n/**\r\n * Render volume as a standalone risk card (for horizontal layout)\r\n * @param {object} ichData - ICH data containing volume information\r\n * @returns {string} HTML for volume risk card\r\n */\r\nfunction renderVolumeCard(ichData) {\r\n  const gfapValue = getCurrentGfapValue();\r\n  if (!gfapValue || gfapValue <= 0) return \"\";\r\n\r\n  const estVolume = estimateVolumeFromGFAP(gfapValue);\r\n  const mortality = estimateMortalityFromVolume(estVolume);\r\n  const percent = Math.round((ichData?.probability || 0) * 100);\r\n\r\n  return `\r\n    <div class=\"enhanced-risk-card volume-card bg-white dark:bg-gray-800 shadow-md rounded-2xl p-5 transition-all duration-300 hover:shadow-lg my-2\">\r\n      <!-- Header -->\r\n      <div class=\"risk-header flex items-center gap-3 border-b border-gray-200 dark:border-gray-700 pb-3 mb-4\">\r\n        <div class=\"risk-icon text-3xl\">🧮</div>\r\n        <div class=\"risk-title\">\r\n          <h3 class=\"text-lg font-semibold text-gray-800 dark:text-gray-100\">${t(\"ichVolumeLabel\")}</h3>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Body -->\r\n      <div class=\"risk-body flex flex-col items-center\">\r\n        <!-- Volume Display -->\r\n        <div class=\"circles-container flex flex-col items-center\">\r\n          <div class=\"rings-row flex justify-center\">\r\n            <div class=\"circle-item flex flex-col items-center\">\r\n              ${renderICHVolumeDisplay(ichData)}\r\n              <div class=\"circle-label text-sm font-medium text-gray-700 dark:text-gray-300 mt-3\">${t(\"ichVolumeLabel\")}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Risk Details -->\r\n        <div class=\"risk-details mt-6 w-full grid grid-cols-1 sm:grid-cols-2 gap-4 text-sm text-gray-800 dark:text-gray-200\">\r\n          <div class=\"mortality-assessment bg-gray-100 dark:bg-gray-700/40 rounded-lg px-4 py-3 flex flex-col items-center\">\r\n            <span class=\"label font-medium text-gray-600 dark:text-gray-400\">${t(\"predictedMortality\")}</span>\r\n            <span class=\"value text-lg font-semibold text-red-600 dark:text-red-400\">${mortality}</span>\r\n          </div>\r\n          <div class=\"probability bg-gray-100 dark:bg-gray-700/40 rounded-lg px-4 py-3 flex flex-col items-center\">\r\n            <span class=\"label font-medium text-gray-600 dark:text-gray-400\">${t(\"probability\")}</span>\r\n            <span class=\"value text-lg font-semibold text-blue-600 dark:text-blue-400\">${percent}%</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n\r\n/**\r\n * Render tachometer gauge for treatment decision when high risk\r\n * @param {number} ichPercent - ICH probability percentage\r\n * @param {number} lvoPercent - LVO probability percentage\r\n * @returns {string} HTML for tachometer gauge\r\n */\r\nfunction renderTachometerGauge(ichPercent, lvoPercent) {\r\n  const ratio = lvoPercent / Math.max(ichPercent, 1);\r\n  const lang = i18n.getCurrentLanguage();\r\n  const title = lang === \"de\" ? \"Entscheidungshilfe – LVO/ICH\" : \"Decision Support – LVO/ICH\";\r\n  const uncertainLabel = lang === \"de\" ? \"Unsicher\" : \"Uncertain\";\r\n\r\n  // Confidence calculation logic\r\n  const diff = Math.abs(lvoPercent - ichPercent);\r\n  const maxP = Math.max(lvoPercent, ichPercent);\r\n  let confidence =\r\n    diff < 10\r\n      ? Math.round(30 + maxP * 0.3)\r\n      : diff < 20\r\n        ? Math.round(50 + maxP * 0.4)\r\n        : Math.round(70 + maxP * 0.3);\r\n  confidence = Math.max(0, Math.min(100, confidence));\r\n\r\n  return `\r\n    <div class=\"tachometer-section flex mt-6 w-full\">\r\n      <div class=\"tachometer-card w-full p-6 rounded-2xl border border-gray-200 dark:border-gray-700 bg-white/80 dark:bg-gray-900/60 backdrop-blur-md shadow-md transition-all duration-300 hover:shadow-xl\">\r\n        \r\n        <!-- Header -->\r\n        <div class=\"tachometer-header flex items-center justify-between mb-6\">\r\n          <h3 class=\"text-xl font-semibold text-gray-800 dark:text-gray-100 flex items-center gap-2\">\r\n            🎯 ${title}\r\n          </h3>\r\n          <div class=\"ratio-display text-sm text-gray-600 dark:text-gray-400\">\r\n            LVO/ICH Ratio: <span class=\"font-semibold text-blue-600 dark:text-blue-400\">${ratio.toFixed(2)}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Gauge Canvas -->\r\n        <div class=\"tachometer-gauge flex justify-center mb-6\">\r\n          <div data-react-tachometer \r\n               data-ich=\"${ichPercent}\" \r\n               data-lvo=\"${lvoPercent}\" \r\n               data-title=\"${title}\" \r\n              ></div>\r\n        </div>\r\n\r\n        <!-- Legend -->\r\n        <div class=\"tachometer-legend flex justify-center gap-4 mb-6 text-sm font-medium\">\r\n          <span class=\"legend-chip px-3 py-1 rounded-full bg-red-100 text-red-700 dark:bg-red-900/40 dark:text-red-300\">ICH</span>\r\n          <span class=\"legend-chip px-3 py-1 rounded-full bg-yellow-100 text-yellow-700 dark:bg-yellow-900/40 dark:text-yellow-300\">${uncertainLabel}</span>\r\n          <span class=\"legend-chip px-3 py-1 rounded-full bg-blue-100 text-blue-700 dark:bg-blue-900/40 dark:text-blue-300\">LVO</span>\r\n        </div>\r\n\r\n        <!-- Metrics -->\r\n        <div class=\"metrics-row grid grid-cols-1 sm:grid-cols-3 gap-4 text-center\">\r\n          <div class=\"metric-card p-4 rounded-xl bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-800 dark:to-gray-900 border border-gray-200 dark:border-gray-700\">\r\n            <div class=\"metric-label text-gray-500 dark:text-gray-400 text-sm uppercase\">Ratio</div>\r\n            <div class=\"metric-value text-2xl font-bold text-blue-600 dark:text-blue-400\">${ratio.toFixed(2)}</div>\r\n            <div class=\"metric-unit text-xs text-gray-500 dark:text-gray-400\">LVO / ICH</div>\r\n          </div>\r\n\r\n          <div class=\"metric-card p-4 rounded-xl bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/20 dark:to-green-800/10 border border-green-200 dark:border-green-800\">\r\n            <div class=\"metric-label text-gray-500 dark:text-gray-400 text-sm uppercase\">Confidence</div>\r\n            <div class=\"metric-value text-2xl font-bold text-green-600 dark:text-green-400\">${confidence}%</div>\r\n            <div class=\"metric-unit text-xs text-gray-500 dark:text-gray-400\">percent</div>\r\n          </div>\r\n\r\n          <div class=\"metric-card p-4 rounded-xl bg-gradient-to-br from-red-50 to-red-100 dark:from-red-900/20 dark:to-red-800/10 border border-red-200 dark:border-red-800\">\r\n            <div class=\"metric-label text-gray-500 dark:text-gray-400 text-sm uppercase\">Difference</div>\r\n            <div class=\"metric-value text-2xl font-bold text-red-600 dark:text-red-400\">${Math.abs(lvoPercent - ichPercent).toFixed(0)}%</div>\r\n            <div class=\"metric-unit text-xs text-gray-500 dark:text-gray-400\">|LVO − ICH|</div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Probability Summary -->\r\n        <div class=\"probability-summary text-center text-sm text-gray-600 dark:text-gray-400 mt-6\">\r\n          <span class=\"font-semibold text-red-600 dark:text-red-400\">ICH:</span> ${ichPercent}% \r\n          <span class=\"mx-2 text-gray-400\">|</span> \r\n          <span class=\"font-semibold text-blue-600 dark:text-blue-400\">LVO:</span> ${lvoPercent}%\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n","/**\n * Login Screen for Research Preview Access\n * iGFAP Stroke Triage Assistant (Tailwind version)\n */\n\nimport { authManager } from \"../../auth/authentication.js\";\nimport { store } from \"../../state/store.js\";\nimport { t } from \"../../localization/i18n.js\";\n\nexport function renderLoginScreen() {\n  return `\n   <div class=\"\">\n  <div class=\"bg-white dark:bg-gray-800 shadow-lg rounded-2xl w-full max-w-xl p-8\">\n    <!-- Header -->\n    <div class=\"text-center mb-6\">\n      <div class=\"flex justify-center items-center space-x-2\">\n        <div class=\"text-3xl\">🧠</div>\n        <h1 class=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">iGFAP Stroke Triage</h1>\n      </div>\n      <div class=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">Research Preview v2.1</div>\n    </div>\n    <!-- Research Access Notice -->\n    <div class=\"mb-6 p-4 bg-yellow-50 dark:bg-gray-700 border-l-4 border-yellow-400 rounded\">\n      <h2 class=\"font-semibold text-lg mb-1 text-gray-900 dark:text-yellow-300\">🔬 ${t(\"researchAccessRequired\")}\n      <p class=\"text-gray-700 dark:text-gray-200 text-sm mb-2\">\n        ${t(\"researchrPreviewValidation\")}\n      </p>\n      <div class=\"bg-yellow-100 dark:bg-gray-800 p-2 rounded border border-yellow-200 dark:border-yellow-600 text-sm text-gray-800 dark:text-gray-100\">\n        <h3 class=\"font-semibold mb-1 text-yellow-600 dark:text-yellow-400\">⚠️ ${t(\"importantNotice\")}</h3>\n        <ul class=\"list-disc ml-5 space-y-1\">\n          <li><span class=\"font-semibold\">${t(\"researchUseOnly\")}</span> - ${t(\"noClinicalDecision\")}</li>\n          <li><span class=\"font-semibold\">${t(\"noDataStorage\")}</span> - ${t(\"dataProcessedLocally\")}</li>\n          <li><span class=\"font-semibold\">${t(\"clinicalAdvisory\")}</span> - ${t(\"supervision\")}</li>\n          <li><span class=\"font-semibold\">${t(\"contact\")}:</span> Deepak Bos (bosdeepak@gmail.com)</li>\n        </ul>\n      </div>\n    </div>\n    <!-- Login Form -->\n    <form id=\"loginForm\" class=\"space-y-4\">\n      <div>\n        <label for=\"researchPassword\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">${t(\"accessCode\")}</label>\n        <input\n          type=\"password\"\n          id=\"researchPassword\"\n          name=\"password\"\n          required\n          autocomplete=\"off\"\n          placeholder=\"${t(\"accessCodePlaceholder\")}\"\n          class=\"mt-1 block w-full px-4 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-900 text-gray-700 dark:text-gray-100 border-gray-300 dark:border-gray-700\"\n        >\n      </div>\n      <div id=\"loginError\" class=\"text-red-600 dark:text-red-400 text-sm hidden\"></div>\n      <button type=\"submit\" class=\"w-full bg-blue-600 dark:bg-blue-800 hover:bg-blue-700 text-white py-2 rounded-lg flex items-center justify-center disabled:opacity-50 login-button\">\n        <span class=\"button-text\">${t(\"accessResearchBtn\")}</span>\n        <span class=\"loading-spinner ml-2 hidden\">⏳</span>\n      </button>\n    </form>\n    <!-- Footer -->\n    <div class=\"mt-6 text-gray-500 dark:text-gray-400 text-xs space-y-1\">\n      <p><strong class=\"text-gray-700 dark:text-gray-200\">${t(\"regulatoryStatus\")}:</strong> ${t(\"protoTypeOnly\")}</p>\n      <p><strong class=\"text-gray-700 dark:text-gray-200\">${t(\"dataProtection\")}:</strong> ${t(\"gdprComplaint\")}</p>\n      <p><strong class=\"text-gray-700 dark:text-gray-200\">${t(\"clinicalOversight\")}:</strong> RKH Klinikum Ludwigsburg, Neurologie</p>\n    </div>\n  </div>\n</div>\n  `;\n}\n\nexport function initializeLoginScreen() {\n  const loginForm = document.getElementById(\"loginForm\");\n\n  if (!loginForm) return;\n\n  const passwordInput = document.getElementById(\"researchPassword\");\n  const loginError = document.getElementById(\"loginError\");\n  const loginButton = loginForm.querySelector(\".login-button\");\n\n  passwordInput.focus();\n\n  loginForm.addEventListener(\"submit\", async e => {\n    e.preventDefault();\n    const password = passwordInput.value.trim();\n\n    if (!password) {\n      showLoginError(\"Please enter the research access code\");\n      return;\n    }\n\n    setLoginLoading(true);\n    hideLoginError();\n\n    try {\n      const authResult = await authManager.authenticate(password);\n      console.log(authResult);\n      if (authResult.success) {\n        store.logEvent(\"auth_success\", {\n          timestamp: new Date().toISOString(),\n          userAgent: navigator.userAgent.substring(0, 100),\n        });\n        store.navigate(\"triage1\");\n      } else {\n        showLoginError(authResult.message);\n        passwordInput.value = \"\";\n        passwordInput.focus();\n        store.logEvent(\"auth_failed\", {\n          timestamp: new Date().toISOString(),\n          errorCode: authResult.errorCode,\n        });\n      }\n    } catch (error) {\n      showLoginError(\"Authentication system error. Please try again.\");\n    } finally {\n      setLoginLoading(false);\n    }\n  });\n\n  passwordInput.addEventListener(\"input\", hideLoginError);\n\n  function showLoginError(message) {\n    loginError.textContent = message;\n    loginError.classList.remove(\"hidden\");\n    passwordInput.classList.add(\"border-red-500\");\n  }\n\n  function hideLoginError() {\n    loginError.classList.add(\"hidden\");\n    passwordInput.classList.remove(\"border-red-500\");\n  }\n\n  function setLoginLoading(isLoading) {\n    const buttonText = loginButton.querySelector(\".button-text\");\n    const loadingSpinner = loginButton.querySelector(\".loading-spinner\");\n\n    if (isLoading) {\n      buttonText.classList.add(\"hidden\");\n      loadingSpinner.classList.remove(\"hidden\");\n      loginButton.disabled = true;\n    } else {\n      buttonText.classList.remove(\"hidden\");\n      loadingSpinner.classList.add(\"hidden\");\n      loginButton.disabled = false;\n    }\n  }\n}\n","/**\n * Accessibility utilities for the Stroke Triage Assistant\n */\n\nexport function announceScreenChange(screen) {\n  const announcement = document.createElement(\"div\");\n  announcement.className = \"sr-only\";\n  announcement.setAttribute(\"role\", \"status\");\n  announcement.setAttribute(\"aria-live\", \"polite\");\n\n  const screenNames = {\n    triage1: \"Coma assessment\",\n    triage2: \"Examination capability assessment\",\n    coma: \"Coma module\",\n    limited: \"Limited data module\",\n    full: \"Full stroke assessment\",\n    results: \"Assessment results\",\n  };\n\n  announcement.textContent = `Navigated to ${screenNames[screen] || screen}`;\n  document.body.appendChild(announcement);\n\n  setTimeout(() => announcement.remove(), 1000);\n}\n\nexport function setPageTitle(screen) {\n  const appName = \"iGFAP\";\n  const titles = {\n    triage1: \"Initial Assessment\",\n    triage2: \"Examination Capability\",\n    coma: \"Coma Module\",\n    limited: \"Limited Data Module\",\n    full: \"Full Stroke Module\",\n    results: \"Assessment Results\",\n  };\n\n  const section = titles[screen];\n  // Brand-first to ensure the tab shows iGFAP even when truncated\n  document.title = section ? `${appName} — ${section}` : appName;\n}\n\nexport function focusMainHeading() {\n  // Focus on the main heading for screen readers\n  setTimeout(() => {\n    const heading = document.querySelector(\"h2\");\n    if (heading) {\n      heading.setAttribute(\"tabindex\", \"-1\");\n      heading.focus();\n      // Remove tabindex after focus for proper tab order\n      setTimeout(() => heading.removeAttribute(\"tabindex\"), 100);\n    }\n  }, 100);\n}\n","import { t } from \"../../localization/i18n.js\";\n\nexport class FastEdCalculator {\n  constructor() {\n    this.scores = {\n      facial_palsy: 0,\n      arm_weakness: 0,\n      speech_changes: 0,\n      eye_deviation: 0,\n      denial_neglect: 0,\n    };\n    this.onApply = null;\n    this.modal = null;\n  }\n\n  getTotal() {\n    return Object.values(this.scores).reduce((sum, score) => sum + score, 0);\n  }\n\n  getRiskLevel() {\n    const total = this.getTotal();\n    return total >= 4 ? \"high\" : \"low\";\n  }\n\n  render() {\n    const total = this.getTotal();\n    const riskLevel = this.getRiskLevel();\n\n    return `\n      <div id=\"fastEdModal\" class=\"fixed inset-0 z-50 hidden items-center justify-center bg-black/40 backdrop-blur-sm\">\n        <div class=\"bg-white dark:bg-gray-900 rounded-2xl shadow-2xl w-full max-w-lg mx-4 overflow-hidden transition-all duration-300\">\n          \n          <!-- Header -->\n          <div class=\"flex items-center justify-between px-6 py-4 border-b border-gray-200 dark:border-gray-700\">\n            <h2 class=\"text-xl font-bold text-gray-800 dark:text-white\">${t(\"fastEdCalculatorTitle\")}</h2>\n            <button class=\"modal-close text-gray-500 hover:text-gray-700 dark:hover:text-gray-300 text-2xl leading-none\">&times;</button>\n          </div>\n\n          <!-- Body -->\n          <div class=\"p-6 space-y-6 max-h-[75vh] overflow-y-auto\">\n            \n            ${this.renderSection(\"facial_palsy\", t(\"facialPalsyTitle\"), [\n    { label: t(\"facialPalsyNormal\"), value: 0 },\n    { label: t(\"facialPalsyMild\"), value: 1 },\n  ])}\n\n            ${this.renderSection(\"arm_weakness\", t(\"armWeaknessTitle\"), [\n    { label: t(\"armWeaknessNormal\"), value: 0 },\n    { label: t(\"armWeaknessMild\"), value: 1 },\n    { label: t(\"armWeaknessSevere\"), value: 2 },\n  ])}\n\n            ${this.renderSection(\"speech_changes\", t(\"speechChangesTitle\"), [\n    { label: t(\"speechChangesNormal\"), value: 0 },\n    { label: t(\"speechChangesMild\"), value: 1 },\n    { label: t(\"speechChangesSevere\"), value: 2 },\n  ])}\n\n            ${this.renderSection(\"eye_deviation\", t(\"eyeDeviationTitle\"), [\n    { label: t(\"eyeDeviationNormal\"), value: 0 },\n    { label: t(\"eyeDeviationPartial\"), value: 1 },\n    { label: t(\"eyeDeviationForced\"), value: 2 },\n  ])}\n\n            ${this.renderSection(\"denial_neglect\", t(\"denialNeglectTitle\"), [\n    { label: t(\"denialNeglectNormal\"), value: 0 },\n    { label: t(\"denialNeglectPartial\"), value: 1 },\n    { label: t(\"denialNeglectComplete\"), value: 2 },\n  ])}\n\n            <!-- Total -->\n            <div class=\"p-4 rounded-xl bg-gray-50 dark:bg-gray-800 flex flex-col items-center text-center\">\n              <h3 class=\"text-lg font-semibold text-gray-800 dark:text-white\">${t(\"totalScoreTitle\")}: \n                <span class=\"text-blue-600 dark:text-blue-400 font-bold text-xl total-score\">${total}/9</span>\n              </h3>\n              <div class=\"risk-indicator mt-2 px-4 py-2 rounded-full font-medium \n                ${\n  riskLevel === \"high\"\n    ? \"bg-red-100 text-red-700 dark:bg-red-900/40 dark:text-red-300\"\n    : \"bg-green-100 text-green-700 dark:bg-green-900/40 dark:text-green-300\"\n}\">\n                ${t(\"riskLevel\")}: ${riskLevel === \"high\" ? t(\"riskLevelHigh\") : t(\"riskLevelLow\")}\n              </div>\n            </div>\n          </div>\n\n          <!-- Footer -->\n          <div class=\"flex justify-end gap-3 px-6 py-4 border-t border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-800\">\n            <button class=\"px-4 py-2 rounded-lg bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-800 dark:text-white font-semibold\" data-action=\"cancel-fast-ed\">${t(\"cancel\")}</button>\n            <button class=\"px-4 py-2 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold\" data-action=\"apply-fast-ed\">${t(\"applyScore\")}</button>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  renderSection(name, title, options) {\n    return `\n      <div class=\"space-y-2\">\n        <h3 class=\"font-semibold text-gray-800 dark:text-gray-100\">${title}</h3>\n        <div class=\"flex flex-wrap gap-3\">\n          ${options\n    .map(\n      opt => `\n            <label class=\"flex items-center gap-2 text-sm text-gray-700 dark:text-gray-300 cursor-pointer\">\n              <input type=\"radio\" name=\"${name}\" value=\"${opt.value}\" \n                class=\"accent-blue-600 dark:accent-blue-500\"\n                ${this.scores[name] === opt.value ? \"checked\" : \"\"}>\n              <span>${opt.label}</span>\n            </label>`\n    )\n    .join(\"\")}\n        </div>\n      </div>\n    `;\n  }\n\n  setupEventListeners() {\n    this.modal = document.getElementById(\"fastEdModal\");\n    if (!this.modal) return;\n\n    this.modal.addEventListener(\"change\", e => {\n      if (e.target.type === \"radio\") {\n        this.scores[e.target.name] = parseInt(e.target.value);\n        this.updateDisplay();\n      }\n    });\n\n    this.modal.querySelector(\".modal-close\")?.addEventListener(\"click\", () => this.close());\n    this.modal\n      .querySelector(\"[data-action=\\\"cancel-fast-ed\\\"]\")\n      ?.addEventListener(\"click\", () => this.close());\n    this.modal\n      .querySelector(\"[data-action=\\\"apply-fast-ed\\\"]\")\n      ?.addEventListener(\"click\", () => this.apply());\n\n    this.modal.addEventListener(\"click\", e => {\n      if (e.target === this.modal) e.stopPropagation();\n    });\n\n    document.addEventListener(\"keydown\", e => {\n      if (e.key === \"Escape\" && this.modal?.classList.contains(\"flex\")) this.close();\n    });\n  }\n\n  updateDisplay() {\n    const totalElement = this.modal?.querySelector(\".total-score\");\n    const riskElement = this.modal?.querySelector(\".risk-indicator\");\n    if (!totalElement || !riskElement) return;\n\n    const total = this.getTotal();\n    const riskLevel = this.getRiskLevel();\n\n    totalElement.textContent = `${total}/9`;\n    riskElement.className =\n      \"risk-indicator mt-2 px-4 py-2 rounded-full font-medium \" +\n      (riskLevel === \"high\"\n        ? \"bg-red-100 text-red-700 dark:bg-red-900/40 dark:text-red-300\"\n        : \"bg-green-100 text-green-700 dark:bg-green-900/40 dark:text-green-300\");\n    riskElement.textContent = `${t(\"riskLevel\")}: ${riskLevel === \"high\" ? t(\"riskLevelHigh\") : t(\"riskLevelLow\")}`;\n  }\n\n  show(currentScore = 0, onApplyCallback = null) {\n    this.onApply = onApplyCallback;\n\n    if (currentScore > 0 && currentScore <= 9) this.approximateFromTotal(currentScore);\n\n    const existingModal = document.getElementById(\"fastEdModal\");\n    if (existingModal) existingModal.remove();\n\n    document.body.insertAdjacentHTML(\"beforeend\", this.render());\n    this.modal = document.getElementById(\"fastEdModal\");\n    this.setupEventListeners();\n\n    this.modal.classList.remove(\"hidden\");\n    this.modal.classList.add(\"flex\");\n  }\n\n  close() {\n    if (!this.modal) return;\n    this.modal.classList.remove(\"flex\");\n    this.modal.classList.add(\"hidden\");\n  }\n\n  apply() {\n    const total = this.getTotal();\n    const armWeaknessBoolean = this.scores.arm_weakness > 0;\n    const eyeDeviationBoolean = this.scores.eye_deviation > 0;\n\n    if (this.onApply) {\n      this.onApply({\n        total,\n        components: { ...this.scores },\n        armWeaknessBoolean,\n        eyeDeviationBoolean,\n      });\n    }\n\n    this.close();\n  }\n\n  approximateFromTotal(total) {\n    this.scores = {\n      facial_palsy: 0,\n      arm_weakness: 0,\n      speech_changes: 0,\n      eye_deviation: 0,\n      denial_neglect: 0,\n    };\n\n    let remaining = total;\n    for (const component of Object.keys(this.scores)) {\n      if (remaining <= 0) break;\n      const max = component === \"facial_palsy\" ? 1 : 2;\n      const assign = Math.min(remaining, max);\n      this.scores[component] = assign;\n      remaining -= assign;\n    }\n  }\n}\n\nexport const fastEdCalculator = new FastEdCalculator();\n","import { renderProgressIndicator } from \"../components/progress.js\";\nimport { t } from \"../../localization/i18n.js\";\n\nexport default function renderTriage1() {\n  return `\n    <div class=\"container mx-auto px-4 py-8 max-w-lg\">\n      <!-- Progress -->\n      <div class=\"mb-6\">\n        ${renderProgressIndicator(1)}\n      </div>\n\n      <!-- Card -->\n      <div class=\"bg-white dark:bg-gray-800 shadow-lg rounded-2xl p-6\">\n        <!-- Title -->\n        <h2 class=\"text-2xl font-extrabold text-gray-900 dark:text-white mb-4 text-center\">\n          ${t(\"triage1Title\")}\n        </h2>\n\n        <!-- Question -->\n        <div class=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-xl mb-6\">\n          <p class=\"text-lg text-gray-800 dark:text-gray-200 font-medium mb-2 text-center\">\n            ${t(\"triage1Question\")}\n          </p>\n          <p class=\"text-sm text-gray-500 dark:text-gray-400 text-center\">\n            ${t(\"triage1Help\")}\n          </p>\n        </div>\n\n        <!-- Buttons -->\n        <div class=\"grid grid-cols-2 gap-4\">\n          <button \n            class=\"yes-btn w-full bg-green-500 hover:bg-green-600 text-white font-semibold py-3 rounded-xl shadow-md transition transform hover:scale-105\"\n            data-action=\"triage1\" \n            data-value=\"true\"\n          >\n             ${t(\"triage1Yes\")} ✅\n          </button>\n          \n          <button \n            class=\"no-btn w-full bg-red-500 hover:bg-red-600 text-white font-semibold py-3 rounded-xl shadow-md transition transform hover:scale-105\"\n            data-action=\"triage1\" \n            data-value=\"false\"\n          >\n             ${t(\"triage1No\")} ❌\n          </button>\n        </div>\n      </div>\n    </div>\n  `;\n}\n","import { renderProgressIndicator } from \"../components/progress.js\";\nimport { t } from \"../../localization/i18n.js\";\n\nexport default function renderTriage2() {\n  return `\n    <div class=\"container mx-auto px-4 py-8 max-w-lg\">\n      <!-- Progress -->\n      <div class=\"mb-6\">\n        ${renderProgressIndicator(2)}\n      </div>\n\n      <!-- Card -->\n      <div class=\"bg-white dark:bg-gray-800 shadow-lg rounded-2xl p-6\">\n        <!-- Title -->\n        <h2 class=\"text-2xl font-extrabold text-gray-900 dark:text-white mb-4 text-center\">\n          ${t(\"triage2Title\")}\n        </h2>\n\n        <!-- Question -->\n        <div class=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-xl mb-6\">\n          <p class=\"text-lg text-gray-800 dark:text-gray-200 font-medium mb-2 text-center\">\n            ${t(\"triage2Question\")}\n          </p>\n          <p class=\"text-sm text-gray-500 dark:text-gray-400 text-center\">\n            ${t(\"triage2Help\")}\n          </p>\n        </div>\n\n        <!-- Buttons -->\n        <div class=\"flex flex-col gap-4\">\n          <button \n            class=\"yes-btn w-full bg-blue-500 hover:bg-blue-600 text-white font-semibold py-3 rounded-xl shadow-md transition transform hover:scale-105\"\n            data-action=\"triage2\" \n            data-value=\"true\"\n          >\n            ${t(\"triage2Yes\")} ✅ \n          </button>\n           <button \n            class=\"no-btn w-full bg-red-500 hover:bg-red-600 text-white font-semibold py-3 rounded-xl shadow-md transition transform hover:scale-105\"\n            data-action=\"triage2\" \n            data-value=\"false\"\n          >\n            ${t(\"triage2No\")} ❌ \n          </button>\n        </div>\n      </div>\n    </div>\n  `;\n}\n","import { store } from \"../state/store.js\";\nimport {\n  handleTriage1,\n  handleTriage2,\n  handleSubmit,\n  reset,\n  goBack,\n  goHome,\n} from \"../logic/handlers.js\";\nimport { initializeResearchMode } from \"../research/comparison-ui.js\";\nimport { authManager } from \"../auth/authentication.js\";\nimport { safeSetInnerHTML } from \"../security/html-sanitizer.js\";\n\nimport { renderComa } from \"./screens/coma.js\";\nimport { renderLimited } from \"./screens/limited.js\";\nimport { renderFull } from \"./screens/full.js\";\nimport { renderResults } from \"./screens/results.js\";\nimport { renderLoginScreen, initializeLoginScreen } from \"./screens/login.js\";\nimport { announceScreenChange, setPageTitle, focusMainHeading } from \"./a11y.js\";\nimport { initializeStrokeCenterMap } from \"./components/stroke-center-map.js\";\nimport { fastEdCalculator } from \"./components/fastEdModal.js\";\nimport renderTriage1 from \"./screens/triage1.js\";\nimport renderTriage2 from \"./screens/triage2.js\";\n\nexport function render(container) {\n  const state = store.getState();\n  const { currentScreen, results, startTime, screenHistory } = state;\n\n  console.log(\"[Render] Rendering screen:\", currentScreen, \"Has results:\", !!results);\n\n  // Optimize DOM updates to prevent CLS\n  const tempContainer = document.createElement(\"div\");\n\n  // Show/hide back button based on navigation history\n  const backButton = document.getElementById(\"backButton\");\n  if (backButton) {\n    backButton.style.display = screenHistory && screenHistory.length > 0 ? \"flex\" : \"none\";\n  }\n\n  // Render the appropriate screen\n  let html = \"\";\n  switch (currentScreen) {\n  case \"login\":\n    html = renderLoginScreen();\n    break;\n  case \"triage1\":\n    // Verify authentication for all clinical screens\n    if (!authManager.isValidSession()) {\n      store.navigate(\"login\");\n      return;\n    }\n    html = renderTriage1();\n    break;\n  case \"triage2\":\n    html = renderTriage2();\n    break;\n  case \"coma\":\n    html = renderComa();\n    break;\n  case \"limited\":\n    html = renderLimited();\n    break;\n  case \"full\":\n    html = renderFull();\n    break;\n  case \"results\":\n    html = renderResults(results, startTime);\n    break;\n  default:\n    html = renderTriage1();\n  }\n\n  // Use secure DOM update to minimize reflows and prevent XSS\n  try {\n    safeSetInnerHTML(tempContainer, html);\n  } catch (error) {\n    // Fallback to text content on sanitization error\n    tempContainer.textContent = \"Error loading content. Please refresh.\";\n  }\n\n  // Single DOM replacement to minimize CLS\n  // Clear container safely without using innerHTML\n  while (container.firstChild) {\n    container.removeChild(container.firstChild);\n  }\n  while (tempContainer.firstChild) {\n    container.appendChild(tempContainer.firstChild);\n  }\n\n  // Restore form data if available\n  const form = container.querySelector(\"form[data-module]\");\n  if (form) {\n    const { module } = form.dataset;\n    restoreFormData(form, module);\n  }\n\n  // Attach event listeners\n  attachEvents(container);\n\n  // Initialize login screen if needed\n  if (currentScreen === \"login\") {\n    setTimeout(() => {\n      initializeLoginScreen();\n    }, 100);\n  }\n\n  // Initialize stroke center map if on results screen\n  if (currentScreen === \"results\" && results) {\n    setTimeout(() => {\n      try {\n        console.log(\"[Render] Initializing stroke center map with results:\", results);\n        initializeStrokeCenterMap(results);\n      } catch (error) {\n        console.error(\"[Render] Stroke center map initialization failed:\", error);\n      }\n    }, 100);\n  }\n\n  // Initialize research mode components\n  setTimeout(() => {\n    try {\n      initializeResearchMode();\n    } catch {}\n  }, 150);\n\n  // Accessibility updates\n  announceScreenChange(currentScreen);\n  setPageTitle(currentScreen);\n  focusMainHeading();\n}\n\nfunction restoreFormData(form, module) {\n  const formData = store.getFormData(module);\n  if (!formData || Object.keys(formData).length === 0) {\n    return;\n  }\n\n  Object.entries(formData).forEach(([key, value]) => {\n    const input = form.elements[key];\n    if (input) {\n      if (input.type === \"checkbox\") {\n        input.checked = value === true || value === \"on\" || value === \"true\";\n      } else {\n        input.value = value;\n      }\n    }\n  });\n}\n\nfunction attachEvents(container) {\n  // Clear validation errors when user starts typing in a field\n  container.querySelectorAll(\"input[type=\\\"number\\\"]\").forEach(input => {\n    input.addEventListener(\"input\", () => {\n      // Only clear errors for the specific field being edited\n      const group = input.closest(\".input-group\");\n      if (group && group.classList.contains(\"error\")) {\n        group.classList.remove(\"error\");\n        group.querySelectorAll(\".error-message\").forEach(el => el.remove());\n      }\n    });\n  });\n\n  // Triage button handlers\n  container.querySelectorAll(\"[data-action]\").forEach(button => {\n    button.addEventListener(\"click\", e => {\n      const { action, value } = e.currentTarget.dataset;\n      const boolVal = value === \"true\";\n\n      switch (action) {\n      case \"triage1\":\n        handleTriage1(boolVal);\n        break;\n      case \"triage2\":\n        handleTriage2(boolVal);\n        break;\n      case \"reset\":\n        reset();\n        break;\n      case \"goBack\":\n        goBack();\n        break;\n      case \"goHome\":\n        goHome();\n        break;\n      }\n    });\n  });\n\n  // Form submission handlers\n  container.querySelectorAll(\"form[data-module]\").forEach(form => {\n    form.addEventListener(\"submit\", e => {\n      handleSubmit(e, container);\n    });\n  });\n\n  // Print button handler\n  const printButton = container.querySelector(\"#printResults\");\n  if (printButton) {\n    printButton.addEventListener(\"click\", () => window.print());\n  }\n\n  // FAST-ED calculator handler\n  const fastEdInput = container.querySelector(\"#fast_ed_score\");\n  if (fastEdInput) {\n    fastEdInput.addEventListener(\"click\", e => {\n      e.preventDefault();\n      const currentValue = parseInt(fastEdInput.value) || 0;\n\n      fastEdCalculator.show(currentValue, result => {\n        // Update FAST-ED score\n        fastEdInput.value = result.total;\n\n        // Update hidden arm weakness field\n        const armPareseField = container.querySelector(\"#armparese_hidden\");\n        if (armPareseField) {\n          armPareseField.value = result.armWeaknessBoolean ? \"true\" : \"false\";\n        }\n\n        // Update eye deviation hidden field if exists\n        const eyeDeviationField = container.querySelector(\"#eye_deviation_hidden\");\n        if (eyeDeviationField) {\n          eyeDeviationField.value = result.eyeDeviationBoolean ? \"true\" : \"false\";\n        }\n\n        // Trigger change event to save form data\n        fastEdInput.dispatchEvent(new Event(\"change\", { bubbles: true }));\n      });\n    });\n    // Prevent manual typing (baseline behavior)\n    fastEdInput.addEventListener(\"keydown\", e => {\n      e.preventDefault();\n    });\n  }\n\n  // Collapsible info toggles handler\n  const infoToggles = container.querySelectorAll(\".info-toggle\");\n\n  // Ensure all collapsible contents start hidden\n  container.querySelectorAll(\".collapsible-content\").forEach(content => {\n    content.style.display = \"none\";\n  });\n\n  infoToggles.forEach(toggle => {\n    toggle.addEventListener(\"click\", () => {\n      const targetId = toggle.dataset.target;\n      const targetContent = container.querySelector(`#${targetId}`);\n      const arrow = toggle.querySelector(\".toggle-arrow\");\n\n      if (!targetContent) return;\n\n      // Check if visible\n      const isVisible = targetContent.style.display === \"block\";\n\n      if (isVisible) {\n        // Hide content\n        targetContent.style.display = \"none\";\n        targetContent.classList.remove(\"show\");\n        toggle.classList.remove(\"active\");\n        arrow.style.transform = \"rotate(0deg)\";\n      } else {\n        // Show content\n        targetContent.style.display = \"block\";\n        targetContent.classList.add(\"show\");\n        toggle.classList.add(\"active\");\n        arrow.style.transform = \"rotate(180deg)\";\n      }\n    });\n  });\n}\n","/**\n * UI Management System\n * iGFAP Stroke Triage Assistant - UI Coordination\n *\n * Handles all UI interactions, event listeners, and component management\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\nimport { store } from \"../state/store.js\";\nimport { i18n, t } from \"../localization/i18n.js\";\nimport { safeAsync, ERROR_CATEGORIES } from \"../utils/error-handler.js\";\nimport { safeSetInnerHTML } from \"../security/html-sanitizer.js\";\nimport { render } from \"../ui/render.js\";\n\n/**\n * Manages all UI interactions and components\n */\nexport class UIManager {\n  constructor() {\n    this.container = null;\n    this.eventListeners = new Map();\n    this.isInitialized = false;\n  }\n\n  /**\n   * Initialize UI management system\n   * @param {HTMLElement} container - Main app container\n   */\n  initialize(container) {\n    this.container = container;\n    this.setupGlobalEventListeners();\n    this.setupHelpModal();\n    this.setupFooterLinks();\n    this.initializeApiModeToggle();\n    this.initializeResearchMode();\n    this.setCurrentYear();\n    this.isInitialized = true;\n    this.initializeLanguage();\n  }\n\n  /**\n   *\n   * Initialize language settings\n   * */\n  initializeLanguage() {\n    const savedLang = localStorage.getItem(\"language\");\n    const languageToggle = document.getElementById(\"languageToggle\");\n    if (languageToggle) {\n      languageToggle.innerHTML =\n        savedLang === \"en\"\n          ? \"<svg width=\\\"20px\\\" height=\\\"20px\\\" viewBox=\\\"0 0 36 36\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" aria-hidden=\\\"true\\\" role=\\\"img\\\" class=\\\"iconify iconify--twemoji\\\" preserveAspectRatio=\\\"xMidYMid meet\\\"><path fill=\\\"#00247D\\\" d=\\\"M0 9.059V13h5.628zM4.664 31H13v-5.837zM23 25.164V31h8.335zM0 23v3.941L5.63 23zM31.337 5H23v5.837zM36 26.942V23h-5.631zM36 13V9.059L30.371 13zM13 5H4.664L13 10.837z\\\"></path><path fill=\\\"#CF1B2B\\\" d=\\\"M25.14 23l9.712 6.801a3.977 3.977 0 0 0 .99-1.749L28.627 23H25.14zM13 23h-2.141l-9.711 6.8c.521.53 1.189.909 1.938 1.085L13 23.943V23zm10-10h2.141l9.711-6.8a3.988 3.988 0 0 0-1.937-1.085L23 12.057V13zm-12.141 0L1.148 6.2a3.994 3.994 0 0 0-.991 1.749L7.372 13h3.487z\\\"></path><path fill=\\\"#EEE\\\" d=\\\"M36 21H21v10h2v-5.836L31.335 31H32a3.99 3.99 0 0 0 2.852-1.199L25.14 23h3.487l7.215 5.052c.093-.337.158-.686.158-1.052v-.058L30.369 23H36v-2zM0 21v2h5.63L0 26.941V27c0 1.091.439 2.078 1.148 2.8l9.711-6.8H13v.943l-9.914 6.941c.294.07.598.116.914.116h.664L13 25.163V31h2V21H0zM36 9a3.983 3.983 0 0 0-1.148-2.8L25.141 13H23v-.943l9.915-6.942A4.001 4.001 0 0 0 32 5h-.663L23 10.837V5h-2v10h15v-2h-5.629L36 9.059V9zM13 5v5.837L4.664 5H4a3.985 3.985 0 0 0-2.852 1.2l9.711 6.8H7.372L.157 7.949A3.968 3.968 0 0 0 0 9v.059L5.628 13H0v2h15V5h-2z\\\"></path><path fill=\\\"#CF1B2B\\\" d=\\\"M21 15V5h-6v10H0v6h15v10h6V21h15v-6z\\\"></path></svg>\"\n          : `<svg\n            width=\"20px\"\n            height=\"20px\"\n            viewBox=\"0 0 36 36\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            aria-hidden=\"true\"\n            role=\"img\"\n            class=\"iconify iconify--twemoji\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          >\n            <path fill=\"#FFCD05\" d=\"M0 27a4 4 0 0 0 4 4h28a4 4 0 0 0 4-4v-4H0v4z\"></path>\n            <path fill=\"#ED1F24\" d=\"M0 14h36v9H0z\"></path>\n            <path fill=\"#141414\" d=\"M32 5H4a4 4 0 0 0-4 4v5h36V9a4 4 0 0 0-4-4z\"></path>\n          </svg>`;\n    }\n  }\n\n  /**\n   * Setup global event listeners\n   */\n  setupGlobalEventListeners() {\n    this.addEventListenerSafe(\"backButton\", \"click\", () => {\n      store.goBack();\n      render(this.container);\n    });\n\n    this.addEventListenerSafe(\"homeButton\", \"click\", () => {\n      store.goHome();\n      render(this.container);\n    });\n\n    this.addEventListenerSafe(\"languageToggle\", \"click\", () => {\n      this.toggleLanguage();\n    });\n\n    this.addEventListenerSafe(\"darkModeToggle\", \"click\", () => {\n      this.toggleDarkMode();\n    });\n\n    this.addEventListenerSafe(\"apiModeToggle\", \"click\", e => {\n      e.preventDefault();\n      this.toggleApiMode();\n    });\n\n    this.addEventListenerSafe(\"researchModeToggle\", \"click\", e => {\n      e.preventDefault();\n      e.stopPropagation();\n      this.toggleResearchMode();\n    });\n\n    // Keyboard navigation\n    this.addGlobalEventListener(\"keydown\", e => {\n      if (e.key === \"Escape\") {\n        this.closeModal(\"helpModal\");\n        this.closeModal(\"privacyPolicyModal\");\n        this.closeModal(\"disclaimerModal\");\n      }\n    });\n\n    // Before unload warning\n    this.addGlobalEventListener(\"beforeunload\", e => {\n      if (store.hasUnsavedData()) {\n        e.preventDefault();\n        e.returnValue = \"You have unsaved data. Are you sure you want to leave?\";\n      }\n    });\n  }\n\n  /**\n   * Initialize API mode toggle (Mock vs API)\n   */\n  initializeApiModeToggle() {\n    const btn = document.getElementById(\"apiModeToggle\");\n    if (!btn) {\n      return;\n    }\n\n    // Default to mock on localhost preview; API in other cases\n    const isLocal = [\"localhost\", \"127.0.0.1\", \"0.0.0.0\"].includes(window.location.hostname);\n    const stored = localStorage.getItem(\"use_mock_api\");\n    if (stored === null && isLocal && !(import.meta && import.meta.env && import.meta.env.DEV)) {\n      localStorage.setItem(\"use_mock_api\", \"true\");\n    }\n    this.updateApiModeButton();\n  }\n\n  /** Toggle API mode and update UI */\n  toggleApiMode() {\n    const current = localStorage.getItem(\"use_mock_api\");\n    const next = current === \"true\" ? \"false\" : \"true\";\n    localStorage.setItem(\"use_mock_api\", next);\n    this.updateApiModeButton();\n\n    // Announce change for a11y\n    try {\n      const sr = document.createElement(\"div\");\n      sr.className = \"sr-only\";\n      sr.setAttribute(\"role\", \"status\");\n      sr.setAttribute(\"aria-live\", \"polite\");\n      sr.textContent = next === \"true\" ? \"Mock data enabled\" : \"Live API enabled\";\n      document.body.appendChild(sr);\n      setTimeout(() => sr.remove(), 1200);\n    } catch {}\n  }\n\n  /** Update the button label/title for API mode */\n  updateApiModeButton() {\n    const btn = document.getElementById(\"apiModeToggle\");\n    if (!btn) {\n      return;\n    }\n    const useMock = localStorage.getItem(\"use_mock_api\") !== \"false\";\n    if (useMock) {\n      btn.textContent = \"🧪\";\n      btn.title = \"Mock data: ON (click to use API)\";\n      btn.setAttribute(\"aria-label\", \"Mock data enabled\");\n    } else {\n      btn.textContent = \"☁️\";\n      btn.title = \"Live API: ON (click to use mock)\";\n      btn.setAttribute(\"aria-label\", \"Live API enabled\");\n    }\n  }\n\n  /**\n   * Safely add event listener to element\n   * @param {string} elementId - Element ID\n   * @param {string} event - Event type\n   * @param {Function} handler - Event handler\n   */\n  addEventListenerSafe(elementId, event, handler) {\n    const element = document.getElementById(elementId);\n    if (element) {\n      const wrappedHandler = e => {\n        try {\n          handler(e);\n        } catch (error) {\n          this.handleUIError(error, `${elementId}_${event}`);\n        }\n      };\n\n      element.addEventListener(event, wrappedHandler);\n      this.eventListeners.set(`${elementId}_${event}`, { element, handler: wrappedHandler });\n    }\n  }\n\n  /**\n   * Add global event listener\n   * @param {string} event - Event type\n   * @param {Function} handler - Event handler\n   */\n  addGlobalEventListener(event, handler) {\n    const wrappedHandler = e => {\n      try {\n        handler(e);\n      } catch (error) {\n        this.handleUIError(error, `global_${event}`);\n      }\n    };\n\n    if (event === \"keydown\" || event === \"beforeunload\") {\n      const target = event === \"beforeunload\" ? window : document;\n      target.addEventListener(event, wrappedHandler);\n      this.eventListeners.set(`global_${event}`, { element: target, handler: wrappedHandler });\n    }\n  }\n\n  /**\n   * Setup help modal functionality\n   */\n  setupHelpModal() {\n    safeAsync(\n      async () => {\n        const helpButton = document.getElementById(\"helpButton\");\n        const helpModal = document.getElementById(\"helpModal\");\n        const modalClose = helpModal?.querySelector(\".modal-close\");\n\n        if (helpButton && helpModal) {\n          // Ensure modal starts hidden\n          this.closeModal(\"helpModal\");\n\n          this.addEventListenerSafe(\"helpButton\", \"click\", () => {\n            this.openModal(\"helpModal\");\n          });\n\n          if (modalClose) {\n            modalClose.addEventListener(\"click\", () => {\n              this.closeModal(\"helpModal\");\n            });\n          }\n\n          helpModal.addEventListener(\"click\", e => {\n            if (e.target === helpModal) {\n              this.closeModal(\"helpModal\");\n            }\n          });\n        }\n      },\n      error => {\n        // Help modal setup is non-critical\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: \"help_modal_setup\" },\n      }\n    );\n  }\n\n  /**\n   * Setup footer links\n   */\n  setupFooterLinks() {\n    this.addEventListenerSafe(\"privacyLink\", \"click\", e => {\n      e.preventDefault();\n\n      // Open modal\n      this.openModal(\"privacyPolicyModal\");\n\n      // Attach close event only once the modal is opened\n      const privacyPolicyModal = document.getElementById(\"privacyPolicyModal\");\n      const modalClose = privacyPolicyModal?.querySelector(\".modal-close\");\n\n      if (modalClose) {\n        modalClose.addEventListener(\"click\", () => {\n          this.closeModal(\"privacyPolicyModal\");\n        });\n      }\n    });\n\n    this.addEventListenerSafe(\"disclaimerLink\", \"click\", e => {\n      e.preventDefault();\n\n      // Open modal\n      this.openModal(\"disclaimerModal\");\n\n      // Attach close event only once the modal is opened\n      const disclaimerModal = document.getElementById(\"disclaimerModal\");\n      const modalClose = disclaimerModal?.querySelector(\".modal-close\");\n\n      if (modalClose) {\n        modalClose.addEventListener(\"click\", () => {\n          this.closeModal(\"disclaimerModal\");\n        });\n      }\n    });\n  }\n\n  /**\n   * Toggle language\n   */\n  toggleLanguage() {\n    safeAsync(\n      async () => {\n        i18n.toggleLanguage();\n        this.updateLanguage();\n      },\n      error => {\n        // Language toggle failure is non-critical\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: \"language_toggle\" },\n      }\n    );\n  }\n\n  /**\n   * Update UI language\n   */\n  updateLanguage() {\n    // Update HTML lang attribute\n    document.documentElement.lang = i18n.getCurrentLanguage();\n\n    // Update header elements\n    this.updateElementText(\".app-header h1\", t(\"appTitle\"));\n    this.updateElementText(\".emergency-badge\", t(\"emergencyBadge\"));\n\n    // Update button tooltips and aria-labels\n    this.updateButtonAttributes(\"languageToggle\", t(\"languageToggle\"));\n    this.updateButtonAttributes(\"helpButton\", t(\"helpButton\"));\n    this.updateButtonAttributes(\"darkModeToggle\", t(\"darkModeButton\"));\n\n    // Update help modal\n    this.updateElementText(\"#modalTitle\", t(\"helpTitle\"));\n\n    // Update language toggle icon\n    const languageToggle = document.getElementById(\"languageToggle\");\n    if (languageToggle) {\n      const currentLang = i18n.getCurrentLanguage();\n      languageToggle.innerHTML =\n        currentLang === \"en\"\n          ? \"<svg width=\\\"20px\\\" height=\\\"20px\\\" viewBox=\\\"0 0 36 36\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" aria-hidden=\\\"true\\\" role=\\\"img\\\" class=\\\"iconify iconify--twemoji\\\" preserveAspectRatio=\\\"xMidYMid meet\\\"><path fill=\\\"#00247D\\\" d=\\\"M0 9.059V13h5.628zM4.664 31H13v-5.837zM23 25.164V31h8.335zM0 23v3.941L5.63 23zM31.337 5H23v5.837zM36 26.942V23h-5.631zM36 13V9.059L30.371 13zM13 5H4.664L13 10.837z\\\"></path><path fill=\\\"#CF1B2B\\\" d=\\\"M25.14 23l9.712 6.801a3.977 3.977 0 0 0 .99-1.749L28.627 23H25.14zM13 23h-2.141l-9.711 6.8c.521.53 1.189.909 1.938 1.085L13 23.943V23zm10-10h2.141l9.711-6.8a3.988 3.988 0 0 0-1.937-1.085L23 12.057V13zm-12.141 0L1.148 6.2a3.994 3.994 0 0 0-.991 1.749L7.372 13h3.487z\\\"></path><path fill=\\\"#EEE\\\" d=\\\"M36 21H21v10h2v-5.836L31.335 31H32a3.99 3.99 0 0 0 2.852-1.199L25.14 23h3.487l7.215 5.052c.093-.337.158-.686.158-1.052v-.058L30.369 23H36v-2zM0 21v2h5.63L0 26.941V27c0 1.091.439 2.078 1.148 2.8l9.711-6.8H13v.943l-9.914 6.941c.294.07.598.116.914.116h.664L13 25.163V31h2V21H0zM36 9a3.983 3.983 0 0 0-1.148-2.8L25.141 13H23v-.943l9.915-6.942A4.001 4.001 0 0 0 32 5h-.663L23 10.837V5h-2v10h15v-2h-5.629L36 9.059V9zM13 5v5.837L4.664 5H4a3.985 3.985 0 0 0-2.852 1.2l9.711 6.8H7.372L.157 7.949A3.968 3.968 0 0 0 0 9v.059L5.628 13H0v2h15V5h-2z\\\"></path><path fill=\\\"#CF1B2B\\\" d=\\\"M21 15V5h-6v10H0v6h15v10h6V21h15v-6z\\\"></path></svg>\"\n          : `<svg\n            width=\"20px\"\n            height=\"20px\"\n            viewBox=\"0 0 36 36\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            aria-hidden=\"true\"\n            role=\"img\"\n            class=\"iconify iconify--twemoji\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          >\n            <path fill=\"#FFCD05\" d=\"M0 27a4 4 0 0 0 4 4h28a4 4 0 0 0 4-4v-4H0v4z\"></path>\n            <path fill=\"#ED1F24\" d=\"M0 14h36v9H0z\"></path>\n            <path fill=\"#141414\" d=\"M32 5H4a4 4 0 0 0-4 4v5h36V9a4 4 0 0 0-4-4z\"></path>\n          </svg>`;\n      languageToggle.dataset.lang = currentLang;\n    }\n  }\n\n  /**\n   * Update element text safely\n   * @param {string} selector - Element selector\n   * @param {string} text - New text content\n   */\n  updateElementText(selector, text) {\n    const element = document.querySelector(selector);\n    if (element && text) {\n      element.textContent = text;\n    }\n  }\n\n  /**\n   * Update button attributes safely\n   * @param {string} elementId - Button element ID\n   * @param {string} text - Tooltip text\n   */\n  updateButtonAttributes(elementId, text) {\n    const element = document.getElementById(elementId);\n    if (element && text) {\n      element.title = text;\n      element.setAttribute(\"aria-label\", text);\n    }\n  }\n\n  /**\n   * Toggle dark mode apply to html tag\n   */\n  toggleDarkMode() {\n    const html = document.documentElement; // <html> tag\n    html.classList.toggle(\"dark\");\n\n    const isDark = html.classList.contains(\"dark\");\n    const darkModeToggle = document.getElementById(\"darkModeToggle\");\n\n    if (darkModeToggle) {\n      darkModeToggle.textContent = isDark ? \"☀️\" : \"🌙\";\n    }\n\n    localStorage.setItem(\"theme\", isDark ? \"dark\" : \"light\");\n  }\n\n  /**\n   * Research mode management\n   */\n  initializeResearchMode() {\n    const researchModeToggle = document.getElementById(\"researchModeToggle\");\n    if (researchModeToggle) {\n      this.updateResearchMode();\n    }\n  }\n\n  /**\n   * Update research mode visibility\n   */\n  updateResearchMode() {\n    const researchModeToggle = document.getElementById(\"researchModeToggle\");\n    if (researchModeToggle) {\n      const currentModule = this.getCurrentModuleFromResults();\n      const shouldShow = currentModule === \"limited\" || currentModule === \"full\";\n\n      researchModeToggle.style.display = shouldShow ? \"flex\" : \"none\";\n      researchModeToggle.style.opacity = shouldShow ? \"1\" : \"0.5\";\n    }\n  }\n\n  /**\n   * Get current module from results\n   */\n  getCurrentModuleFromResults() {\n    const state = store.getState();\n    if (state.currentScreen !== \"results\" || !state.results?.ich?.module) {\n      return null;\n    }\n\n    const module = state.results.ich.module.toLowerCase();\n    if (module.includes(\"coma\")) {\n      return \"coma\";\n    }\n    if (module.includes(\"limited\")) {\n      return \"limited\";\n    }\n    if (module.includes(\"full\")) {\n      return \"full\";\n    }\n    return null;\n  }\n\n  /**\n   * Toggle research mode\n   */\n  toggleResearchMode() {\n    const researchPanel = document.getElementById(\"researchPanel\");\n    if (!researchPanel) {\n      return;\n    }\n\n    const isVisible = researchPanel.style.display !== \"none\";\n    researchPanel.style.display = isVisible ? \"none\" : \"block\";\n\n    // Update button visual state\n    const researchModeToggle = document.getElementById(\"researchModeToggle\");\n    if (researchModeToggle) {\n      researchModeToggle.style.background = isVisible\n        ? \"rgba(255, 255, 255, 0.1)\"\n        : \"rgba(0, 102, 204, 0.2)\";\n    }\n\n    return false;\n  }\n\n  /**\n   * Show research activation message\n   */\n  showResearchActivationMessage() {\n    safeAsync(\n      async () => {\n        const message = document.createElement(\"div\");\n        message.className = \"research-activation-toast\";\n\n        try {\n          safeSetInnerHTML(\n            message,\n            `\n            <div class=\"toast-content\">\n              🔬 <strong>Research Mode Activated</strong><br>\n              <small>Model comparison features enabled</small>\n            </div>\n          `\n          );\n        } catch (error) {\n          message.textContent = \"🔬 Research Mode Activated - Model comparison features enabled\";\n        }\n\n        document.body.appendChild(message);\n\n        setTimeout(() => {\n          if (document.body.contains(message)) {\n            document.body.removeChild(message);\n          }\n        }, 3000);\n      },\n      error => {\n        // Research message failure is non-critical\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: \"research_activation_message\" },\n      }\n    );\n  }\n\n  /**\n   * Open modal safely\n   * @param {string} modalId - Modal element ID\n   */\n  openModal(modalId) {\n    const modal = document.getElementById(modalId);\n    if (modal) {\n      modal.style.display = \"flex\";\n      modal.classList.add(\"show\");\n      modal.setAttribute(\"aria-hidden\", \"false\");\n    }\n  }\n\n  /**\n   * Close modal safely\n   * @param {string} modalId - Modal element ID\n   */\n  closeModal(modalId) {\n    const modal = document.getElementById(modalId);\n    if (modal) {\n      modal.classList.remove(\"show\");\n      modal.style.display = \"none\";\n      modal.setAttribute(\"aria-hidden\", \"true\");\n    }\n  }\n\n  /**\n   * Show privacy policy\n   */\n  showPrivacyPolicy() {}\n\n  /**\n   * Show disclaimer\n   */\n  showDisclaimer() {\n    alert(\n      \"Medical Disclaimer: This tool is for clinical decision support only. Always use clinical judgment and follow local protocols.\"\n    );\n  }\n\n  /**\n   * Set current year in footer\n   */\n  setCurrentYear() {\n    const yearElement = document.getElementById(\"currentYear\");\n    if (yearElement) {\n      yearElement.textContent = new Date().getFullYear();\n    }\n  }\n\n  /**\n   * Handle UI errors gracefully\n   * @param {Error} error - Error object\n   * @param {string} context - Error context\n   */\n  handleUIError(error, context) {\n    // Log error without crashing the UI\n    try {\n      const errorEvent = new CustomEvent(\"uiError\", {\n        detail: { error, context, timestamp: Date.now() },\n      });\n      document.dispatchEvent(errorEvent);\n    } catch (e) {\n      // Even error reporting failed - continue silently\n    }\n  }\n\n  /**\n   * Preload critical UI components\n   */\n  async preloadCriticalComponents() {\n    return safeAsync(\n      async () => {\n        // Preload critical UI elements and validate they exist\n        const criticalElements = [\"appContainer\", \"helpModal\", \"languageToggle\", \"darkModeToggle\"];\n\n        const missingElements = criticalElements.filter(id => !document.getElementById(id));\n\n        if (missingElements.length > 0) {\n          throw new Error(`Missing critical UI elements: ${missingElements.join(\", \")}`);\n        }\n\n        return true;\n      },\n      error => false,\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: \"preload_critical_components\" },\n      }\n    );\n  }\n\n  /**\n   * Get UI manager status\n   */\n  getStatus() {\n    return {\n      isInitialized: this.isInitialized,\n      hasContainer: !!this.container,\n      eventListenersCount: this.eventListeners.size,\n      currentLanguage: i18n.getCurrentLanguage(),\n      isDarkMode: document.body.classList.contains(\"dark-mode\"),\n    };\n  }\n\n  /**\n   * Cleanup when destroyed\n   */\n  destroy() {\n    // Remove all event listeners\n    this.eventListeners.forEach(({ element, handler }, key) => {\n      const [, event] = key.split(\"_\");\n      if (element && handler) {\n        element.removeEventListener(event, handler);\n      }\n    });\n\n    this.eventListeners.clear();\n    this.container = null;\n    this.isInitialized = false;\n  }\n}\n","/**\n * Theme Management System\n * iGFAP Stroke Triage Assistant - Theme & Styling Coordination\n *\n * Handles theme switching, dark mode, and styling preferences\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\nimport { safeAsync, ERROR_CATEGORIES } from \"../utils/error-handler.js\";\n\n/**\n * Manages application themes and styling\n */\nexport class ThemeManager {\n  constructor() {\n    this.currentTheme = \"light\";\n    this.isInitialized = false;\n    this.storageKey = \"theme\";\n  }\n\n  /**\n   * Initialize theme management\n   */\n  initialize() {\n    this.loadSavedTheme();\n    this.setupThemeDetection();\n    this.isInitialized = true;\n  }\n\n  /**\n   * Load saved theme from storage\n   */\n  async loadSavedTheme() {\n    return safeAsync(\n      async () => {\n        const savedTheme = localStorage.getItem(this.storageKey);\n        const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n\n        // Determine theme to use\n        let themeToApply;\n        if (savedTheme === \"dark\" || savedTheme === \"light\") {\n          themeToApply = savedTheme;\n        } else if (prefersDark) {\n          themeToApply = \"dark\";\n        } else {\n          themeToApply = \"light\";\n        }\n\n        this.applyTheme(themeToApply);\n        this.updateThemeButton();\n\n        return themeToApply;\n      },\n      error => {\n        // Fallback to light theme\n        this.applyTheme(\"light\");\n        this.updateThemeButton();\n        return \"light\";\n      },\n      {\n        category: ERROR_CATEGORIES.STORAGE,\n        context: { operation: \"load_saved_theme\" },\n      }\n    );\n  }\n\n  /**\n   * Setup system theme detection\n   */\n  setupThemeDetection() {\n    // Listen for system theme changes\n    const mediaQuery = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n    const handleSystemThemeChange = e => {\n      // Only auto-switch if user hasn't explicitly set a preference\n      const savedTheme = localStorage.getItem(this.storageKey);\n      if (!savedTheme) {\n        const newTheme = e.matches ? \"dark\" : \"light\";\n        this.applyTheme(newTheme);\n        this.updateThemeButton();\n      }\n    };\n\n    // Use the newer addEventListener if available\n    if (mediaQuery.addEventListener) {\n      mediaQuery.addEventListener(\"change\", handleSystemThemeChange);\n    } else {\n      // Fallback for older browsers\n      mediaQuery.addListener(handleSystemThemeChange);\n    }\n  }\n\n  /**\n   * Apply theme to the application\n   * @param {string} theme - Theme name ('light' or 'dark')\n   */\n  applyTheme(theme) {\n    if (theme !== \"light\" && theme !== \"dark\") {\n      theme = \"light\";\n    }\n\n    this.currentTheme = theme;\n\n    // Apply theme class to body\n    if (theme === \"dark\") {\n      document.body.classList.add(\"dark-mode\");\n    } else {\n      document.body.classList.remove(\"dark-mode\");\n    }\n\n    // Update meta theme-color for mobile browsers\n    this.updateMetaThemeColor(theme);\n\n    // Dispatch theme change event\n    this.dispatchThemeChangeEvent(theme);\n  }\n\n  /**\n   * Toggle between light and dark themes\n   */\n  toggleTheme() {\n    const newTheme = this.currentTheme === \"dark\" ? \"light\" : \"dark\";\n    this.setTheme(newTheme);\n  }\n\n  /**\n   * Set specific theme\n   * @param {string} theme - Theme to set\n   */\n  setTheme(theme) {\n    return safeAsync(\n      async () => {\n        this.applyTheme(theme);\n        this.saveTheme(theme);\n        this.updateThemeButton();\n        return theme;\n      },\n      error =>\n        // Theme setting failed, keep current theme\n        this.currentTheme,\n      {\n        category: ERROR_CATEGORIES.STORAGE,\n        context: { operation: \"set_theme\", theme },\n      }\n    );\n  }\n\n  /**\n   * Save theme preference to storage\n   * @param {string} theme - Theme to save\n   */\n  saveTheme(theme) {\n    try {\n      localStorage.setItem(this.storageKey, theme);\n    } catch (error) {\n      // Storage failed - continue without saving\n    }\n  }\n\n  /**\n   * Update theme toggle button\n   */\n  updateThemeButton() {\n    const darkModeToggle = document.getElementById(\"darkModeToggle\");\n    if (darkModeToggle) {\n      const isDark = this.currentTheme === \"dark\";\n      darkModeToggle.textContent = isDark ? \"☀️\" : \"🌙\";\n\n      // Update aria-label for accessibility\n      const label = isDark ? \"Switch to light mode\" : \"Switch to dark mode\";\n      darkModeToggle.setAttribute(\"aria-label\", label);\n      darkModeToggle.title = label;\n    }\n  }\n\n  /**\n   * Update meta theme-color for mobile browsers\n   * @param {string} theme - Current theme\n   */\n  updateMetaThemeColor(theme) {\n    let metaThemeColor = document.querySelector('meta[name=\"theme-color\"]');\n\n    if (!metaThemeColor) {\n      metaThemeColor = document.createElement(\"meta\");\n      metaThemeColor.name = \"theme-color\";\n      document.head.appendChild(metaThemeColor);\n    }\n\n    // Set appropriate theme color\n    const themeColors = {\n      light: \"#ffffff\",\n      dark: \"#1a1a1a\",\n    };\n\n    metaThemeColor.content = themeColors[theme] || themeColors.light;\n  }\n\n  /**\n   * Dispatch theme change event\n   * @param {string} theme - New theme\n   */\n  dispatchThemeChangeEvent(theme) {\n    try {\n      const event = new CustomEvent(\"themeChanged\", {\n        detail: {\n          theme,\n          timestamp: Date.now(),\n        },\n      });\n      document.dispatchEvent(event);\n    } catch (error) {\n      // Event dispatch failed - continue silently\n    }\n  }\n\n  /**\n   * Get current theme\n   * @returns {string} - Current theme name\n   */\n  getCurrentTheme() {\n    return this.currentTheme;\n  }\n\n  /**\n   * Check if dark mode is active\n   * @returns {boolean} - True if dark mode is active\n   */\n  isDarkMode() {\n    return this.currentTheme === \"dark\";\n  }\n\n  /**\n   * Get system preferred theme\n   * @returns {string} - System preferred theme\n   */\n  getSystemPreferredTheme() {\n    try {\n      const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n      return prefersDark ? \"dark\" : \"light\";\n    } catch (error) {\n      return \"light\";\n    }\n  }\n\n  /**\n   * Reset theme to system preference\n   */\n  resetToSystemTheme() {\n    const systemTheme = this.getSystemPreferredTheme();\n    this.setTheme(systemTheme);\n\n    // Remove explicit preference so it follows system changes\n    try {\n      localStorage.removeItem(this.storageKey);\n    } catch (error) {\n      // Storage operation failed - continue\n    }\n  }\n\n  /**\n   * Get theme status information\n   */\n  getStatus() {\n    return {\n      isInitialized: this.isInitialized,\n      currentTheme: this.currentTheme,\n      isDarkMode: this.isDarkMode(),\n      systemPreferred: this.getSystemPreferredTheme(),\n      hasExplicitPreference: !!localStorage.getItem(this.storageKey),\n    };\n  }\n\n  /**\n   * Cleanup when destroyed\n   */\n  destroy() {\n    this.isInitialized = false;\n  }\n}\n","/**\n * Session Management System\n * iGFAP Stroke Triage Assistant - Session & Data Persistence\n *\n * Handles session management, auto-save, and data persistence\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\nimport { store } from \"../state/store.js\";\nimport { APP_CONFIG } from \"../config.js\";\nimport { authManager } from \"../auth/authentication.js\";\nimport { safeAsync, ERROR_CATEGORIES, ERROR_SEVERITY } from \"../utils/error-handler.js\";\nimport { secureStore, secureRetrieve, secureRemove } from \"../security/data-encryption.js\";\nimport { medicalLogger, LOG_CATEGORIES } from \"../utils/medical-logger.js\";\n\n/**\n * Manages session lifecycle and data persistence\n */\nexport class SessionManager {\n  constructor() {\n    this.autoSaveInterval = null;\n    this.sessionCheckInterval = null;\n    this.isInitialized = false;\n    this.lastAutoSave = 0;\n  }\n\n  /**\n   * Initialize session management\n   */\n  initialize() {\n    this.validateStoredSession();\n    this.startAutoSave();\n    this.setupSessionTimeout();\n    this.setupSessionValidation();\n    this.isInitialized = true;\n  }\n\n  /**\n   * Validate stored session data\n   */\n  async validateStoredSession() {\n    return safeAsync(\n      async () => {\n        if (!authManager.isValidSession()) {\n          // Session invalid - clear any stored data\n          this.clearSessionData();\n          return false;\n        }\n\n        // Session valid - restore any saved form data\n        this.restoreFormData();\n        return true;\n      },\n      (error) => {\n        // Session validation failed - clear data for safety\n        this.clearSessionData();\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.AUTHENTICATION,\n        severity: ERROR_SEVERITY.MEDIUM,\n        context: { operation: \"validate_stored_session\" },\n      },\n    );\n  }\n\n  /**\n   * Start auto-save functionality\n   */\n  startAutoSave() {\n    if (this.autoSaveInterval) {\n      clearInterval(this.autoSaveInterval);\n    }\n\n    this.autoSaveInterval = setInterval(() => {\n      this.performAutoSave();\n    }, APP_CONFIG.autoSaveInterval);\n  }\n\n  /**\n   * Perform auto-save of current form data\n   */\n  async performAutoSave() {\n    return safeAsync(\n      async () => {\n        const container = document.getElementById(\"appContainer\");\n        if (!container) {\n          return false;\n        }\n\n        const forms = container.querySelectorAll(\"form[data-module]\");\n        let savedCount = 0;\n\n        for (const form of forms) {\n          try {\n            const { module } = form.dataset;\n            if (module) {\n              const formData = this.extractFormData(form);\n              const hasChanges = this.hasFormDataChanged(module, formData);\n\n              if (hasChanges) {\n                store.setFormData(module, formData);\n                savedCount++;\n              }\n            }\n          } catch (error) {\n            // Continue with other forms if one fails\n          }\n        }\n\n        this.lastAutoSave = Date.now();\n        return savedCount > 0;\n      },\n      (error) =>\n        // Auto-save failure is non-critical\n        false,\n      {\n        category: ERROR_CATEGORIES.STORAGE,\n        severity: ERROR_SEVERITY.LOW,\n        context: { operation: \"auto_save\" },\n      },\n    );\n  }\n\n  /**\n   * Extract form data safely\n   * @param {HTMLFormElement} form - Form element\n   * @returns {Object} - Form data object\n   */\n  extractFormData(form) {\n    const formData = new FormData(form);\n    const data = {};\n\n    formData.forEach((value, key) => {\n      const element = form.elements[key];\n      if (element) {\n        if (element.type === \"checkbox\") {\n          data[key] = element.checked;\n        } else if (element.type === \"number\") {\n          const numValue = parseFloat(value);\n          data[key] = isNaN(numValue) ? value : numValue;\n        } else {\n          data[key] = value;\n        }\n      }\n    });\n\n    return data;\n  }\n\n  /**\n   * Check if form data has changed\n   * @param {string} module - Module name\n   * @param {Object} newData - New form data\n   * @returns {boolean} - True if data has changed\n   */\n  hasFormDataChanged(module, newData) {\n    try {\n      const currentData = store.getFormData(module);\n      return JSON.stringify(currentData) !== JSON.stringify(newData);\n    } catch (error) {\n      // If comparison fails, assume data has changed\n      return true;\n    }\n  }\n\n  /**\n   * Restore saved form data\n   */\n  restoreFormData() {\n    safeAsync(\n      async () => {\n        const container = document.getElementById(\"appContainer\");\n        if (!container) {\n          return;\n        }\n\n        const forms = container.querySelectorAll(\"form[data-module]\");\n\n        forms.forEach((form) => {\n          try {\n            const { module } = form.dataset;\n            if (module) {\n              const savedData = store.getFormData(module);\n              if (savedData && Object.keys(savedData).length > 0) {\n                this.populateForm(form, savedData);\n              }\n            }\n          } catch (error) {\n            // Continue with other forms if one fails\n          }\n        });\n      },\n      (error) => {\n        // Form restoration failure is non-critical\n      },\n      {\n        category: ERROR_CATEGORIES.STORAGE,\n        context: { operation: \"restore_form_data\" },\n      },\n    );\n  }\n\n  /**\n   * Populate form with saved data\n   * @param {HTMLFormElement} form - Form to populate\n   * @param {Object} data - Data to populate with\n   */\n  populateForm(form, data) {\n    Object.entries(data).forEach(([key, value]) => {\n      const element = form.elements[key];\n      if (element) {\n        try {\n          if (element.type === \"checkbox\") {\n            element.checked = Boolean(value);\n          } else if (element.type === \"radio\") {\n            if (element.value === value) {\n              element.checked = true;\n            }\n          } else {\n            element.value = value;\n          }\n\n          // Trigger input event for any listeners\n          element.dispatchEvent(new Event(\"input\", { bubbles: true }));\n        } catch (error) {\n          // Skip this field if population fails\n        }\n      }\n    });\n  }\n\n  /**\n   * Setup session timeout monitoring\n   */\n  setupSessionTimeout() {\n    // Setup session timeout warning\n    setTimeout(() => {\n      this.showSessionTimeoutWarning();\n    }, APP_CONFIG.sessionTimeout - 60000); // Warn 1 minute before timeout\n  }\n\n  /**\n   * Setup periodic session validation\n   */\n  setupSessionValidation() {\n    // Check session validity every 5 minutes\n    this.sessionCheckInterval = setInterval(() => {\n      this.validateCurrentSession();\n    }, 5 * 60 * 1000);\n  }\n\n  /**\n   * Validate current session\n   */\n  async validateCurrentSession() {\n    return safeAsync(\n      async () => {\n        if (!authManager.isValidSession()) {\n          this.handleSessionExpiry();\n          return false;\n        }\n\n        // Optionally validate with server\n        const isValid = await authManager.validateSessionWithServer();\n        if (!isValid) {\n          this.handleSessionExpiry();\n          return false;\n        }\n\n        return true;\n      },\n      (error) =>\n        // Session validation failed - continue with local session\n        authManager.isValidSession(),\n      {\n        category: ERROR_CATEGORIES.AUTHENTICATION,\n        context: { operation: \"validate_current_session\" },\n      },\n    );\n  }\n\n  /**\n   * Show session timeout warning\n   */\n  showSessionTimeoutWarning() {\n    safeAsync(\n      async () => {\n        const shouldContinue = confirm(\n          \"Your session will expire in 1 minute. Would you like to continue?\",\n        );\n\n        if (shouldContinue) {\n          // Extend session\n          authManager.updateActivity();\n          // Setup another timeout warning\n          this.setupSessionTimeout();\n        } else {\n          // User chose to end session\n          this.endSession();\n        }\n      },\n      (error) => {\n        // If warning fails, continue session\n      },\n      {\n        category: ERROR_CATEGORIES.AUTHENTICATION,\n        context: { operation: \"session_timeout_warning\" },\n      },\n    );\n  }\n\n  /**\n   * Handle session expiry\n   */\n  handleSessionExpiry() {\n    this.clearSessionData();\n    store.navigate(\"login\");\n\n    // Show expiry message\n    this.showSessionExpiredMessage();\n  }\n\n  /**\n   * Show session expired message\n   */\n  showSessionExpiredMessage() {\n    // Create a temporary message\n    const message = document.createElement(\"div\");\n    message.style.cssText = `\n      position: fixed;\n      top: 20px;\n      left: 50%;\n      transform: translateX(-50%);\n      background: #ff9800;\n      color: white;\n      padding: 15px 20px;\n      border-radius: 8px;\n      z-index: 10000;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.3);\n    `;\n    message.textContent = \"⏰ Session expired. Please log in again.\";\n\n    document.body.appendChild(message);\n\n    setTimeout(() => {\n      if (document.body.contains(message)) {\n        document.body.removeChild(message);\n      }\n    }, 5000);\n  }\n\n  /**\n   * End session manually\n   */\n  endSession() {\n    authManager.logout();\n    this.clearSessionData();\n    store.reset();\n    store.navigate(\"login\");\n  }\n\n  /**\n   * Clear all session data\n   */\n  async clearSessionData() {\n    try {\n      medicalLogger.info(\"Clearing session data\", {\n        category: LOG_CATEGORIES.SECURITY,\n      });\n\n      // Clear form data from store\n      store.clearAllFormData();\n\n      // Clear encrypted temporary data\n      await secureRemove(\"temp_data\", true); // Use sessionStorage\n      await secureRemove(\"research_data\", true);\n\n      // Clear any legacy unencrypted data\n      sessionStorage.removeItem(\"temp_data\");\n      sessionStorage.removeItem(\"research_data\");\n\n      medicalLogger.info(\"Session data cleared successfully\", {\n        category: LOG_CATEGORIES.SECURITY,\n      });\n    } catch (error) {\n      medicalLogger.warn(\"Failed to clear some session data\", {\n        category: LOG_CATEGORIES.SECURITY,\n        error: error.message,\n      });\n    }\n  }\n\n  /**\n   * Force save current state\n   */\n  async forceSave() {\n    return this.performAutoSave();\n  }\n\n  /**\n   * Get session status\n   */\n  getStatus() {\n    return {\n      isInitialized: this.isInitialized,\n      isAuthenticated: authManager.isValidSession(),\n      lastAutoSave: this.lastAutoSave,\n      autoSaveActive: !!this.autoSaveInterval,\n      sessionCheckActive: !!this.sessionCheckInterval,\n      sessionInfo: authManager.getSessionInfo?.() || {},\n    };\n  }\n\n  /**\n   * Cleanup when destroyed\n   */\n  destroy() {\n    if (this.autoSaveInterval) {\n      clearInterval(this.autoSaveInterval);\n      this.autoSaveInterval = null;\n    }\n\n    if (this.sessionCheckInterval) {\n      clearInterval(this.sessionCheckInterval);\n      this.sessionCheckInterval = null;\n    }\n\n    this.isInitialized = false;\n  }\n}\n","/**\r\n * Medical Data Caching System\r\n * iGFAP Stroke Triage Assistant - Enterprise Caching Architecture\r\n *\r\n * Provides HIPAA-compliant caching with TTL and secure data handling\r\n */\r\n\r\nimport { medicalEventObserver, MEDICAL_EVENTS } from '../patterns/observer.js';\r\n\r\nimport { medicalPerformanceMonitor, PerformanceMetricType } from './medical-performance-monitor.js';\r\n\r\n/**\r\n * Cache storage types for different data sensitivity levels\r\n */\r\nexport const CacheStorageType = {\r\n  MEMORY: 'memory',\r\n  SESSION: 'session',\r\n  LOCAL: 'local',\r\n  INDEXED_DB: 'indexed_db',\r\n};\r\n\r\n/**\r\n * Cache entry priorities for medical data\r\n */\r\nexport const CachePriority = {\r\n  CRITICAL: 'critical', // Emergency data, never evict\r\n  HIGH: 'high', // Important medical data\r\n  NORMAL: 'normal', // Standard application data\r\n  LOW: 'low', // Non-critical data, evict first\r\n};\r\n\r\n/**\r\n * Default TTL values for different types of medical data (in milliseconds)\r\n */\r\nexport const MedicalCacheTTL = {\r\n  PATIENT_DATA: 30 * 60 * 1000, // 30 minutes\r\n  PREDICTION_RESULTS: 60 * 60 * 1000, // 1 hour\r\n  VALIDATION_RULES: 24 * 60 * 60 * 1000, // 24 hours\r\n  API_RESPONSES: 15 * 60 * 1000, // 15 minutes\r\n  UI_STATE: 10 * 60 * 1000, // 10 minutes\r\n  STATIC_CONFIG: 7 * 24 * 60 * 60 * 1000, // 7 days\r\n};\r\n\r\n/**\r\n * Cache entry with metadata and security features\r\n */\r\nclass CacheEntry {\r\n  constructor(key, value, ttl, priority = CachePriority.NORMAL, metadata = {}) {\r\n    this.key = key;\r\n    this.value = this.sanitizeValue(value);\r\n    this.ttl = ttl;\r\n    this.priority = priority;\r\n    this.metadata = {\r\n      ...metadata,\r\n      createdAt: Date.now(),\r\n      accessCount: 0,\r\n      lastAccessed: Date.now(),\r\n    };\r\n    this.expiresAt = ttl > 0 ? Date.now() + ttl : null;\r\n    this.encrypted = false;\r\n  }\r\n\r\n  /**\r\n   * Sanitize sensitive data before caching\r\n   */\r\n  sanitizeValue(value) {\r\n    if (typeof value !== 'object' || value === null) {\r\n      return value;\r\n    }\r\n\r\n    // Deep clone to avoid reference issues\r\n    const sanitized = JSON.parse(JSON.stringify(value));\r\n\r\n    // Remove or mask sensitive fields\r\n    const sensitiveFields = ['ssn', 'mrn', 'patient_id', 'user_id', 'session_token'];\r\n    this.removeSensitiveFields(sanitized, sensitiveFields);\r\n\r\n    return sanitized;\r\n  }\r\n\r\n  /**\r\n   * Recursively remove sensitive fields\r\n   */\r\n  removeSensitiveFields(obj, sensitiveFields) {\r\n    Object.keys(obj).forEach((key) => {\r\n      if (sensitiveFields.some((field) => key.toLowerCase().includes(field))) {\r\n        obj[key] = '[REDACTED]';\r\n      } else if (typeof obj[key] === 'object' && obj[key] !== null) {\r\n        this.removeSensitiveFields(obj[key], sensitiveFields);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Check if cache entry has expired\r\n   */\r\n  isExpired() {\r\n    return this.expiresAt !== null && Date.now() > this.expiresAt;\r\n  }\r\n\r\n  /**\r\n   * Mark entry as accessed\r\n   */\r\n  markAccessed() {\r\n    this.metadata.accessCount += 1;\r\n    this.metadata.lastAccessed = Date.now();\r\n  }\r\n\r\n  /**\r\n   * Get entry age in milliseconds\r\n   */\r\n  getAge() {\r\n    return Date.now() - this.metadata.createdAt;\r\n  }\r\n\r\n  /**\r\n   * Get time until expiration\r\n   */\r\n  getTimeToExpiration() {\r\n    if (this.expiresAt === null) {\r\n      return Infinity;\r\n    }\r\n    return Math.max(0, this.expiresAt - Date.now());\r\n  }\r\n\r\n  /**\r\n   * Calculate entry score for eviction (lower score = evict first)\r\n   */\r\n  getEvictionScore() {\r\n    const priorityWeights = {\r\n      [CachePriority.CRITICAL]: 1000,\r\n      [CachePriority.HIGH]: 100,\r\n      [CachePriority.NORMAL]: 10,\r\n      [CachePriority.LOW]: 1,\r\n    };\r\n\r\n    const priorityWeight = priorityWeights[this.priority] || 1;\r\n    const accessWeight = Math.log(this.metadata.accessCount + 1);\r\n    const ageWeight = 1 / (this.getAge() + 1);\r\n\r\n    return priorityWeight * accessWeight * ageWeight;\r\n  }\r\n}\r\n\r\n/**\r\n * Medical Cache Manager with HIPAA compliance\r\n */\r\nexport class MedicalCache {\r\n  constructor(storageType = CacheStorageType.MEMORY, options = {}) {\r\n    this.storageType = storageType;\r\n    this.options = {\r\n      maxSize: 100 * 1024 * 1024, // 100MB max cache size\r\n      maxEntries: 1000, // Maximum number of entries\r\n      cleanupInterval: 5 * 60 * 1000, // Cleanup every 5 minutes\r\n      enableEncryption: false, // Enable for sensitive data\r\n      enableMetrics: true,\r\n      ...options,\r\n    };\r\n\r\n    this.cache = new Map();\r\n    this.cleanupTimer = null;\r\n    this.totalSize = 0;\r\n    this.hitCount = 0;\r\n    this.missCount = 0;\r\n    this.evictionCount = 0;\r\n\r\n    this.initializeStorage();\r\n    this.startCleanupTimer();\r\n  }\r\n\r\n  /**\r\n   * Initialize storage backend\r\n   */\r\n  initializeStorage() {\r\n    switch (this.storageType) {\r\n      case CacheStorageType.SESSION:\r\n        this.storage = sessionStorage;\r\n        this.loadFromStorage();\r\n        break;\r\n      case CacheStorageType.LOCAL:\r\n        this.storage = localStorage;\r\n        this.loadFromStorage();\r\n        break;\r\n      case CacheStorageType.INDEXED_DB:\r\n        this.initializeIndexedDB();\r\n        break;\r\n      default:\r\n        this.storage = null; // Memory only\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load cache from storage\r\n   */\r\n  loadFromStorage() {\r\n    if (!this.storage) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const cacheData = this.storage.getItem('medical_cache');\r\n      if (cacheData) {\r\n        const parsed = JSON.parse(cacheData);\r\n        Object.entries(parsed).forEach(([key, entryData]) => {\r\n          const entry = new CacheEntry(\r\n            entryData.key,\r\n            entryData.value,\r\n            entryData.ttl,\r\n            entryData.priority,\r\n            entryData.metadata,\r\n          );\r\n          entry.expiresAt = entryData.expiresAt;\r\n\r\n          if (!entry.isExpired()) {\r\n            this.cache.set(key, entry);\r\n            this.totalSize += this.calculateSize(entry.value);\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      // ('Failed to load cache from storage:', error.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Save cache to storage\r\n   */\r\n  saveToStorage() {\r\n    if (!this.storage) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const cacheData = {};\r\n      this.cache.forEach((entry, key) => {\r\n        cacheData[key] = {\r\n          key: entry.key,\r\n          value: entry.value,\r\n          ttl: entry.ttl,\r\n          priority: entry.priority,\r\n          metadata: entry.metadata,\r\n          expiresAt: entry.expiresAt,\r\n        };\r\n      });\r\n\r\n      this.storage.setItem('medical_cache', JSON.stringify(cacheData));\r\n    } catch (error) {\r\n      // ('Failed to save cache to storage:', error.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize IndexedDB for large data caching\r\n   */\r\n  async initializeIndexedDB() {\r\n    // IndexedDB implementation for future enhancement\r\n    // ('IndexedDB cache initialization planned for future implementation');\r\n  }\r\n\r\n  /**\r\n   * Set cache entry\r\n   */\r\n  set(key, value, ttl = MedicalCacheTTL.API_RESPONSES, priority = CachePriority.NORMAL, metadata = {}) {\r\n    const metricId = medicalPerformanceMonitor.startMeasurement(\r\n      PerformanceMetricType.CACHE,\r\n      'cache_set',\r\n      { key, priority },\r\n    );\r\n\r\n    try {\r\n      // Check if we need to make space\r\n      this.ensureCapacity();\r\n\r\n      const entry = new CacheEntry(key, value, ttl, priority, metadata);\r\n      const size = this.calculateSize(value);\r\n\r\n      // Remove existing entry if present\r\n      if (this.cache.has(key)) {\r\n        const oldEntry = this.cache.get(key);\r\n        this.totalSize -= this.calculateSize(oldEntry.value);\r\n      }\r\n\r\n      this.cache.set(key, entry);\r\n      this.totalSize += size;\r\n\r\n      // Save to persistent storage\r\n      if (this.storageType !== CacheStorageType.MEMORY) {\r\n        this.saveToStorage();\r\n      }\r\n\r\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\r\n        action: 'cache_set',\r\n        key,\r\n        size,\r\n        ttl,\r\n        priority,\r\n      });\r\n\r\n      medicalPerformanceMonitor.endMeasurement(metricId, { success: true });\r\n      return true;\r\n    } catch (error) {\r\n      medicalPerformanceMonitor.endMeasurement(metricId, { success: false, error: error.message });\r\n      // ('Cache set error:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get cache entry\r\n   */\r\n  get(key) {\r\n    const metricId = medicalPerformanceMonitor.startMeasurement(\r\n      PerformanceMetricType.CACHE,\r\n      'cache_get',\r\n      { key },\r\n    );\r\n\r\n    try {\r\n      const entry = this.cache.get(key);\r\n\r\n      if (!entry) {\r\n        this.missCount += 1;\r\n        medicalPerformanceMonitor.endMeasurement(metricId, { hit: false });\r\n        return null;\r\n      }\r\n\r\n      if (entry.isExpired()) {\r\n        this.cache.delete(key);\r\n        this.totalSize -= this.calculateSize(entry.value);\r\n        this.missCount += 1;\r\n        medicalPerformanceMonitor.endMeasurement(metricId, { hit: false, expired: true });\r\n        return null;\r\n      }\r\n\r\n      entry.markAccessed();\r\n      this.hitCount += 1;\r\n\r\n      medicalPerformanceMonitor.endMeasurement(metricId, { hit: true });\r\n      return entry.value;\r\n    } catch (error) {\r\n      medicalPerformanceMonitor.endMeasurement(metricId, { hit: false, error: error.message });\r\n      // ('Cache get error:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if key exists and is not expired\r\n   */\r\n  has(key) {\r\n    const entry = this.cache.get(key);\r\n    return entry && !entry.isExpired();\r\n  }\r\n\r\n  /**\r\n   * Delete cache entry\r\n   */\r\n  delete(key) {\r\n    const entry = this.cache.get(key);\r\n    if (entry) {\r\n      this.totalSize -= this.calculateSize(entry.value);\r\n      this.cache.delete(key);\r\n\r\n      if (this.storageType !== CacheStorageType.MEMORY) {\r\n        this.saveToStorage();\r\n      }\r\n\r\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\r\n        action: 'cache_delete',\r\n        key,\r\n      });\r\n\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Clear all cache entries\r\n   */\r\n  clear() {\r\n    const entriesCleared = this.cache.size;\r\n    this.cache.clear();\r\n    this.totalSize = 0;\r\n\r\n    if (this.storage) {\r\n      this.storage.removeItem('medical_cache');\r\n    }\r\n\r\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\r\n      action: 'cache_cleared',\r\n      entriesCleared,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Ensure cache capacity by evicting entries\r\n   */\r\n  ensureCapacity() {\r\n    // Check size limit\r\n    while (this.totalSize > this.options.maxSize) {\r\n      this.evictLeastImportant();\r\n    }\r\n\r\n    // Check entry count limit\r\n    while (this.cache.size >= this.options.maxEntries) {\r\n      this.evictLeastImportant();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Evict least important entry based on priority and access patterns\r\n   */\r\n  evictLeastImportant() {\r\n    let lowestScore = Infinity;\r\n    let keyToEvict = null;\r\n\r\n    this.cache.forEach((entry, key) => {\r\n      // Never evict critical priority items unless expired\r\n      if (entry.priority === CachePriority.CRITICAL && !entry.isExpired()) {\r\n        return;\r\n      }\r\n\r\n      const score = entry.getEvictionScore();\r\n      if (score < lowestScore) {\r\n        lowestScore = score;\r\n        keyToEvict = key;\r\n      }\r\n    });\r\n\r\n    if (keyToEvict) {\r\n      this.delete(keyToEvict);\r\n      this.evictionCount += 1;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clean up expired entries\r\n   */\r\n  cleanup() {\r\n    const startTime = performance.now();\r\n    let cleanedCount = 0;\r\n\r\n    this.cache.forEach((entry, key) => {\r\n      if (entry.isExpired()) {\r\n        this.delete(key);\r\n        cleanedCount += 1;\r\n      }\r\n    });\r\n\r\n    const duration = performance.now() - startTime;\r\n\r\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\r\n      action: 'cache_cleanup',\r\n      cleanedCount,\r\n      duration,\r\n      remainingEntries: this.cache.size,\r\n    });\r\n\r\n    return cleanedCount;\r\n  }\r\n\r\n  /**\r\n   * Start automatic cleanup timer\r\n   */\r\n  startCleanupTimer() {\r\n    if (this.cleanupTimer) {\r\n      clearInterval(this.cleanupTimer);\r\n    }\r\n\r\n    this.cleanupTimer = setInterval(() => {\r\n      this.cleanup();\r\n    }, this.options.cleanupInterval);\r\n  }\r\n\r\n  /**\r\n   * Stop cleanup timer\r\n   */\r\n  stopCleanupTimer() {\r\n    if (this.cleanupTimer) {\r\n      clearInterval(this.cleanupTimer);\r\n      this.cleanupTimer = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate size of cached value (approximate)\r\n   */\r\n  calculateSize(value) {\r\n    try {\r\n      return JSON.stringify(value).length * 2; // Rough estimate (UTF-16)\r\n    } catch {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get cache statistics\r\n   */\r\n  getStats() {\r\n    const hitRate = this.hitCount + this.missCount > 0\r\n      ? (this.hitCount / (this.hitCount + this.missCount)) * 100\r\n      : 0;\r\n\r\n    return {\r\n      entries: this.cache.size,\r\n      totalSize: this.totalSize,\r\n      maxSize: this.options.maxSize,\r\n      hitCount: this.hitCount,\r\n      missCount: this.missCount,\r\n      hitRate: `${hitRate.toFixed(2)}%`,\r\n      evictionCount: this.evictionCount,\r\n      storageType: this.storageType,\r\n      utilizationPercent: `${((this.totalSize / this.options.maxSize) * 100).toFixed(2)}%`,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get cache entry information\r\n   */\r\n  getEntryInfo(key) {\r\n    const entry = this.cache.get(key);\r\n    if (!entry) {\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      key: entry.key,\r\n      size: this.calculateSize(entry.value),\r\n      priority: entry.priority,\r\n      ttl: entry.ttl,\r\n      age: entry.getAge(),\r\n      timeToExpiration: entry.getTimeToExpiration(),\r\n      accessCount: entry.metadata.accessCount,\r\n      lastAccessed: new Date(entry.metadata.lastAccessed).toISOString(),\r\n      isExpired: entry.isExpired(),\r\n      evictionScore: entry.getEvictionScore(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Dispose of cache and cleanup resources\r\n   */\r\n  dispose() {\r\n    this.stopCleanupTimer();\r\n    this.clear();\r\n  }\r\n}\r\n\r\n/**\r\n * Medical cache factory for different data types\r\n */\r\nexport class MedicalCacheFactory {\r\n  static patientDataCache = null;\r\n\r\n  static predictionCache = null;\r\n\r\n  static validationCache = null;\r\n\r\n  static apiCache = null;\r\n\r\n  /**\r\n   * Get or create patient data cache (session storage, short TTL)\r\n   */\r\n  static getPatientDataCache() {\r\n    if (!this.patientDataCache) {\r\n      this.patientDataCache = new MedicalCache(CacheStorageType.SESSION, {\r\n        maxSize: 10 * 1024 * 1024, // 10MB\r\n        maxEntries: 100,\r\n        enableEncryption: true,\r\n      });\r\n    }\r\n    return this.patientDataCache;\r\n  }\r\n\r\n  /**\r\n   * Get or create prediction results cache (memory only, medium TTL)\r\n   */\r\n  static getPredictionCache() {\r\n    if (!this.predictionCache) {\r\n      this.predictionCache = new MedicalCache(CacheStorageType.MEMORY, {\r\n        maxSize: 50 * 1024 * 1024, // 50MB\r\n        maxEntries: 500,\r\n      });\r\n    }\r\n    return this.predictionCache;\r\n  }\r\n\r\n  /**\r\n   * Get or create validation rules cache (local storage, long TTL)\r\n   */\r\n  static getValidationCache() {\r\n    if (!this.validationCache) {\r\n      this.validationCache = new MedicalCache(CacheStorageType.LOCAL, {\r\n        maxSize: 5 * 1024 * 1024, // 5MB\r\n        maxEntries: 200,\r\n      });\r\n    }\r\n    return this.validationCache;\r\n  }\r\n\r\n  /**\r\n   * Get or create API response cache (session storage, short TTL)\r\n   */\r\n  static getApiCache() {\r\n    if (!this.apiCache) {\r\n      this.apiCache = new MedicalCache(CacheStorageType.SESSION, {\r\n        maxSize: 20 * 1024 * 1024, // 20MB\r\n        maxEntries: 300,\r\n      });\r\n    }\r\n    return this.apiCache;\r\n  }\r\n\r\n  /**\r\n   * Clear all caches (privacy compliance)\r\n   */\r\n  static clearAllCaches() {\r\n    [\r\n      this.patientDataCache,\r\n      this.predictionCache,\r\n      this.validationCache,\r\n      this.apiCache,\r\n    ].forEach((cache) => {\r\n      if (cache) {\r\n        cache.clear();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Dispose all caches\r\n   */\r\n  static disposeAllCaches() {\r\n    [\r\n      this.patientDataCache,\r\n      this.predictionCache,\r\n      this.validationCache,\r\n      this.apiCache,\r\n    ].forEach((cache) => {\r\n      if (cache) {\r\n        cache.dispose();\r\n      }\r\n    });\r\n\r\n    this.patientDataCache = null;\r\n    this.predictionCache = null;\r\n    this.validationCache = null;\r\n    this.apiCache = null;\r\n  }\r\n}\r\n\r\n// Export convenience instances\r\nexport const patientDataCache = MedicalCacheFactory.getPatientDataCache();\r\nexport const predictionCache = MedicalCacheFactory.getPredictionCache();\r\nexport const validationCache = MedicalCacheFactory.getValidationCache();\r\nexport const apiCache = MedicalCacheFactory.getApiCache();\r\n","/**\n * Progressive Loading and Lazy Component System\n * iGFAP Stroke Triage Assistant - Phase 3 Advanced Features\n *\n * Provides intelligent component loading for optimal performance\n */\n\nimport { medicalEventObserver, MEDICAL_EVENTS } from \"../patterns/observer.js\";\nimport { medicalPerformanceMonitor, PerformanceMetricType } from \"../performance/medical-performance-monitor.js\";\n\n/**\n * Component loading priorities\n */\nexport const LoadPriority = {\n  CRITICAL: \"critical\", // Load immediately\n  HIGH: \"high\", // Load on interaction\n  NORMAL: \"normal\", // Load on viewport\n  LOW: \"low\", // Load on idle\n};\n\n/**\n * Component loading states\n */\nexport const LoadState = {\n  PENDING: \"pending\",\n  LOADING: \"loading\",\n  LOADED: \"loaded\",\n  ERROR: \"error\",\n};\n\n/**\n * Lazy component definition\n */\nclass LazyComponent {\n  constructor(name, loader, options = {}) {\n    this.name = name;\n    this.loader = loader;\n    this.priority = options.priority || LoadPriority.NORMAL;\n    this.state = LoadState.PENDING;\n    this.component = null;\n    this.error = null;\n    this.loadTime = null;\n    this.dependencies = options.dependencies || [];\n    this.retryCount = 0;\n    this.maxRetries = options.maxRetries || 3;\n    this.loadPromise = null;\n  }\n\n  /**\n   * Load the component\n   */\n  async load() {\n    if (this.state === LoadState.LOADED) {\n      return this.component;\n    }\n\n    if (this.loadPromise) {\n      return this.loadPromise;\n    }\n\n    const metricId = medicalPerformanceMonitor.startMeasurement(\n      PerformanceMetricType.USER_INTERACTION,\n      `lazy_load_${this.name}`,\n      { priority: this.priority },\n    );\n\n    this.state = LoadState.LOADING;\n    this.loadPromise = this.executeLoad(metricId);\n\n    return this.loadPromise;\n  }\n\n  /**\n   * Execute component loading with error handling\n   */\n  async executeLoad(metricId) {\n    try {\n      const startTime = performance.now();\n\n      // Load dependencies first\n      await this.loadDependencies();\n\n      // Load the component\n      this.component = await this.loader();\n      this.loadTime = performance.now() - startTime;\n      this.state = LoadState.LOADED;\n\n      medicalPerformanceMonitor.endMeasurement(metricId, {\n        success: true,\n        loadTime: this.loadTime,\n        retryCount: this.retryCount,\n      });\n\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n        action: \"lazy_component_loaded\",\n        component: this.name,\n        loadTime: this.loadTime,\n        priority: this.priority,\n      });\n\n      return this.component;\n    } catch (error) {\n      this.error = error;\n      this.retryCount++;\n\n      medicalPerformanceMonitor.endMeasurement(metricId, {\n        success: false,\n        error: error.message,\n        retryCount: this.retryCount,\n      });\n\n      if (this.retryCount < this.maxRetries) {\n        // (`⚠️ Component ${this.name} load failed, retrying (${this.retryCount}/${this.maxRetries}):`, error);\n\n        // Exponential backoff\n        const delay = Math.min(1000 * 2 ** (this.retryCount - 1), 5000);\n        await new Promise((resolve) => setTimeout(resolve, delay));\n\n        this.loadPromise = null;\n        return this.load();\n      }\n      this.state = LoadState.ERROR;\n      // (`❌ Component ${this.name} failed to load after ${this.maxRetries} attempts:`, error);\n\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n        action: \"lazy_component_load_failed\",\n        component: this.name,\n        error: error.message,\n        retryCount: this.retryCount,\n      });\n\n      throw error;\n    }\n  }\n\n  /**\n   * Load component dependencies\n   */\n  async loadDependencies() {\n    if (this.dependencies.length === 0) {\n      return;\n    }\n\n    const dependencyPromises = this.dependencies.map((dep) => {\n      if (typeof dep === \"string\") {\n        // Load dependency by name\n        return LazyLoader.load(dep);\n      } if (typeof dep === \"function\") {\n        // Load dependency function\n        return dep();\n      }\n      // Assume it's a lazy component\n      return dep.load();\n    });\n\n    await Promise.all(dependencyPromises);\n  }\n\n  /**\n   * Get component status\n   */\n  getStatus() {\n    return {\n      name: this.name,\n      state: this.state,\n      priority: this.priority,\n      loadTime: this.loadTime,\n      error: this.error?.message,\n      retryCount: this.retryCount,\n    };\n  }\n}\n\n/**\n * Progressive component loader with intelligent scheduling\n */\nexport class LazyLoader {\n  constructor() {\n    this.components = new Map();\n    this.intersectionObserver = null;\n    this.idleCallback = null;\n    this.loadQueue = {\n      [LoadPriority.CRITICAL]: [],\n      [LoadPriority.HIGH]: [],\n      [LoadPriority.NORMAL]: [],\n      [LoadPriority.LOW]: [],\n    };\n    this.isProcessingQueue = false;\n\n    this.initializeObservers();\n  }\n\n  /**\n   * Initialize viewport and idle observers\n   */\n  initializeObservers() {\n    // Intersection Observer for viewport-based loading\n    if (\"IntersectionObserver\" in window) {\n      this.intersectionObserver = new IntersectionObserver(\n        (entries) => this.handleIntersectionChanges(entries),\n        {\n          rootMargin: \"50px\",\n          threshold: 0.1,\n        },\n      );\n    }\n\n    // Idle callback for low-priority loading\n    this.scheduleIdleLoading();\n  }\n\n  /**\n   * Register a lazy component\n   */\n  register(name, loader, options = {}) {\n    const component = new LazyComponent(name, loader, options);\n    this.components.set(name, component);\n\n    // Add to appropriate load queue\n    this.loadQueue[component.priority].push(component);\n\n    // Start loading critical components immediately\n    if (component.priority === LoadPriority.CRITICAL) {\n      this.processLoadQueue();\n    }\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n      action: \"lazy_component_registered\",\n      component: name,\n      priority: component.priority,\n    });\n\n    return component;\n  }\n\n  /**\n   * Load a component by name\n   */\n  async load(name) {\n    const component = this.components.get(name);\n    if (!component) {\n      throw new Error(`Component '${name}' not registered`);\n    }\n\n    return component.load();\n  }\n\n  /**\n   * Preload components based on priority\n   */\n  async preload(priority = LoadPriority.HIGH) {\n    const priorities = [LoadPriority.CRITICAL, LoadPriority.HIGH, LoadPriority.NORMAL, LoadPriority.LOW];\n    const targetPriorities = priorities.slice(0, priorities.indexOf(priority) + 1);\n\n    const preloadPromises = [];\n\n    targetPriorities.forEach((pri) => {\n      this.loadQueue[pri].forEach((component) => {\n        if (component.state === LoadState.PENDING) {\n          preloadPromises.push(component.load());\n        }\n      });\n    });\n\n    await Promise.allSettled(preloadPromises);\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n      action: \"lazy_components_preloaded\",\n      priority,\n      count: preloadPromises.length,\n    });\n  }\n\n  /**\n   * Observe element for viewport-based loading\n   */\n  observeElement(element, componentName) {\n    if (!this.intersectionObserver) {\n      return;\n    }\n\n    element.dataset.lazyComponent = componentName;\n    this.intersectionObserver.observe(element);\n  }\n\n  /**\n   * Handle intersection observer changes\n   */\n  handleIntersectionChanges(entries) {\n    entries.forEach((entry) => {\n      if (entry.isIntersecting) {\n        const componentName = entry.target.dataset.lazyComponent;\n        if (componentName) {\n          this.load(componentName).catch((error) => {\n            // (`Failed to load component ${componentName}:`, error);\n          });\n\n          // Stop observing once loaded\n          this.intersectionObserver.unobserve(entry.target);\n        }\n      }\n    });\n  }\n\n  /**\n   * Process load queue based on priority\n   */\n  async processLoadQueue() {\n    if (this.isProcessingQueue) {\n      return;\n    }\n\n    this.isProcessingQueue = true;\n\n    try {\n      // Process critical components first\n      await this.processQueueByPriority(LoadPriority.CRITICAL);\n\n      // Process high priority components\n      await this.processQueueByPriority(LoadPriority.HIGH);\n    } catch (error) {\n      // ('Error processing load queue:', error);\n    } finally {\n      this.isProcessingQueue = false;\n    }\n  }\n\n  /**\n   * Process components of specific priority\n   */\n  async processQueueByPriority(priority) {\n    const queue = this.loadQueue[priority];\n    const pendingComponents = queue.filter((comp) => comp.state === LoadState.PENDING);\n\n    if (pendingComponents.length === 0) {\n      return;\n    }\n\n    const loadPromises = pendingComponents.map((component) => component.load().catch((error) =>\n      // (`Component ${component.name} failed to load:`, error);\n      null));\n\n    await Promise.allSettled(loadPromises);\n  }\n\n  /**\n   * Schedule idle loading for low-priority components\n   */\n  scheduleIdleLoading() {\n    const scheduleNext = () => {\n      if (\"requestIdleCallback\" in window) {\n        this.idleCallback = requestIdleCallback((deadline) => {\n          this.processIdleQueue(deadline);\n          scheduleNext();\n        }, { timeout: 5000 });\n      } else {\n        // Fallback for browsers without requestIdleCallback\n        setTimeout(() => {\n          this.processIdleQueue({ timeRemaining: () => 50 });\n          scheduleNext();\n        }, 100);\n      }\n    };\n\n    scheduleNext();\n  }\n\n  /**\n   * Process low-priority components during idle time\n   */\n  async processIdleQueue(deadline) {\n    const normalQueue = this.loadQueue[LoadPriority.NORMAL];\n    const lowQueue = this.loadQueue[LoadPriority.LOW];\n\n    // Process normal priority first, then low priority\n    const pendingComponents = [\n      ...normalQueue.filter((comp) => comp.state === LoadState.PENDING),\n      ...lowQueue.filter((comp) => comp.state === LoadState.PENDING),\n    ];\n\n    for (const component of pendingComponents) {\n      if (deadline.timeRemaining() > 10) { // Need at least 10ms\n        try {\n          await component.load();\n        } catch (error) {\n          // (`Idle loading failed for ${component.name}:`, error);\n        }\n      } else {\n        break; // No more time available\n      }\n    }\n  }\n\n  /**\n   * Get loader statistics\n   */\n  getStats() {\n    const stats = {\n      total: this.components.size,\n      byState: {\n        pending: 0, loading: 0, loaded: 0, error: 0,\n      },\n      byPriority: {\n        critical: 0, high: 0, normal: 0, low: 0,\n      },\n      totalLoadTime: 0,\n      averageLoadTime: 0,\n    };\n\n    let totalLoadTime = 0;\n    let loadedCount = 0;\n\n    this.components.forEach((component) => {\n      stats.byState[component.state]++;\n      stats.byPriority[component.priority]++;\n\n      if (component.loadTime) {\n        totalLoadTime += component.loadTime;\n        loadedCount++;\n      }\n    });\n\n    stats.totalLoadTime = totalLoadTime;\n    stats.averageLoadTime = loadedCount > 0 ? totalLoadTime / loadedCount : 0;\n\n    return stats;\n  }\n\n  /**\n   * Force reload a component\n   */\n  async reload(name) {\n    const component = this.components.get(name);\n    if (!component) {\n      throw new Error(`Component '${name}' not registered`);\n    }\n\n    // Reset component state\n    component.state = LoadState.PENDING;\n    component.component = null;\n    component.error = null;\n    component.loadTime = null;\n    component.retryCount = 0;\n    component.loadPromise = null;\n\n    return component.load();\n  }\n\n  /**\n   * Dispose and cleanup\n   */\n  dispose() {\n    if (this.intersectionObserver) {\n      this.intersectionObserver.disconnect();\n    }\n\n    if (this.idleCallback) {\n      cancelIdleCallback(this.idleCallback);\n    }\n\n    this.components.clear();\n    Object.values(this.loadQueue).forEach((queue) => queue.length = 0);\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n      action: \"lazy_loader_disposed\",\n    });\n  }\n}\n\n/**\n * Medical component lazy loaders\n */\nexport class MedicalComponentLoader {\n  constructor(lazyLoader) {\n    this.lazyLoader = lazyLoader;\n    this.registerMedicalComponents();\n  }\n\n  /**\n   * Register all medical components (only for truly lazy-loaded modules)\n   */\n  registerMedicalComponents() {\n    // Only register components that are NOT statically imported elsewhere\n    // This prevents the build warnings about mixed static/dynamic imports\n\n    // Advanced features chunk (only loaded when research mode is activated)\n    this.lazyLoader.register(\n      \"advanced-analytics\",\n      () => import(\"../analytics/quality-metrics.js\"),\n      { priority: LoadPriority.LOW },\n    );\n\n    this.lazyLoader.register(\n      \"clinical-reporting\",\n      () => import(\"../analytics/clinical-reporting.js\"),\n      { priority: LoadPriority.LOW },\n    );\n\n    this.lazyLoader.register(\n      \"audit-trail\",\n      () => import(\"../analytics/audit-trail.js\"),\n      { priority: LoadPriority.LOW },\n    );\n\n    // Service workers and background features\n    this.lazyLoader.register(\n      \"medical-service-worker\",\n      () => import(\"../workers/medical-service-worker.js\"),\n      { priority: LoadPriority.LOW },\n    );\n\n    this.lazyLoader.register(\n      \"sw-manager\",\n      () => import(\"../workers/sw-manager.js\"),\n      { priority: LoadPriority.LOW },\n    );\n\n    // Advanced architectural patterns (loaded only when needed)\n    this.lazyLoader.register(\n      \"command-pattern\",\n      () => import(\"../patterns/command.js\"),\n      { priority: LoadPriority.NORMAL },\n    );\n\n    this.lazyLoader.register(\n      \"prediction-strategy\",\n      () => import(\"../patterns/prediction-strategy.js\"),\n      { priority: LoadPriority.NORMAL },\n    );\n\n    this.lazyLoader.register(\n      \"validation-factory\",\n      () => import(\"../patterns/validation-factory.js\"),\n      { priority: LoadPriority.NORMAL },\n    );\n  }\n\n  /**\n   * Load medical component by clinical priority\n   */\n  async loadByClinicalPriority(clinicalSituation) {\n    switch (clinicalSituation) {\n    case \"emergency\":\n      // Load high-priority architectural patterns\n      await this.lazyLoader.preload(LoadPriority.HIGH);\n      break;\n\n    case \"routine\":\n      // Load normal priority patterns and command structures\n      await this.lazyLoader.preload(LoadPriority.NORMAL);\n      break;\n\n    case \"research\":\n      // Load research and analytics tools\n      await this.lazyLoader.load(\"advanced-analytics\");\n      await this.lazyLoader.load(\"clinical-reporting\");\n      await this.lazyLoader.load(\"audit-trail\");\n      break;\n\n    case \"background\":\n      // Load service workers and background features\n      await this.lazyLoader.load(\"medical-service-worker\");\n      await this.lazyLoader.load(\"sw-manager\");\n      break;\n\n    default:\n      await this.lazyLoader.preload(LoadPriority.NORMAL);\n    }\n  }\n\n  /**\n   * Preload components for specific medical module\n   */\n  async preloadForModule(moduleType) {\n    // Since core components are now statically imported,\n    // we only need to load advanced features\n    const moduleComponents = {\n      coma: [\"command-pattern\"],\n      limited: [\"prediction-strategy\"],\n      full: [\"command-pattern\", \"prediction-strategy\", \"validation-factory\"],\n      research: [\"advanced-analytics\", \"clinical-reporting\", \"audit-trail\"],\n    };\n\n    const components = moduleComponents[moduleType] || [];\n    const loadPromises = components.map((comp) => this.lazyLoader.load(comp));\n\n    await Promise.allSettled(loadPromises);\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n      action: \"medical_components_preloaded\",\n      moduleType,\n      components,\n    });\n  }\n\n  /**\n   * Load enterprise features for production deployment\n   */\n  async loadEnterpriseFeatures() {\n    const enterpriseComponents = [\n      \"medical-service-worker\",\n      \"sw-manager\",\n      \"advanced-analytics\",\n      \"clinical-reporting\",\n      \"audit-trail\",\n    ];\n\n    const loadPromises = enterpriseComponents.map((comp) => this.lazyLoader.load(comp).catch((error) => {\n      console.warn(`Enterprise feature ${comp} failed to load:`, error);\n      return null;\n    }));\n\n    const results = await Promise.allSettled(loadPromises);\n    const loadedCount = results.filter((r) => r.status === \"fulfilled\" && r.value !== null).length;\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n      action: \"enterprise_features_loaded\",\n      requested: enterpriseComponents.length,\n      loaded: loadedCount,\n    });\n\n    return loadedCount;\n  }\n}\n\n// Export singleton instances\nexport const lazyLoader = new LazyLoader();\nexport const medicalComponentLoader = new MedicalComponentLoader(lazyLoader);\n","/**\n * Advanced Features Management System\n * iGFAP Stroke Triage Assistant - Phase 3 & 4 Feature Coordination\n *\n * Handles initialization and management of advanced features\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\nimport { safeAsync, ERROR_CATEGORIES, ERROR_SEVERITY } from \"../utils/error-handler.js\";\n\n// Phase 3: Advanced offline capabilities\nimport { medicalSWManager } from \"../workers/sw-manager.js\";\nimport { medicalPerformanceMonitor } from \"../performance/medical-performance-monitor.js\";\nimport { medicalSyncManager } from \"../sync/medical-sync-manager.js\";\nimport { lazyLoader } from \"../components/lazy-loader.js\";\n\n// Phase 4: Medical Intelligence & Analytics - Selected Features\nimport { clinicalReportingSystem } from \"../analytics/clinical-reporting.js\";\nimport { qualityMetricsTracker } from \"../analytics/quality-metrics.js\";\nimport { clinicalAuditTrail } from \"../analytics/audit-trail.js\";\n\n/**\n * Manages advanced features initialization and coordination\n */\nexport class AdvancedFeaturesManager {\n  constructor() {\n    this.isInitialized = false;\n    this.phase3Status = {\n      serviceWorker: false,\n      performanceMonitor: false,\n      syncManager: false,\n      lazyLoader: false,\n    };\n    this.phase4Status = {\n      reportingSystem: false,\n      qualityMetrics: false,\n      auditTrail: false,\n    };\n  }\n\n  /**\n   * Initialize all advanced features\n   */\n  async initialize() {\n    return safeAsync(\n      async () => {\n        // Initialize Phase 3 features\n        await this.initializePhase3Features();\n\n        // Initialize Phase 4 features\n        await this.initializePhase4Features();\n\n        this.isInitialized = true;\n        return true;\n      },\n      (error) =>\n        // Advanced features failure doesn't block core functionality\n        false,\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        severity: ERROR_SEVERITY.MEDIUM,\n        timeout: 60000, // Allow more time for advanced features\n        context: {\n          operation: \"initialize_advanced_features\",\n        },\n      },\n    );\n  }\n\n  /**\n   * Initialize Phase 3 Advanced Features\n   */\n  async initializePhase3Features() {\n    return safeAsync(\n      async () => {\n        // Start performance monitoring first\n        await this.initializePerformanceMonitor();\n\n        // Initialize service worker (non-blocking)\n        this.initializeServiceWorker();\n\n        // Initialize sync manager\n        await this.initializeSyncManager();\n\n        // Initialize progressive loading\n        await this.initializeProgressiveLoading();\n\n        return true;\n      },\n      (error) =>\n        // Phase 3 failure is non-critical\n        false,\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: \"initialize_phase3_features\" },\n      },\n    );\n  }\n\n  /**\n   * Initialize performance monitoring\n   */\n  async initializePerformanceMonitor() {\n    return safeAsync(\n      async () => {\n        medicalPerformanceMonitor.start();\n        this.phase3Status.performanceMonitor = true;\n        return true;\n      },\n      (error) => {\n        this.phase3Status.performanceMonitor = false;\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: \"initialize_performance_monitor\" },\n      },\n    );\n  }\n\n  /**\n   * Initialize service worker\n   */\n  async initializeServiceWorker() {\n    // Run in background without blocking\n    safeAsync(\n      async () => {\n        const swInitialized = await medicalSWManager.initialize();\n        this.phase3Status.serviceWorker = swInitialized;\n\n        if (swInitialized) {\n          // Prefetch critical medical resources\n          await this.prefetchCriticalResources();\n        }\n\n        return swInitialized;\n      },\n      (error) => {\n        this.phase3Status.serviceWorker = false;\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.NETWORK,\n        context: { operation: \"initialize_service_worker\" },\n      },\n    );\n  }\n\n  /**\n   * Initialize sync manager\n   */\n  async initializeSyncManager() {\n    return safeAsync(\n      async () => {\n        const syncInitialized = await medicalSyncManager.initialize();\n        this.phase3Status.syncManager = syncInitialized;\n        return syncInitialized;\n      },\n      (error) => {\n        this.phase3Status.syncManager = false;\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.NETWORK,\n        context: { operation: \"initialize_sync_manager\" },\n      },\n    );\n  }\n\n  /**\n   * Initialize progressive loading\n   */\n  async initializeProgressiveLoading() {\n    return safeAsync(\n      async () => {\n        // Preload critical components immediately\n        await lazyLoader.preload(\"critical\");\n\n        // Setup viewport-based loading for result visualizations\n        setTimeout(() => this.setupViewportLoading(), 100);\n\n        this.phase3Status.lazyLoader = true;\n        return true;\n      },\n      (error) => {\n        this.phase3Status.lazyLoader = false;\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: \"initialize_progressive_loading\" },\n      },\n    );\n  }\n\n  /**\n   * Setup viewport-based loading\n   */\n  setupViewportLoading() {\n    try {\n      const brainVizElements = document.querySelectorAll(\".brain-visualization-placeholder\");\n      brainVizElements.forEach((element) => {\n        lazyLoader.observeElement(element, \"brain-visualization\");\n      });\n\n      const mapElements = document.querySelectorAll(\".stroke-center-map-placeholder\");\n      mapElements.forEach((element) => {\n        lazyLoader.observeElement(element, \"stroke-center-map\");\n      });\n    } catch (error) {\n      // Viewport loading setup failed - continue without it\n    }\n  }\n\n  /**\n   * Prefetch critical resources for offline use\n   */\n  async prefetchCriticalResources() {\n    return safeAsync(\n      async () => {\n        const criticalResources = [\n          \"/0925/src/logic/lvo-local-model.js\",\n          \"/0925/src/logic/ich-volume-calculator.js\",\n          \"/0925/src/patterns/prediction-strategy.js\",\n          \"/0925/src/performance/medical-cache.js\",\n        ];\n\n        await medicalSWManager.prefetchResources(criticalResources);\n        return true;\n      },\n      (error) =>\n        // Prefetch failure is non-critical\n        false,\n      {\n        category: ERROR_CATEGORIES.NETWORK,\n        context: { operation: \"prefetch_critical_resources\" },\n      },\n    );\n  }\n\n  /**\n   * Initialize Phase 4 Selected Features\n   */\n  async initializePhase4Features() {\n    return safeAsync(\n      async () => {\n        // Initialize clinical audit trail first (for compliance)\n        await this.initializeAuditTrail();\n\n        // Start clinical reporting system\n        await this.initializeReportingSystem();\n\n        // Initialize quality metrics tracking\n        await this.initializeQualityMetrics();\n\n        // Setup integration event handlers\n        this.setupPhase4EventHandlers();\n\n        return true;\n      },\n      (error) =>\n        // Phase 4 failure is non-critical\n        false,\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: \"initialize_phase4_features\" },\n      },\n    );\n  }\n\n  /**\n   * Initialize audit trail\n   */\n  async initializeAuditTrail() {\n    return safeAsync(\n      async () => {\n        await clinicalAuditTrail.initialize();\n        this.phase4Status.auditTrail = true;\n        return true;\n      },\n      (error) => {\n        this.phase4Status.auditTrail = false;\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.MEDICAL,\n        context: { operation: \"initialize_audit_trail\" },\n      },\n    );\n  }\n\n  /**\n   * Initialize reporting system\n   */\n  async initializeReportingSystem() {\n    return safeAsync(\n      async () => {\n        clinicalReportingSystem.start();\n        this.phase4Status.reportingSystem = true;\n        return true;\n      },\n      (error) => {\n        this.phase4Status.reportingSystem = false;\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.MEDICAL,\n        context: { operation: \"initialize_reporting_system\" },\n      },\n    );\n  }\n\n  /**\n   * Initialize quality metrics\n   */\n  async initializeQualityMetrics() {\n    return safeAsync(\n      async () => {\n        await qualityMetricsTracker.initialize();\n        this.phase4Status.qualityMetrics = true;\n        return true;\n      },\n      (error) => {\n        this.phase4Status.qualityMetrics = false;\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.MEDICAL,\n        context: { operation: \"initialize_quality_metrics\" },\n      },\n    );\n  }\n\n  /**\n   * Setup Phase 4 event handlers\n   */\n  setupPhase4EventHandlers() {\n    // Listen for form submissions to trigger quality metrics and audit logging\n    document.addEventListener(\"submit\", async (event) => {\n      const form = event.target;\n      if (form.dataset.module) {\n        await safeAsync(\n          async () => {\n            const formData = new FormData(form);\n            const patientData = Object.fromEntries(formData.entries());\n\n            // Log audit trail\n            if (this.phase4Status.auditTrail) {\n              clinicalAuditTrail.logEvent(\"data_entry\", {\n                module: form.dataset.module,\n                timestamp: new Date().toISOString(),\n                data_points: Object.keys(patientData).length,\n              });\n            }\n\n            // Record quality metrics\n            if (this.phase4Status.qualityMetrics) {\n              qualityMetricsTracker.recordMetric(\"form_completion\", \"count\", 1);\n              qualityMetricsTracker.recordMetric(\n                \"data_quality\",\n                \"completeness\",\n                Object.values(patientData).filter((v) => v && v.trim()).length / Object.keys(patientData).length * 100,\n              );\n            }\n\n            return true;\n          },\n          (error) =>\n            // Phase 4 event handling failed - continue silently\n            false,\n          {\n            category: ERROR_CATEGORIES.MEDICAL,\n            context: { operation: \"phase4_event_handling\" },\n          },\n        );\n      }\n    });\n  }\n\n  /**\n   * Get comprehensive status of all advanced features\n   */\n  getStatus() {\n    return {\n      isInitialized: this.isInitialized,\n      phase3: {\n        ...this.phase3Status,\n        overall: Object.values(this.phase3Status).some((status) => status),\n      },\n      phase4: {\n        ...this.phase4Status,\n        overall: Object.values(this.phase4Status).some((status) => status),\n      },\n      systemStatus: this.getSystemStatus(),\n    };\n  }\n\n  /**\n   * Get detailed system status\n   */\n  getSystemStatus() {\n    return {\n      serviceWorkerSupported: \"serviceWorker\" in navigator,\n      indexedDBSupported: \"indexedDB\" in window,\n      notificationSupported: \"Notification\" in window,\n      cacheSupported: \"caches\" in window,\n      webLockSupported: \"locks\" in navigator,\n      performanceSupported: \"performance\" in window,\n    };\n  }\n\n  /**\n   * Restart advanced features\n   */\n  async restart() {\n    this.destroy();\n    return this.initialize();\n  }\n\n  /**\n   * Cleanup when destroyed\n   */\n  destroy() {\n    // Cleanup Phase 3 features\n    if (this.phase3Status.performanceMonitor) {\n      try {\n        medicalPerformanceMonitor.stop?.();\n      } catch (error) {\n        // Cleanup error - continue\n      }\n    }\n\n    if (this.phase3Status.syncManager) {\n      try {\n        medicalSyncManager.destroy?.();\n      } catch (error) {\n        // Cleanup error - continue\n      }\n    }\n\n    // Cleanup Phase 4 features\n    if (this.phase4Status.reportingSystem) {\n      try {\n        clinicalReportingSystem.stop?.();\n      } catch (error) {\n        // Cleanup error - continue\n      }\n    }\n\n    // Reset status\n    this.phase3Status = {\n      serviceWorker: false,\n      performanceMonitor: false,\n      syncManager: false,\n      lazyLoader: false,\n    };\n\n    this.phase4Status = {\n      reportingSystem: false,\n      qualityMetrics: false,\n      auditTrail: false,\n    };\n\n    this.isInitialized = false;\n  }\n}\n","/**\n * Main Application Controller\n * iGFAP Stroke Triage Assistant - Modular Architecture\n *\n * Handles core application lifecycle and coordination\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\nimport { store } from \"../state/store.js\";\nimport { render } from \"../ui/render.js\";\nimport { authManager } from \"../auth/authentication.js\";\nimport { warmUpFunctions } from \"../api/client.js\";\nimport { safeAsync, ERROR_CATEGORIES, ERROR_SEVERITY } from \"../utils/error-handler.js\";\nimport { medicalLogger, LOG_CATEGORIES } from \"../utils/medical-logger.js\";\n\nimport { UIManager } from \"./ui-manager.js\";\nimport { ThemeManager } from \"./theme-manager.js\";\nimport { SessionManager } from \"./session-manager.js\";\nimport { AdvancedFeaturesManager } from \"./advanced-features-manager.js\";\n\n/**\n * Main application controller - coordinates all subsystems\n */\nexport class AppController {\n  constructor() {\n    this.container = null;\n    this.unsubscribe = null;\n    this.isInitialized = false;\n\n    // Initialize managers\n    this.uiManager = new UIManager();\n    this.themeManager = new ThemeManager();\n    this.sessionManager = new SessionManager();\n    this.advancedFeaturesManager = new AdvancedFeaturesManager();\n  }\n\n  /**\n   * Initialize the application\n   * @returns {Promise<boolean>} - Initialization success\n   */\n  async init() {\n    return safeAsync(\n      async () => {\n        medicalLogger.info(\"Application initialization started\", {\n          category: LOG_CATEGORIES.SYSTEM,\n          version: \"2.1.0\",\n          userAgent: navigator.userAgent.substring(0, 100),\n        });\n\n        // Wait for DOM to be ready\n        if (document.readyState === \"loading\") {\n          medicalLogger.debug(\"Waiting for DOM ready\", { category: LOG_CATEGORIES.SYSTEM });\n          return new Promise(resolve => {\n            document.addEventListener(\"DOMContentLoaded\", () => resolve(this.init()));\n          });\n        }\n\n        // Find app container\n        this.container = document.getElementById(\"appContainer\");\n        if (!this.container) {\n          medicalLogger.critical(\"App container not found\", {\n            category: LOG_CATEGORIES.SYSTEM,\n            containerId: \"appContainer\",\n          });\n          throw new Error(\"Critical initialization failure: App container not found\");\n        }\n\n        medicalLogger.debug(\"App container found\", { category: LOG_CATEGORIES.SYSTEM });\n\n        // Check authentication before proceeding\n        if (!authManager.isValidSession()) {\n          medicalLogger.info(\"No valid session, redirecting to login\", {\n            category: LOG_CATEGORIES.AUTHENTICATION,\n          });\n          store.navigate(\"login\");\n        }\n\n        // Initialize core systems\n        medicalLogger.info(\"Initializing core features\", { category: LOG_CATEGORIES.SYSTEM });\n        await this.initializeCoreFeatures();\n\n        // Advanced features disabled to prevent sync manager errors\n        medicalLogger.info(\"Skipping advanced features initialization\", {\n          category: LOG_CATEGORIES.SYSTEM,\n        });\n        // this.initializeAdvancedFeatures();\n\n        // Setup rendering system FIRST so navigation works\n        this.setupRenderingSystem();\n\n        // Initialize UI components\n        medicalLogger.debug(\"Initializing UI manager\", { category: LOG_CATEGORIES.SYSTEM });\n        this.uiManager.initialize(this.container);\n\n        // Initialize theme system\n        medicalLogger.debug(\"Initializing theme manager\", { category: LOG_CATEGORIES.SYSTEM });\n        this.themeManager.initialize();\n\n        // Setup session management\n        medicalLogger.debug(\"Initializing session manager\", { category: LOG_CATEGORIES.SYSTEM });\n        this.sessionManager.initialize();\n\n        // Warm up Cloud Functions in background (dev only)\n        if (import.meta && import.meta.env && import.meta.env.DEV) {\n          medicalLogger.info(\"Starting Cloud Functions warm-up (dev only)\", {\n            category: LOG_CATEGORIES.NETWORK,\n          });\n          warmUpFunctions();\n        }\n\n        // Initial render (store subscription is now active)\n        render(this.container);\n\n        this.isInitialized = true;\n        medicalLogger.info(\"Application initialization completed successfully\", {\n          category: LOG_CATEGORIES.SYSTEM,\n          initializationTime: performance.now(),\n        });\n\n        return true;\n      },\n      error => {\n        medicalLogger.critical(\"Application initialization failed\", {\n          category: LOG_CATEGORIES.SYSTEM,\n          error: error.message,\n          stack: error.stack,\n        });\n        throw new Error(`App initialization failed: ${error.message}`);\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        severity: ERROR_SEVERITY.CRITICAL,\n        timeout: 30000,\n        context: {\n          operation: \"app_initialization\",\n        },\n      }\n    );\n  }\n\n  /**\n   * Initialize core application features\n   */\n  async initializeCoreFeatures() {\n    return safeAsync(\n      async () => {\n        // Core features that must be available immediately\n        const coreInitTasks = [\n          this.uiManager.preloadCriticalComponents(),\n          this.themeManager.loadSavedTheme(),\n          this.sessionManager.validateStoredSession(),\n        ];\n\n        const results = await Promise.allSettled(coreInitTasks);\n\n        // Check if any critical feature failed\n        const failures = results.filter(result => result.status === \"rejected\");\n        if (failures.length > 0) {\n          throw new Error(`${failures.length} core features failed to initialize`);\n        }\n\n        return true;\n      },\n      error =>\n        // Continue with degraded functionality on core feature failure\n        false,\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        severity: ERROR_SEVERITY.HIGH,\n        context: {\n          operation: \"core_features_init\",\n        },\n      }\n    );\n  }\n\n  /**\n   * Initialize advanced features (non-blocking)\n   */\n  async initializeAdvancedFeatures() {\n    // Run in background without blocking main app\n    safeAsync(\n      async () => {\n        await this.advancedFeaturesManager.initialize();\n        return true;\n      },\n      error =>\n        // Advanced features failure doesn't block core functionality\n        false,\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        severity: ERROR_SEVERITY.MEDIUM,\n        context: {\n          operation: \"advanced_features_init\",\n        },\n      }\n    );\n  }\n\n  /**\n   * Setup the rendering system\n   */\n  setupRenderingSystem() {\n    // Subscribe to store changes\n    this.unsubscribe = store.subscribe(() => {\n      render(this.container);\n      // Update research button visibility after each render\n      setTimeout(() => this.uiManager.updateResearchMode(), 200);\n    });\n\n    // Subscribe to language changes\n    window.addEventListener(\"languageChanged\", () => {\n      this.uiManager.updateLanguage();\n      render(this.container);\n    });\n  }\n\n  /**\n   * Get application status\n   * @returns {Object} - Application status information\n   */\n  getStatus() {\n    return {\n      isInitialized: this.isInitialized,\n      hasContainer: !!this.container,\n      isAuthenticated: authManager.isValidSession(),\n      ui: this.uiManager.getStatus(),\n      theme: this.themeManager.getStatus(),\n      session: this.sessionManager.getStatus(),\n      advancedFeatures: this.advancedFeaturesManager.getStatus(),\n    };\n  }\n\n  /**\n   * Cleanup when app is destroyed\n   */\n  destroy() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n\n    this.uiManager.destroy();\n    this.themeManager.destroy();\n    this.sessionManager.destroy();\n    this.advancedFeaturesManager.destroy();\n\n    this.isInitialized = false;\n  }\n}\n\n/**\n * Create and initialize the main application\n */\nexport async function createApp() {\n  const app = new AppController();\n\n  try {\n    await app.init();\n    return app;\n  } catch (error) {\n    throw new Error(`Failed to create application: ${error.message}`);\n  }\n}\n","/**\n * API Warm-up Service\n * Prevents cold start delays by warming up Cloud Functions on app initialization\n */\n\nimport { medicalLogger } from \"../utils/medical-logger.js\";\n\n// Cloud Function endpoints that need warming up\nconst API_ENDPOINTS = {\n  authentication: \"https://europe-west3-igfap-452720.cloudfunctions.net/authenticate-research-access\",\n  comaIch: \"https://europe-west3-igfap-452720.cloudfunctions.net/predict_coma_ich\",\n  limitedIch: \"https://europe-west3-igfap-452720.cloudfunctions.net/predict_limited_data_ich\",\n  fullStroke: \"https://europe-west3-igfap-452720.cloudfunctions.net/predict_full_stroke\",\n  lvo: \"https://europe-west3-igfap-452720.cloudfunctions.net/predict_lvo\",\n};\n\n// Lightweight test payloads to warm up APIs\nconst WARMUP_PAYLOADS = {\n  authentication: {\n    action: \"validate_session\",\n    session_token: \"warmup-test-token\",\n  },\n  comaIch: {\n    gfap_value: 100,\n  },\n  limitedIch: {\n    age_years: 65,\n    systolic_bp: 140,\n    diastolic_bp: 80,\n    gfap_value: 100,\n    vigilanzminderung: 0,\n  },\n  fullStroke: {\n    age_years: 65,\n    systolic_bp: 140,\n    diastolic_bp: 80,\n    gfap_value: 100,\n    fast_ed_score: 4,\n    headache: 0,\n    vigilanzminderung: 0,\n    armparese: 0,\n    beinparese: 0,\n    eye_deviation: 0,\n    atrial_fibrillation: 0,\n    anticoagulated_noak: 0,\n    antiplatelets: 0,\n  },\n  lvo: {\n    gfap_value: 100,\n    fast_ed_score: 4,\n  },\n};\n\nclass APIWarmupService {\n  constructor() {\n    this.warmupAttempts = 0;\n    this.successfulWarmups = 0;\n    this.warmupResults = {};\n    this.isWarming = false;\n  }\n\n  /**\n   * Start warming up all APIs\n   * @param {boolean} background - Whether to run in background (default: true)\n   * @returns {Promise<Object>} Results of warmup attempts\n   */\n  async warmupAllAPIs(background = true) {\n    if (this.isWarming) {\n      medicalLogger.info(\"API warmup already in progress\", { category: \"WARMUP\" });\n      return this.warmupResults;\n    }\n\n    this.isWarming = true;\n    this.warmupAttempts = 0;\n    this.successfulWarmups = 0;\n    this.warmupResults = {};\n\n    medicalLogger.info(\"Starting API warmup process\", {\n      category: \"WARMUP\",\n      endpoints: Object.keys(API_ENDPOINTS).length,\n    });\n\n    const warmupPromises = Object.entries(API_ENDPOINTS).map(async ([name, url]) => {\n      try {\n        const result = await this.warmupSingleAPI(name, url, WARMUP_PAYLOADS[name]);\n        this.warmupResults[name] = result;\n        if (result.success) {\n          this.successfulWarmups++;\n        }\n        return result;\n      } catch (error) {\n        const errorResult = {\n          success: false,\n          error: error.message,\n          duration: 0,\n          timestamp: new Date().toISOString(),\n        };\n        this.warmupResults[name] = errorResult;\n        return errorResult;\n      }\n    });\n\n    if (background) {\n      // Don't await in background mode - let it run asynchronously\n      Promise.all(warmupPromises).then(() => {\n        this.completeWarmup();\n      }).catch((error) => {\n        medicalLogger.error(\"Background API warmup failed\", {\n          category: \"WARMUP\",\n          error: error.message,\n        });\n        this.isWarming = false;\n      });\n\n      return { status: \"warming\", message: \"APIs warming up in background\" };\n    }\n    // Wait for all warmups to complete\n    await Promise.all(warmupPromises);\n    this.completeWarmup();\n    return this.warmupResults;\n  }\n\n  /**\n   * Warm up a single API endpoint\n   * @param {string} name - API name\n   * @param {string} url - API URL\n   * @param {Object} payload - Test payload\n   * @returns {Promise<Object>} Warmup result\n   */\n  async warmupSingleAPI(name, url, payload) {\n    const startTime = Date.now();\n    this.warmupAttempts++;\n\n    try {\n      medicalLogger.info(`Warming up ${name} API`, { category: \"WARMUP\", url });\n\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"User-Agent\": \"iGFAP-Warmup/2.1.0\",\n        },\n        body: JSON.stringify(payload),\n        signal: AbortSignal.timeout(10000), // 10 second timeout\n      });\n\n      const duration = Date.now() - startTime;\n\n      // We expect most warmup calls to return errors (since they're test data)\n      // The important thing is that the function responds, not that it succeeds\n      const result = {\n        success: true,\n        status: response.status,\n        duration,\n        message: `${name} API warmed up`,\n        timestamp: new Date().toISOString(),\n      };\n\n      medicalLogger.info(`Successfully warmed up ${name} API`, {\n        category: \"WARMUP\",\n        duration,\n        status: response.status,\n      });\n\n      return result;\n    } catch (error) {\n      const duration = Date.now() - startTime;\n\n      // Network errors are expected for CORS issues, but the function still gets warmed up\n      if (error.name === \"TypeError\" && error.message.includes(\"Failed to fetch\")) {\n        medicalLogger.info(`${name} API warmup encountered CORS (expected), function still warmed`, {\n          category: \"WARMUP\",\n          duration,\n        });\n\n        return {\n          success: true, // Consider CORS as successful warmup\n          status: \"cors-blocked\",\n          duration,\n          message: `${name} API warmed (CORS blocked but function activated)`,\n          timestamp: new Date().toISOString(),\n        };\n      }\n\n      medicalLogger.warn(`Failed to warm up ${name} API`, {\n        category: \"WARMUP\",\n        error: error.message,\n        duration,\n      });\n\n      return {\n        success: false,\n        error: error.message,\n        duration,\n        timestamp: new Date().toISOString(),\n      };\n    }\n  }\n\n  /**\n   * Complete the warmup process and log results\n   */\n  completeWarmup() {\n    this.isWarming = false;\n\n    const summary = {\n      total: this.warmupAttempts,\n      successful: this.successfulWarmups,\n      failed: this.warmupAttempts - this.successfulWarmups,\n      results: this.warmupResults,\n    };\n\n    medicalLogger.info(\"API warmup process completed\", {\n      category: \"WARMUP\",\n      summary,\n    });\n\n    // Dispatch custom event for UI feedback\n    if (typeof window !== \"undefined\") {\n      window.dispatchEvent(new CustomEvent(\"api-warmup-complete\", {\n        detail: summary,\n      }));\n    }\n  }\n\n  /**\n   * Get current warmup status\n   * @returns {Object} Current status and results\n   */\n  getWarmupStatus() {\n    return {\n      isWarming: this.isWarming,\n      attempts: this.warmupAttempts,\n      successful: this.successfulWarmups,\n      results: this.warmupResults,\n    };\n  }\n\n  /**\n   * Quick warmup for critical APIs only (authentication, ICH prediction)\n   * @returns {Promise<Object>} Results of critical API warmup\n   */\n  async warmupCriticalAPIs() {\n    const criticalAPIs = [\"authentication\", \"comaIch\", \"limitedIch\"];\n\n    medicalLogger.info(\"Starting critical API warmup\", {\n      category: \"WARMUP\",\n      apis: criticalAPIs,\n    });\n\n    const results = {};\n\n    for (const apiName of criticalAPIs) {\n      if (API_ENDPOINTS[apiName]) {\n        results[apiName] = await this.warmupSingleAPI(\n          apiName,\n          API_ENDPOINTS[apiName],\n          WARMUP_PAYLOADS[apiName],\n        );\n      }\n    }\n\n    medicalLogger.info(\"Critical API warmup completed\", {\n      category: \"WARMUP\",\n      results,\n    });\n\n    return results;\n  }\n}\n\n// Create singleton instance\nexport const apiWarmupService = new APIWarmupService();\n\n/**\n * Initialize API warmup on app startup\n * @param {Object} options - Warmup options\n * @param {boolean} options.background - Run in background (default: true)\n * @param {boolean} options.criticalOnly - Only warm critical APIs (default: false)\n * @returns {Promise<Object>} Warmup results\n */\nexport async function initializeAPIWarmup(options = {}) {\n  const { background = true, criticalOnly = false } = options;\n\n  try {\n    if (criticalOnly) {\n      return await apiWarmupService.warmupCriticalAPIs();\n    }\n    return await apiWarmupService.warmupAllAPIs(background);\n  } catch (error) {\n    medicalLogger.error(\"API warmup initialization failed\", {\n      category: \"WARMUP\",\n      error: error.message,\n    });\n    return { error: error.message };\n  }\n}\n\n/**\n * Warm up APIs before making actual requests (for better UX)\n * @param {Array<string>} apiNames - Names of APIs to warm up\n * @returns {Promise<Object>} Warmup results\n */\nexport async function warmupSpecificAPIs(apiNames) {\n  const results = {};\n\n  for (const apiName of apiNames) {\n    if (API_ENDPOINTS[apiName]) {\n      results[apiName] = await apiWarmupService.warmupSingleAPI(\n        apiName,\n        API_ENDPOINTS[apiName],\n        WARMUP_PAYLOADS[apiName],\n      );\n    } else {\n      results[apiName] = {\n        success: false,\n        error: `Unknown API: ${apiName}`,\n        timestamp: new Date().toISOString(),\n      };\n    }\n  }\n\n  return results;\n}\n\n// Auto-start warmup when module loads (background mode)\nif (typeof window !== \"undefined\") {\n  // Only in browser environment\n  setTimeout(() => {\n    initializeAPIWarmup({ background: true, criticalOnly: false });\n  }, 1000); // Start warmup 1 second after page load\n}\n","/**\r\n * Main Application Entry Point - Clean Modular Architecture\r\n * iGFAP Stroke Triage Assistant - Production Ready\r\n *\r\n * Uses the new modular app-controller.js system for better maintainability\r\n *\r\n * @author iGFAP Project Team\r\n * @contact Deepak Bos <bosdeepak@gmail.com>\r\n */\r\n\r\nimport \"./index.css\";\r\nimport { createApp } from \"./core/app-controller.js\";\r\nimport { store } from \"./state/store.js\";\r\nimport { render } from \"./ui/render.js\";\r\nimport { safeAsync, ERROR_CATEGORIES, ERROR_SEVERITY } from \"./utils/error-handler.js\";\r\nimport { initializeAPIWarmup } from \"./core/api-warmup.js\";\r\n\r\n/**\r\n * Application instance\r\n */\r\nlet app = null;\r\n\r\n/**\r\n * Initialize the iGFAP Stroke Triage Assistant\r\n */\r\nasync function initializeApplication() {\r\n  return safeAsync(\r\n    async () => {\r\n      // Create and initialize the main application\r\n      app = await createApp();\r\n\r\n      // Start API warmup in background to prevent cold starts\r\n      setTimeout(() => {\r\n        initializeAPIWarmup({ background: true, criticalOnly: false })\r\n          .then(result => {\r\n            console.info(\"[Main] API warmup started:\", result.status || \"completed\");\r\n          })\r\n          .catch(error => {\r\n            console.warn(\"[Main] API warmup failed:\", error.message);\r\n          });\r\n      }, 2000); // Start warmup 2 seconds after app initialization\r\n\r\n      // Log successful initialization\r\n      const status = app.getStatus();\r\n      const startupEvent = new CustomEvent(\"appInitialized\", {\r\n        detail: {\r\n          timestamp: new Date().toISOString(),\r\n          status,\r\n          version: \"2.1.0\",\r\n          build: \"production\",\r\n        },\r\n      });\r\n      document.dispatchEvent(startupEvent);\r\n      document.querySelectorAll(\".bar-fill\").forEach(el => {\r\n        const targetWidth = el.getAttribute(\"data-width\");\r\n        el.style.width = `${targetWidth}%`;\r\n      });\r\n      return app;\r\n    },\r\n    error => {\r\n      // Critical initialization failure\r\n      handleInitializationFailure(error);\r\n      throw error;\r\n    },\r\n    {\r\n      category: ERROR_CATEGORIES.RENDERING,\r\n      severity: ERROR_SEVERITY.CRITICAL,\r\n      timeout: 30000,\r\n      context: {\r\n        operation: \"application_initialization\",\r\n        version: \"2.1.0\",\r\n      },\r\n    }\r\n  );\r\n}\r\n\r\n/**\r\n * Handle initialization failure gracefully\r\n * @param {Error} error - Initialization error\r\n */\r\nfunction handleInitializationFailure(error) {\r\n  // Create emergency fallback UI\r\n  const container = document.getElementById(\"appContainer\");\r\n  if (container) {\r\n    container.innerHTML = `\r\n      <div style=\"\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        min-height: 50vh;\r\n        padding: 20px;\r\n        text-align: center;\r\n        font-family: system-ui, -apple-system, sans-serif;\r\n      \">\r\n        <div style=\"\r\n          background: #fff3cd;\r\n          border: 1px solid #ffeaa7;\r\n          border-radius: 8px;\r\n          padding: 24px;\r\n          max-width: 500px;\r\n          box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n        \">\r\n          <h2 style=\"color: #856404; margin: 0 0 16px 0;\">\r\n            ⚠️ Application Initialization Failed\r\n          </h2>\r\n          <p style=\"color: #856404; margin: 0 0 16px 0; line-height: 1.5;\">\r\n            The medical triage system could not start properly.\r\n            This may be due to a network issue or browser compatibility problem.\r\n          </p>\r\n          <button\r\n            onclick=\"window.location.reload()\"\r\n            style=\"\r\n              background: #007bff;\r\n              color: white;\r\n              border: none;\r\n              padding: 12px 24px;\r\n              border-radius: 6px;\r\n              font-size: 16px;\r\n              cursor: pointer;\r\n              margin-right: 12px;\r\n            \"\r\n          >\r\n            🔄 Reload Application\r\n          </button>\r\n          <button\r\n            onclick=\"window.open('mailto:bosdeepak@gmail.com?subject=iGFAP App Error', '_blank')\"\r\n            style=\"\r\n              background: #6c757d;\r\n              color: white;\r\n              border: none;\r\n              padding: 12px 24px;\r\n              border-radius: 6px;\r\n              font-size: 16px;\r\n              cursor: pointer;\r\n            \"\r\n          >\r\n            📧 Report Issue\r\n          </button>\r\n        </div>\r\n        <small style=\"color: #6c757d; margin-top: 20px;\">\r\n          Error: ${error.message || \"Unknown initialization error\"}\r\n        </small>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  // Log error for debugging\r\n  const errorEvent = new CustomEvent(\"appInitializationFailed\", {\r\n    detail: {\r\n      error: error.message,\r\n      timestamp: new Date().toISOString(),\r\n      userAgent: navigator.userAgent.substring(0, 100),\r\n    },\r\n  });\r\n  document.dispatchEvent(errorEvent);\r\n}\r\n\r\n/**\r\n * Cleanup on page unload\r\n */\r\nfunction handlePageUnload() {\r\n  if (app) {\r\n    try {\r\n      app.destroy();\r\n    } catch (error) {\r\n      // Cleanup error - continue with unload\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Setup global error handlers\r\n */\r\nfunction setupGlobalErrorHandlers() {\r\n  // Handle page visibility changes (mobile apps, tab switching)\r\n  document.addEventListener(\"visibilitychange\", () => {\r\n    if (app && document.visibilityState === \"visible\") {\r\n      // App became visible - validate session\r\n      const status = app.getStatus();\r\n      if (!status.isAuthenticated) {\r\n        window.location.reload();\r\n      }\r\n    }\r\n  });\r\n\r\n  // Handle page unload\r\n  window.addEventListener(\"beforeunload\", handlePageUnload);\r\n  window.addEventListener(\"unload\", handlePageUnload);\r\n}\r\n\r\n/**\r\n * Main application startup\r\n */\r\nasync function main() {\r\n  try {\r\n    // In local preview, make sure no service worker is controlling (avoids stale assets)\r\n    try {\r\n      const isLocalPreview =\r\n        [\"localhost\", \"127.0.0.1\", \"0.0.0.0\"].includes(window.location.hostname) &&\r\n        !(import.meta && import.meta.env && import.meta.env.DEV);\r\n      if (isLocalPreview && \"serviceWorker\" in navigator) {\r\n        const regs = await navigator.serviceWorker.getRegistrations();\r\n        for (const reg of regs) {\r\n          try {\r\n            await reg.unregister();\r\n          } catch {\r\n            console.warn(\"[Main] Failed to unregister service worker:\", reg);\r\n          }\r\n        }\r\n        // Also clear any pending beforeinstallprompt side-effects\r\n        window.addEventListener(\"beforeinstallprompt\", e => {\r\n          e.preventDefault();\r\n        });\r\n      }\r\n    } catch {\r\n      console.warn(\"[Main] Service worker cleanup failed\");\r\n    }\r\n\r\n    // Setup global error handling\r\n    setupGlobalErrorHandlers();\r\n\r\n    // Initialize the application\r\n    await initializeApplication();\r\n\r\n    // Application started successfully\r\n    const event = new CustomEvent(\"appReady\", {\r\n      detail: {\r\n        timestamp: new Date().toISOString(),\r\n        version: \"2.1.0\",\r\n      },\r\n    });\r\n    document.dispatchEvent(event);\r\n  } catch (error) {\r\n    // Main initialization failed - already handled by handleInitializationFailure\r\n  }\r\n}\r\n\r\n/**\r\n * Start the application when DOM is ready\r\n */\r\nif (document.readyState === \"loading\") {\r\n  document.addEventListener(\"DOMContentLoaded\", main);\r\n} else {\r\n  main();\r\n}\r\n\r\n/**\r\n * Export for debugging and testing\r\n */\r\nif (typeof window !== \"undefined\") {\r\n  window.iGFAPApp = {\r\n    getApp: () => app,\r\n    getStatus: () => app?.getStatus() || { error: \"App not initialized\" },\r\n    restart: async () => {\r\n      if (app) {\r\n        app.destroy();\r\n      }\r\n      return initializeApplication();\r\n    },\r\n    // Debug helpers\r\n    getCurrentScreen: () => {\r\n      try {\r\n        return store.getState().currentScreen;\r\n      } catch {\r\n        return \"unknown\";\r\n      }\r\n    },\r\n    forceResults: () => {\r\n      try {\r\n        store.navigate(\"results\");\r\n        const container = document.getElementById(\"appContainer\");\r\n        if (container) {\r\n          render(container);\r\n        }\r\n        return true;\r\n      } catch {\r\n        return false;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n/**\r\n * Export for module systems\r\n */\r\nexport { app, initializeApplication, handleInitializationFailure };\r\n","import React from \"react\";\n\nexport default function ProbabilityRing({ percent = 0, level = \"normal\" }) {\n  const radius = 50;\n  const strokeWidth = 8;\n  const circumference = 2 * Math.PI * radius;\n  const offset = circumference - (percent / 100) * circumference;\n\n  // pick color based on level\n  const strokeColor =\n    level === \"critical\"\n      ? \"#DC2626\" // red-600\n      : level === \"high\"\n        ? \"#F59E0B\" // amber-500\n        : \"#2563EB\"; // blue-600\n\n  return (\n    <div className=\"relative w-28 h-28 flex items-center justify-center\">\n      {/* Background circle */}\n      <svg className=\"w-full h-full transform -rotate-90\" viewBox=\"0 0 120 120\">\n        <circle\n          cx=\"60\"\n          cy=\"60\"\n          r={radius}\n          stroke=\"rgba(0,0,0,0.1)\"\n          strokeWidth={strokeWidth}\n          fill=\"none\"\n        />\n        {/* Progress arc */}\n        <circle\n          cx=\"60\"\n          cy=\"60\"\n          r={radius}\n          stroke={strokeColor}\n          strokeWidth={strokeWidth}\n          strokeDasharray={circumference}\n          strokeDashoffset={offset}\n          strokeLinecap=\"round\"\n          fill=\"none\"\n          className=\"transition-all duration-700 ease-out\"\n        />\n      </svg>\n\n      {/* Text */}\n      <div className=\"absolute text-center\">\n        <span className=\"text-2xl font-bold text-gray-800 dark:text-gray-100\">\n          {Math.round(percent)}%\n        </span>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\n\nexport default function TachometerGauge({\n  lvoProb = 0,\n  ichProb = 0,\n  title = \"Decision Support – LVO/ICH\",\n}) {\n  const canvasRef = useRef(null);\n\n  // Compute confidence & clamped ratio here so JSX overlay can show it\n  const eps = 0.5;\n  const safeIch = Math.max(ichProb, eps);\n  const rawRatio = lvoProb / safeIch;\n  const rmin = 0.5,\n    rmax = 2.0;\n  const clampedRatio = Math.max(rmin, Math.min(rmax, rawRatio));\n  const absDiff = Math.abs(lvoProb - ichProb);\n  const maxProb = Math.max(lvoProb, ichProb);\n  let confidence =\n    absDiff < 10\n      ? Math.round(30 + maxProb * 0.3)\n      : absDiff < 20\n        ? Math.round(50 + maxProb * 0.4)\n        : Math.round(70 + maxProb * 0.3);\n  confidence = Math.max(0, Math.min(100, confidence));\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext(\"2d\");\n\n    let raf = null;\n    let currentPos = 0.5;\n\n    // recompute safe values inside effect for animation closure\n    const epsLocal = 0.5;\n    const safeIchLocal = Math.max(ichProb, epsLocal);\n    const rawRatioLocal = lvoProb / safeIchLocal;\n    const rminLocal = 0.5,\n      rmaxLocal = 2.0;\n    const clampedRatioLocal = Math.max(rminLocal, Math.min(rmaxLocal, rawRatioLocal));\n    const targetPosBase = (Math.log2(clampedRatioLocal) + 1) / 2;\n\n    // Keep a sanity cap for pixel buffer to avoid runaway sizes\n    const MAX_BACKING_PIXELS = 10000;\n\n    const draw = () => {\n      const dpr = window.devicePixelRatio || 1;\n      const rect = canvas.getBoundingClientRect();\n      const cssW = Math.max(1, rect.width || 300);\n      const cssH = Math.max(1, rect.height || 200);\n\n      // target backing buffer (device pixels)\n      const targetW = Math.min(MAX_BACKING_PIXELS, Math.floor(cssW * dpr));\n      const targetH = Math.min(MAX_BACKING_PIXELS, Math.floor(cssH * dpr));\n\n      // Only change backing buffer when needed (prevents resize loop)\n      if (canvas.width !== targetW || canvas.height !== targetH) {\n        canvas.width = targetW;\n        canvas.height = targetH;\n        // reset transform then scale once to DPR\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.scale(dpr, dpr);\n      }\n\n      const width = cssW;\n      const height = cssH;\n      const isMobile = width < 480;\n      const isTablet = width >= 480 && width < 1024;\n\n      // Refined thin proportions (kept your original logic)\n      const baseWidth = isMobile ? 12 : isTablet ? 14 : 16;\n      const padding = 15;\n      const maxRHorizontal = width / 2 - padding - baseWidth / 2;\n      const maxRVerticalBase = height / 2 - padding - baseWidth / 2;\n      const maxRVertical = isTablet ? Math.min(maxRVerticalBase, height * 0.42) : maxRVerticalBase;\n      const radius = Math.max(10, Math.min(maxRHorizontal, maxRVertical));\n      const cx = width / 2;\n      const cy = height - (padding + baseWidth / 2 + radius);\n\n      ctx.clearRect(0, 0, width, height);\n\n      const isDark = document.body.classList.contains(\"dark-mode\");\n\n      const colors = {\n        day: {\n          bezel: \"#e8eaed\",\n          bezelShadow: \"#c1c7cd\",\n          track: \"#f5f7fa\",\n          ich: \"#8b1538\",\n          lvo: \"#1e3a5f\",\n          neutral: \"#6b7280\",\n          needle: \"#d4af37\",\n          text: \"#374151\",\n          tickMajor: \"#4b5563\",\n          tickMinor: \"#9ca3af\",\n        },\n        night: {\n          bezel: \"#2d3036\",\n          bezelShadow: \"#1a1d23\",\n          track: \"#383c42\",\n          ich: \"#dc2626\",\n          lvo: \"#3b82f6\",\n          neutral: \"#64748b\",\n          needle: \"#fbbf24\",\n          text: \"#f3f4f6\",\n          tickMajor: \"#d1d5db\",\n          tickMinor: \"#6b7280\",\n        },\n      };\n      const theme = isDark ? colors.night : colors.day;\n\n      // Outer bezel\n      const bezelGradient = ctx.createLinearGradient(\n        cx - radius,\n        cy - radius,\n        cx + radius,\n        cy + radius\n      );\n      bezelGradient.addColorStop(0, theme.bezel);\n      bezelGradient.addColorStop(0.3, theme.bezelShadow);\n      bezelGradient.addColorStop(0.7, theme.bezel);\n      bezelGradient.addColorStop(1, theme.bezelShadow);\n\n      ctx.strokeStyle = bezelGradient;\n      ctx.lineWidth = baseWidth + 4;\n      ctx.lineCap = \"round\";\n      ctx.beginPath();\n      ctx.arc(cx, cy, radius + 2, 0, Math.PI, false);\n      ctx.stroke();\n\n      // Inner track\n      ctx.strokeStyle = theme.track;\n      ctx.lineWidth = baseWidth;\n      ctx.beginPath();\n      ctx.arc(cx, cy, radius, 0, Math.PI, false);\n      ctx.stroke();\n\n      // Gradient zones\n      const segments = 60;\n      const angleStep = Math.PI / segments;\n      for (let i = 0; i < segments; i++) {\n        const progress = i / (segments - 1);\n        const startAngle = i * angleStep;\n        const endAngle = Math.min((i + 1) * angleStep, Math.PI);\n\n        let r, g, b;\n        if (progress <= 0.5) {\n          const t = progress * 2;\n          r = Math.round(0 + 242 * t);\n          g = Math.round(154 + 66 * t);\n          b = Math.round(255 * (1 - t));\n        } else {\n          const t = (progress - 0.5) * 2;\n          r = Math.round(242 + 13 * t);\n          g = Math.round(220 * (1 - t));\n          b = Math.round(0);\n        }\n        const color = `rgba(${r}, ${g}, ${b}, 0.85)`;\n        ctx.strokeStyle = color;\n        ctx.lineWidth = Math.max(1, baseWidth - 4);\n        ctx.beginPath();\n        ctx.arc(cx, cy, radius, startAngle, endAngle, false);\n        ctx.stroke();\n      }\n\n      // Ticks (major & minor)\n      const majorTicks = [0.5, 0.75, 1.0, 1.5, 2.0];\n      const minorTicks = isMobile ? [] : [0.6, 0.9, 1.2, 1.8];\n\n      majorTicks.forEach(val => {\n        const pos = (Math.log2(val) + 1) / 2;\n        const a = Math.PI - pos * Math.PI;\n        const inner = radius - 12;\n        const outer = radius - 24;\n        ctx.strokeStyle = theme.tickMajor;\n        ctx.lineWidth = 1.5;\n        ctx.lineCap = \"round\";\n        ctx.beginPath();\n        ctx.moveTo(cx + Math.cos(a) * inner, cy + Math.sin(a) * inner);\n        ctx.lineTo(cx + Math.cos(a) * outer, cy + Math.sin(a) * outer);\n        ctx.stroke();\n\n        ctx.fillStyle = theme.text;\n        const tickFont = isMobile ? 13 : 15;\n        ctx.font = `600 ${tickFont}px \"SF Pro Display\", system-ui, sans-serif`;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(\n          val.toFixed(1),\n          cx + Math.cos(a) * (radius - 35),\n          cy + Math.sin(a) * (radius - 35)\n        );\n      });\n\n      minorTicks.forEach(val => {\n        const pos = (Math.log2(val) + 1) / 2;\n        const a = Math.PI - pos * Math.PI;\n        const inner = radius - 8;\n        const outer = radius - 16;\n        ctx.strokeStyle = theme.tickMinor;\n        ctx.lineWidth = 0.8;\n        ctx.lineCap = \"round\";\n        ctx.beginPath();\n        ctx.moveTo(cx + Math.cos(a) * inner, cy + Math.sin(a) * inner);\n        ctx.lineTo(cx + Math.cos(a) * outer, cy + Math.sin(a) * outer);\n        ctx.stroke();\n      });\n\n      // Threshold markers\n      const thresholds = [\n        { val: 0.77, label: \"ICH\", side: \"left\" },\n        { val: 1.3, label: \"LVO\", side: \"right\" },\n      ];\n      thresholds.forEach(th => {\n        const pos = (Math.log2(th.val) + 1) / 2;\n        const a = Math.PI - pos * Math.PI;\n        const inner = radius - 2;\n        const outer = radius + 12;\n        ctx.strokeStyle = th.side === \"left\" ? theme.ich : theme.lvo;\n        ctx.lineWidth = 2;\n        ctx.setLineDash([3, 2]);\n        ctx.beginPath();\n        ctx.moveTo(cx + Math.cos(a) * inner, cy + Math.sin(a) * inner);\n        ctx.lineTo(cx + Math.cos(a) * outer, cy + Math.sin(a) * outer);\n        ctx.stroke();\n        ctx.setLineDash([]);\n      });\n\n      // Zone labels\n      const labelFont = isMobile ? 15 : 17;\n      const labelDistance = isMobile ? radius + 35 : radius + 42;\n      ctx.fillStyle = isDark ? \"#ff4444\" : \"#ff0000\";\n      ctx.font = `700 ${labelFont}px \"SF Pro Display\", system-ui, sans-serif`;\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"middle\";\n      if (isDark) {\n        ctx.shadowColor = \"rgba(0,0,0,0.8)\";\n        ctx.shadowBlur = 3;\n        ctx.shadowOffsetY = 1;\n      }\n      ctx.fillText(\n        \"ICH\",\n        cx + Math.cos(Math.PI) * labelDistance,\n        cy + Math.sin(Math.PI) * labelDistance - 10\n      );\n      ctx.fillStyle = isDark ? \"#4499ff\" : \"#0099ff\";\n      ctx.fillText(\"LVO\", cx + Math.cos(0) * labelDistance, cy + Math.sin(0) * labelDistance - 10);\n      ctx.shadowBlur = 0;\n      ctx.shadowOffsetY = 0;\n\n      // Needle + animations (same logic)\n      const targetPos = targetPosBase;\n      currentPos += (targetPos - currentPos) * 0.12;\n      const needleAngle = Math.PI - currentPos * Math.PI;\n      const needleLen = Math.max(0, radius - baseWidth / 2 - 6);\n\n      // Confidence cone behind needle\n      const coneSpan = (1 - confidence / 100) * (Math.PI * 0.05);\n      ctx.save();\n      ctx.globalAlpha = isDark ? 0.2 : 0.25;\n      ctx.fillStyle = theme.neutral;\n      ctx.beginPath();\n      ctx.moveTo(cx, cy);\n      ctx.arc(cx, cy, needleLen * 0.85, needleAngle - coneSpan, needleAngle + coneSpan, false);\n      ctx.closePath();\n      ctx.fill();\n      ctx.restore();\n\n      // Needle gradient / shaft\n      const needleColor = theme.needle;\n      const now = performance.now();\n      const gradient = ctx.createLinearGradient(\n        cx,\n        cy,\n        cx + Math.cos(needleAngle) * needleLen,\n        cy + Math.sin(needleAngle) * needleLen\n      );\n      gradient.addColorStop(0, needleColor + \"ff\");\n      gradient.addColorStop(0.7, needleColor + \"dd\");\n      gradient.addColorStop(1, needleColor + \"bb\");\n\n      ctx.strokeStyle = gradient;\n      ctx.lineWidth = 2.5;\n      ctx.lineCap = \"round\";\n      ctx.shadowColor = isDark ? \"rgba(0,0,0,0.8)\" : \"rgba(0,0,0,0.3)\";\n      ctx.shadowBlur = 4;\n      ctx.shadowOffsetY = 2;\n      ctx.beginPath();\n      ctx.moveTo(cx, cy);\n      ctx.lineTo(cx + Math.cos(needleAngle) * needleLen, cy + Math.sin(needleAngle) * needleLen);\n      ctx.stroke();\n      ctx.shadowBlur = 0;\n      ctx.shadowOffsetY = 0;\n\n      // Tip glow & core\n      const tx = cx + Math.cos(needleAngle) * needleLen;\n      const ty = cy + Math.sin(needleAngle) * needleLen;\n      const pulse = 0.6 + 0.4 * Math.sin(now * 0.006);\n      const tipRadius = 3 + pulse * 2;\n\n      ctx.save();\n      ctx.globalAlpha = 0.15 + pulse * 0.25;\n      ctx.fillStyle = needleColor;\n      ctx.beginPath();\n      ctx.arc(tx, ty, tipRadius * 3.5, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.restore();\n\n      ctx.save();\n      ctx.globalAlpha = 0.4 + pulse * 0.3;\n      ctx.fillStyle = needleColor;\n      ctx.beginPath();\n      ctx.arc(tx, ty, tipRadius * 1.8, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.restore();\n\n      ctx.fillStyle = needleColor;\n      ctx.shadowColor = needleColor;\n      ctx.shadowBlur = 4 + pulse * 6;\n      ctx.beginPath();\n      ctx.arc(tx, ty, tipRadius, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.shadowBlur = 0;\n\n      // Hub\n      const hubOuter = 14;\n      const hubInner = 8;\n\n      const hubGradient = ctx.createRadialGradient(cx, cy, 0, cx, cy, hubOuter);\n      hubGradient.addColorStop(0, isDark ? \"#4a5568\" : \"#718096\");\n      hubGradient.addColorStop(0.7, isDark ? \"#2d3748\" : \"#4a5568\");\n      hubGradient.addColorStop(1, isDark ? \"#1a202c\" : \"#2d3748\");\n\n      ctx.fillStyle = hubGradient;\n      ctx.beginPath();\n      ctx.arc(cx, cy, hubOuter, 0, Math.PI * 2);\n      ctx.fill();\n\n      const innerGradient = ctx.createRadialGradient(cx, cy, 0, cx, cy, hubInner);\n      innerGradient.addColorStop(0, needleColor + \"aa\");\n      innerGradient.addColorStop(1, needleColor + \"44\");\n      ctx.fillStyle = innerGradient;\n      ctx.beginPath();\n      ctx.arc(cx, cy, hubInner, 0, Math.PI * 2);\n      ctx.fill();\n\n      ctx.strokeStyle = needleColor;\n      ctx.lineWidth = 1;\n      ctx.beginPath();\n      ctx.arc(cx, cy, hubOuter - 1, 0, Math.PI * 2);\n      ctx.stroke();\n\n      // Ratio display\n      const ratioFont = isMobile ? 18 : 22;\n      const ratioY = cy - radius * 0.65;\n      const plateWidth = isMobile ? 60 : 80;\n      const plateHeight = isMobile ? 24 : 30;\n\n      ctx.save();\n      ctx.globalAlpha = isDark ? 0.9 : 0.95;\n      ctx.fillStyle = isDark ? \"#1f2937\" : \"#ffffff\";\n      ctx.shadowColor = isDark ? \"rgba(0,0,0,0.5)\" : \"rgba(0,0,0,0.2)\";\n      ctx.shadowBlur = 8;\n      ctx.shadowOffsetY = 2;\n      ctx.fillRect(cx - plateWidth / 2, ratioY - plateHeight / 2, plateWidth, plateHeight);\n      ctx.restore();\n\n      ctx.fillStyle = theme.text;\n      ctx.font = `700 ${ratioFont}px \"SF Mono\", ui-monospace, monospace`;\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillText(clampedRatioLocal.toFixed(2), cx, ratioY);\n\n      // Confidence indicator (drawn inside gauge and guaranteed visible)\n      {\n        const confY = cy - radius * 0.25; // sit above hub, inside arc\n        const confWidth = Math.min(120, radius * 1.2);\n        const confHeight = Math.max(3, Math.min(6, radius * 0.06));\n\n        ctx.fillStyle = isDark ? \"#374151\" : \"#e5e7eb\";\n        ctx.fillRect(cx - confWidth / 2, confY, confWidth, confHeight);\n\n        const confFill = (confidence / 100) * confWidth;\n        const confGradient = ctx.createLinearGradient(\n          cx - confWidth / 2,\n          confY,\n          cx - confWidth / 2 + confFill,\n          confY\n        );\n        confGradient.addColorStop(0, theme.neutral);\n        confGradient.addColorStop(1, theme.needle);\n\n        ctx.fillStyle = confGradient;\n        ctx.fillRect(cx - confWidth / 2, confY, confFill, confHeight);\n\n        ctx.fillStyle = theme.text;\n        ctx.font = `500 ${isMobile ? 10 : 12}px \"SF Pro Display\", system-ui, sans-serif`;\n        ctx.textAlign = \"center\";\n        ctx.fillText(`${confidence}% confidence`, cx, confY - 8);\n      }\n\n      raf = requestAnimationFrame(draw);\n    };\n\n    draw();\n\n    return () => {\n      if (raf) cancelAnimationFrame(raf);\n    };\n    // lvoProb & ichProb are intentionally in deps so effect re-runs when values change\n  }, [lvoProb, ichProb]);\n\n  return (\n    <div\n      className=\"relative flex flex-col items-center justify-center p-4 bg-white dark:bg-gray-900  w-full max-w-[420px] aspect-[16/9]\"\n      data-react-tachometer\n      aria-label={title}\n    >\n      {/* Canvas container is constrained by Tailwind aspect / max-width above */}\n      <div className=\"w-full h-full flex items-center justify-center\">\n        <canvas ref={canvasRef} className=\"w-full h-full block\" />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport ProbabilityRing from \"./ProbabilityRing\";\nimport TachometerGauge from \"./TachometerGauge\";\n\nexport function mountIslands() {\n  // Probability rings\n  document.querySelectorAll(\"[data-react-ring]\").forEach(node => {\n    if (node.__mounted) return;\n    const percent = parseFloat(node.getAttribute(\"data-percent\")) || 0;\n    const level = node.getAttribute(\"data-level\") || \"normal\";\n    const root = createRoot(node);\n    root.render(<ProbabilityRing percent={percent} level={level} />);\n    node.__mounted = true;\n    node.__root = root;\n  });\n\n  // Tachometer\n  document.querySelectorAll(\"[data-react-tachometer]\").forEach(node => {\n    if (node.__mounted) return;\n    const ich = parseFloat(node.getAttribute(\"data-ich\")) || 0;\n    const lvo = parseFloat(node.getAttribute(\"data-lvo\")) || 0;\n    const title = node.getAttribute(\"data-title\") || \"Decision Support – LVO/ICH\";\n    const root = createRoot(node);\n    root.render(<TachometerGauge ichProb={ich} lvoProb={lvo} title={title} />);\n    node.__mounted = true;\n    node.__root = root;\n  });\n}\n\nexport function unmountIslands() {\n  document.querySelectorAll(\"[data-react-ring],[data-react-tachometer]\").forEach(node => {\n    if (node.__mounted && node.__root) {\n      node.__root.unmount();\n      node.__mounted = false;\n      node.__root = null;\n    }\n  });\n}\n","/**\n * Command Pattern for Medical Actions and Audit Trail\n * iGFAP Stroke Triage Assistant - Enterprise Architecture\n *\n * Provides reversible medical actions with comprehensive audit logging\n */\n\nimport { medicalEventObserver, MEDICAL_EVENTS } from \"./observer.js\";\n\n/**\n * Abstract base command for medical actions\n */\nclass MedicalCommand {\n  constructor(name, description, metadata = {}) {\n    this.name = name;\n    this.description = description;\n    this.metadata = {\n      ...metadata,\n      id: `cmd_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      timestamp: new Date().toISOString(),\n    };\n    this.executed = false;\n    this.undone = false;\n  }\n\n  /**\n   * Execute the medical command\n   * @returns {Promise<any>} Command execution result\n   */\n  async execute() {\n    if (this.executed && !this.undone) {\n      throw new Error(`Command ${this.name} has already been executed`);\n    }\n\n    try {\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n        action: \"command_execute_start\",\n        command: this.name,\n        commandId: this.metadata.id,\n      });\n\n      const result = await this.doExecute();\n\n      this.executed = true;\n      this.undone = false;\n\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n        action: \"command_execute_success\",\n        command: this.name,\n        commandId: this.metadata.id,\n      });\n\n      return result;\n    } catch (error) {\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n        action: \"command_execute_error\",\n        command: this.name,\n        commandId: this.metadata.id,\n        error: error.message,\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Undo the medical command\n   * @returns {Promise<any>} Command undo result\n   */\n  async undo() {\n    if (!this.executed || this.undone) {\n      throw new Error(`Command ${this.name} cannot be undone`);\n    }\n\n    try {\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n        action: \"command_undo_start\",\n        command: this.name,\n        commandId: this.metadata.id,\n      });\n\n      const result = await this.doUndo();\n\n      this.undone = true;\n\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n        action: \"command_undo_success\",\n        command: this.name,\n        commandId: this.metadata.id,\n      });\n\n      return result;\n    } catch (error) {\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n        action: \"command_undo_error\",\n        command: this.name,\n        commandId: this.metadata.id,\n        error: error.message,\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Implement the actual command execution\n   * Must be overridden by concrete commands\n   */\n  async doExecute() {\n    throw new Error(\"doExecute() must be implemented by concrete command\");\n  }\n\n  /**\n   * Implement the actual command undo\n   * Must be overridden by concrete commands\n   */\n  async doUndo() {\n    throw new Error(\"doUndo() must be implemented by concrete command\");\n  }\n\n  /**\n   * Check if command can be undone\n   */\n  canUndo() {\n    return this.executed && !this.undone;\n  }\n\n  /**\n   * Get command summary for audit\n   */\n  getSummary() {\n    return {\n      name: this.name,\n      description: this.description,\n      id: this.metadata.id,\n      timestamp: this.metadata.timestamp,\n      executed: this.executed,\n      undone: this.undone,\n    };\n  }\n}\n\n/**\n * Command for updating patient data\n */\nclass UpdatePatientDataCommand extends MedicalCommand {\n  constructor(fieldName, newValue, previousValue, store) {\n    super(\n      \"UPDATE_PATIENT_DATA\",\n      `Update ${fieldName} from ${previousValue} to ${newValue}`,\n      { fieldName, newValue, previousValue },\n    );\n    this.fieldName = fieldName;\n    this.newValue = newValue;\n    this.previousValue = previousValue;\n    this.store = store;\n  }\n\n  async doExecute() {\n    // Update the patient data in store\n    const currentData = this.store.getFormData(\"current\") || {};\n    currentData[this.fieldName] = this.newValue;\n    this.store.setFormData(\"current\", currentData);\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.PATIENT_DATA_UPDATED, {\n      field: this.fieldName,\n      newValue: this.newValue,\n      previousValue: this.previousValue,\n    });\n\n    return { field: this.fieldName, value: this.newValue };\n  }\n\n  async doUndo() {\n    // Restore the previous value\n    const currentData = this.store.getFormData(\"current\") || {};\n    if (this.previousValue === null || this.previousValue === undefined) {\n      delete currentData[this.fieldName];\n    } else {\n      currentData[this.fieldName] = this.previousValue;\n    }\n    this.store.setFormData(\"current\", currentData);\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.PATIENT_DATA_UPDATED, {\n      field: this.fieldName,\n      newValue: this.previousValue,\n      previousValue: this.newValue,\n      action: \"undo\",\n    });\n\n    return { field: this.fieldName, value: this.previousValue };\n  }\n}\n\n/**\n * Command for navigating between screens\n */\nclass NavigationCommand extends MedicalCommand {\n  constructor(targetScreen, sourceScreen, store) {\n    super(\n      \"NAVIGATE\",\n      `Navigate from ${sourceScreen} to ${targetScreen}`,\n      { targetScreen, sourceScreen },\n    );\n    this.targetScreen = targetScreen;\n    this.sourceScreen = sourceScreen;\n    this.store = store;\n  }\n\n  async doExecute() {\n    this.store.navigate(this.targetScreen);\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.NAVIGATION_CHANGED, {\n      from: this.sourceScreen,\n      to: this.targetScreen,\n    });\n\n    return { from: this.sourceScreen, to: this.targetScreen };\n  }\n\n  async doUndo() {\n    this.store.navigate(this.sourceScreen);\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.NAVIGATION_CHANGED, {\n      from: this.targetScreen,\n      to: this.sourceScreen,\n      action: \"undo\",\n    });\n\n    return { from: this.targetScreen, to: this.sourceScreen };\n  }\n}\n\n/**\n * Command for form submission\n */\nclass SubmitFormCommand extends MedicalCommand {\n  constructor(formData, moduleType, predictionStrategy) {\n    super(\n      \"SUBMIT_FORM\",\n      `Submit ${moduleType} form for prediction`,\n      { moduleType, formFields: Object.keys(formData) },\n    );\n    this.formData = { ...formData };\n    this.moduleType = moduleType;\n    this.predictionStrategy = predictionStrategy;\n    this.results = null;\n  }\n\n  async doExecute() {\n    // Set the prediction strategy\n    this.predictionStrategy.setStrategy(this.getStrategyName());\n\n    // Execute prediction\n    this.results = await this.predictionStrategy.predict(this.formData);\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.FORM_SUBMITTED, {\n      moduleType: this.moduleType,\n      fieldsCount: Object.keys(this.formData).length,\n      success: true,\n    });\n\n    return this.results;\n  }\n\n  async doUndo() {\n    // Clear the results (cannot truly undo API call, but can clear local state)\n    this.results = null;\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.FORM_SUBMITTED, {\n      moduleType: this.moduleType,\n      action: \"undo\",\n    });\n\n    return null;\n  }\n\n  getStrategyName() {\n    switch (this.moduleType) {\n    case \"coma\":\n      return \"COMA_ICH\";\n    case \"limited\":\n      return \"LIMITED_DATA_ICH\";\n    case \"full\":\n      return \"FULL_STROKE\";\n    default:\n      throw new Error(`Unknown module type: ${this.moduleType}`);\n    }\n  }\n}\n\n/**\n * Command for clearing sensitive data\n */\nclass ClearDataCommand extends MedicalCommand {\n  constructor(dataType, store) {\n    super(\n      \"CLEAR_DATA\",\n      `Clear ${dataType} data for privacy compliance`,\n      { dataType },\n    );\n    this.dataType = dataType;\n    this.store = store;\n    this.backupData = null;\n  }\n\n  async doExecute() {\n    // Backup data before clearing\n    this.backupData = this.store.getState();\n\n    // Clear the specified data\n    switch (this.dataType) {\n    case \"all\":\n      this.store.reset();\n      break;\n    case \"forms\":\n      this.store.clearFormData();\n      break;\n    case \"results\":\n      this.store.clearResults();\n      break;\n    default:\n      throw new Error(`Unknown data type: ${this.dataType}`);\n    }\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n      action: \"data_cleared\",\n      dataType: this.dataType,\n    });\n\n    return { dataType: this.dataType, cleared: true };\n  }\n\n  async doUndo() {\n    // Restore from backup (if within reasonable time limit)\n    if (this.backupData) {\n      this.store.setState(this.backupData);\n\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n        action: \"data_restored\",\n        dataType: this.dataType,\n      });\n\n      return { dataType: this.dataType, restored: true };\n    }\n\n    throw new Error(\"Cannot undo data clear: backup not available\");\n  }\n}\n\n/**\n * Command invoker for managing medical command execution\n */\nexport class MedicalCommandInvoker {\n  constructor() {\n    this.commandHistory = [];\n    this.currentIndex = -1;\n    this.maxHistorySize = 100;\n  }\n\n  /**\n   * Execute a medical command\n   * @param {MedicalCommand} command - Command to execute\n   * @returns {Promise<any>} Command result\n   */\n  async executeCommand(command) {\n    if (!(command instanceof MedicalCommand)) {\n      throw new Error(\"Command must extend MedicalCommand\");\n    }\n\n    const result = await command.execute();\n\n    // Add to history (remove any commands after current index)\n    this.commandHistory = this.commandHistory.slice(0, this.currentIndex + 1);\n    this.commandHistory.push(command);\n    this.currentIndex = this.commandHistory.length - 1;\n\n    // Limit history size\n    if (this.commandHistory.length > this.maxHistorySize) {\n      this.commandHistory.shift();\n      this.currentIndex -= 1;\n    }\n\n    return result;\n  }\n\n  /**\n   * Undo the last command\n   * @returns {Promise<any>} Undo result\n   */\n  async undo() {\n    if (this.currentIndex < 0) {\n      throw new Error(\"No commands to undo\");\n    }\n\n    const command = this.commandHistory[this.currentIndex];\n    if (!command.canUndo()) {\n      throw new Error(`Command ${command.name} cannot be undone`);\n    }\n\n    const result = await command.undo();\n    this.currentIndex -= 1;\n\n    return result;\n  }\n\n  /**\n   * Redo the next command\n   * @returns {Promise<any>} Redo result\n   */\n  async redo() {\n    if (this.currentIndex >= this.commandHistory.length - 1) {\n      throw new Error(\"No commands to redo\");\n    }\n\n    this.currentIndex += 1;\n    const command = this.commandHistory[this.currentIndex];\n\n    return await command.execute();\n  }\n\n  /**\n   * Check if undo is possible\n   */\n  canUndo() {\n    return this.currentIndex >= 0\n           && this.commandHistory[this.currentIndex]\n           && this.commandHistory[this.currentIndex].canUndo();\n  }\n\n  /**\n   * Check if redo is possible\n   */\n  canRedo() {\n    return this.currentIndex < this.commandHistory.length - 1;\n  }\n\n  /**\n   * Get command history for audit\n   */\n  getCommandHistory() {\n    return this.commandHistory.map((cmd) => cmd.getSummary());\n  }\n\n  /**\n   * Clear command history (privacy compliance)\n   */\n  clearHistory() {\n    this.commandHistory = [];\n    this.currentIndex = -1;\n  }\n\n  /**\n   * Get current command statistics\n   */\n  getStats() {\n    return {\n      totalCommands: this.commandHistory.length,\n      currentIndex: this.currentIndex,\n      canUndo: this.canUndo(),\n      canRedo: this.canRedo(),\n      executedCommands: this.currentIndex + 1,\n    };\n  }\n}\n\n// Export command classes and singleton invoker\nexport {\n  MedicalCommand,\n  UpdatePatientDataCommand,\n  NavigationCommand,\n  SubmitFormCommand,\n  ClearDataCommand,\n};\n\nexport const medicalCommandInvoker = new MedicalCommandInvoker();\n","/**\n * Strategy Pattern for Medical Prediction Algorithms\n * iGFAP Stroke Triage Assistant - Enterprise Architecture\n *\n * Provides pluggable prediction strategies for different medical scenarios\n */\n\nimport { predictComaIch, predictLimitedIch, predictFullStroke } from \"../api/client.js\";\n\nimport { medicalEventObserver, MEDICAL_EVENTS } from \"./observer.js\";\n\n/**\n * Abstract base strategy for medical predictions\n */\nclass PredictionStrategy {\n  constructor(name, description) {\n    this.name = name;\n    this.description = description;\n    this.requiredFields = [];\n    this.optionalFields = [];\n  }\n\n  /**\n   * Validate input data before prediction\n   * @param {Object} inputData - Input data for prediction\n   * @returns {Object} Validation result\n   */\n  validateInput(inputData) {\n    const errors = [];\n    const missingFields = [];\n\n    // Check required fields\n    this.requiredFields.forEach((field) => {\n      if (!(field in inputData) || inputData[field] === null || inputData[field] === undefined) {\n        missingFields.push(field);\n      }\n    });\n\n    if (missingFields.length > 0) {\n      errors.push(`Missing required fields: ${missingFields.join(\", \")}`);\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n      missingFields,\n    };\n  }\n\n  /**\n   * Preprocess input data for the specific strategy\n   * @param {Object} inputData - Raw input data\n   * @returns {Object} Processed input data\n   */\n  preprocessInput(inputData) {\n    // Default implementation - can be overridden by specific strategies\n    return { ...inputData };\n  }\n\n  /**\n   * Execute the prediction strategy\n   * @param {Object} inputData - Input data for prediction\n   * @returns {Promise<Object>} Prediction result\n   */\n  async predict(inputData) {\n    throw new Error(\"predict() method must be implemented by concrete strategy\");\n  }\n\n  /**\n   * Postprocess prediction results\n   * @param {Object} rawResult - Raw prediction result\n   * @param {Object} inputData - Original input data\n   * @returns {Object} Processed result\n   */\n  postprocessResult(rawResult, inputData) {\n    return {\n      ...rawResult,\n      strategy: this.name,\n      timestamp: new Date().toISOString(),\n      inputSummary: this.createInputSummary(inputData),\n    };\n  }\n\n  /**\n   * Create a summary of input data for audit trail\n   * @param {Object} inputData - Input data\n   * @returns {Object} Input summary (sanitized)\n   */\n  createInputSummary(inputData) {\n    const summary = {};\n    [...this.requiredFields, ...this.optionalFields].forEach((field) => {\n      if (field in inputData) {\n        summary[field] = typeof inputData[field];\n      }\n    });\n    return summary;\n  }\n}\n\n/**\n * Strategy for coma patients (GCS < 8)\n */\nclass ComaPredictionStrategy extends PredictionStrategy {\n  constructor() {\n    super(\"COMA_ICH\", \"ICH prediction for comatose patients\");\n    this.requiredFields = [\"gfap\"];\n    this.optionalFields = [\"age\", \"symptoms_duration\"];\n  }\n\n  preprocessInput(inputData) {\n    return {\n      gfap: parseFloat(inputData.gfap),\n      patientType: \"comatose\",\n    };\n  }\n\n  async predict(inputData) {\n    const validation = this.validateInput(inputData);\n    if (!validation.isValid) {\n      throw new Error(`Validation failed: ${validation.errors.join(\", \")}`);\n    }\n\n    const processedInput = this.preprocessInput(inputData);\n\n    // Emit event for audit trail\n    medicalEventObserver.publish(MEDICAL_EVENTS.ASSESSMENT_STARTED, {\n      strategy: this.name,\n      inputFields: Object.keys(processedInput),\n    });\n\n    try {\n      const rawResult = await predictComaIch(processedInput);\n      const result = this.postprocessResult(rawResult, inputData);\n\n      // Emit completion event\n      medicalEventObserver.publish(MEDICAL_EVENTS.RESULTS_GENERATED, {\n        strategy: this.name,\n        success: true,\n        confidence: result.confidence,\n      });\n\n      return result;\n    } catch (error) {\n      medicalEventObserver.publish(MEDICAL_EVENTS.SECURITY_EVENT, {\n        type: \"prediction_error\",\n        strategy: this.name,\n        error: error.message,\n      });\n      throw error;\n    }\n  }\n}\n\n/**\n * Strategy for limited data scenarios\n */\nclass LimitedDataPredictionStrategy extends PredictionStrategy {\n  constructor() {\n    super(\"LIMITED_DATA_ICH\", \"ICH prediction with limited clinical data\");\n    this.requiredFields = [\"gfap\", \"age\", \"systolic_bp\", \"diastolic_bp\"];\n    this.optionalFields = [\"weakness_sudden\", \"speech_sudden\", \"vigilanzminderung\"];\n  }\n\n  preprocessInput(inputData) {\n    return {\n      gfap: parseFloat(inputData.gfap),\n      age: parseInt(inputData.age, 10),\n      systolic_bp: parseFloat(inputData.systolic_bp),\n      diastolic_bp: parseFloat(inputData.diastolic_bp),\n      weakness_sudden: inputData.weakness_sudden === true || inputData.weakness_sudden === \"true\",\n      speech_sudden: inputData.speech_sudden === true || inputData.speech_sudden === \"true\",\n      vigilanzminderung: inputData.vigilanzminderung === true || inputData.vigilanzminderung === \"true\",\n    };\n  }\n\n  async predict(inputData) {\n    const validation = this.validateInput(inputData);\n    if (!validation.isValid) {\n      throw new Error(`Validation failed: ${validation.errors.join(\", \")}`);\n    }\n\n    const processedInput = this.preprocessInput(inputData);\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.ASSESSMENT_STARTED, {\n      strategy: this.name,\n      inputFields: Object.keys(processedInput),\n    });\n\n    try {\n      const rawResult = await predictLimitedIch(processedInput);\n      const result = this.postprocessResult(rawResult, inputData);\n\n      medicalEventObserver.publish(MEDICAL_EVENTS.RESULTS_GENERATED, {\n        strategy: this.name,\n        success: true,\n        confidence: result.confidence,\n      });\n\n      return result;\n    } catch (error) {\n      medicalEventObserver.publish(MEDICAL_EVENTS.SECURITY_EVENT, {\n        type: \"prediction_error\",\n        strategy: this.name,\n        error: error.message,\n      });\n      throw error;\n    }\n  }\n}\n\n/**\n * Strategy for comprehensive stroke assessment\n */\nclass FullStrokePredictionStrategy extends PredictionStrategy {\n  constructor() {\n    super(\"FULL_STROKE\", \"Comprehensive stroke prediction with full clinical data\");\n    this.requiredFields = [\n      \"gfap\", \"age\", \"systolic_bp\", \"diastolic_bp\", \"fast_ed_score\",\n      \"sex\", \"facialtwitching\", \"armparese\", \"speechdeficit\", \"gaze\", \"agitation\",\n    ];\n    this.optionalFields = [\"strokeOnsetKnown\", \"medical_history\"];\n  }\n\n  preprocessInput(inputData) {\n    return {\n      gfap: parseFloat(inputData.gfap),\n      age: parseInt(inputData.age, 10),\n      systolic_bp: parseFloat(inputData.systolic_bp),\n      diastolic_bp: parseFloat(inputData.diastolic_bp),\n      fast_ed_score: parseInt(inputData.fast_ed_score, 10),\n      sex: inputData.sex === \"male\" ? 1 : 0,\n      facialtwitching: inputData.facialtwitching === true || inputData.facialtwitching === \"true\",\n      armparese: inputData.armparese === true || inputData.armparese === \"true\",\n      speechdeficit: inputData.speechdeficit === true || inputData.speechdeficit === \"true\",\n      gaze: inputData.gaze === true || inputData.gaze === \"true\",\n      agitation: inputData.agitation === true || inputData.agitation === \"true\",\n      strokeOnsetKnown: inputData.strokeOnsetKnown === true || inputData.strokeOnsetKnown === \"true\",\n    };\n  }\n\n  async predict(inputData) {\n    const validation = this.validateInput(inputData);\n    if (!validation.isValid) {\n      throw new Error(`Validation failed: ${validation.errors.join(\", \")}`);\n    }\n\n    const processedInput = this.preprocessInput(inputData);\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.ASSESSMENT_STARTED, {\n      strategy: this.name,\n      inputFields: Object.keys(processedInput),\n    });\n\n    try {\n      const rawResult = await predictFullStroke(processedInput);\n      const result = this.postprocessResult(rawResult, inputData);\n\n      medicalEventObserver.publish(MEDICAL_EVENTS.RESULTS_GENERATED, {\n        strategy: this.name,\n        success: true,\n        confidence: result.confidence,\n      });\n\n      return result;\n    } catch (error) {\n      medicalEventObserver.publish(MEDICAL_EVENTS.SECURITY_EVENT, {\n        type: \"prediction_error\",\n        strategy: this.name,\n        error: error.message,\n      });\n      throw error;\n    }\n  }\n}\n\n/**\n * Context class for managing prediction strategies\n */\nexport class PredictionContext {\n  constructor() {\n    this.strategies = new Map();\n    this.currentStrategy = null;\n    this.predictionHistory = [];\n\n    // Register default strategies\n    this.registerStrategy(new ComaPredictionStrategy());\n    this.registerStrategy(new LimitedDataPredictionStrategy());\n    this.registerStrategy(new FullStrokePredictionStrategy());\n  }\n\n  /**\n   * Register a new prediction strategy\n   * @param {PredictionStrategy} strategy - Strategy to register\n   */\n  registerStrategy(strategy) {\n    if (!(strategy instanceof PredictionStrategy)) {\n      throw new Error(\"Strategy must extend PredictionStrategy\");\n    }\n    this.strategies.set(strategy.name, strategy);\n  }\n\n  /**\n   * Set the current prediction strategy\n   * @param {string} strategyName - Name of the strategy to use\n   */\n  setStrategy(strategyName) {\n    const strategy = this.strategies.get(strategyName);\n    if (!strategy) {\n      throw new Error(`Unknown strategy: ${strategyName}`);\n    }\n    this.currentStrategy = strategy;\n  }\n\n  /**\n   * Execute prediction using the current strategy\n   * @param {Object} inputData - Input data for prediction\n   * @returns {Promise<Object>} Prediction result\n   */\n  async predict(inputData) {\n    if (!this.currentStrategy) {\n      throw new Error(\"No prediction strategy selected\");\n    }\n\n    const startTime = performance.now();\n\n    try {\n      const result = await this.currentStrategy.predict(inputData);\n      const duration = performance.now() - startTime;\n\n      // Add to prediction history\n      this.predictionHistory.push({\n        strategy: this.currentStrategy.name,\n        timestamp: new Date().toISOString(),\n        duration,\n        success: true,\n      });\n\n      return result;\n    } catch (error) {\n      const duration = performance.now() - startTime;\n\n      this.predictionHistory.push({\n        strategy: this.currentStrategy.name,\n        timestamp: new Date().toISOString(),\n        duration,\n        success: false,\n        error: error.message,\n      });\n\n      throw error;\n    }\n  }\n\n  /**\n   * Get available strategies\n   * @returns {Array} List of available strategies\n   */\n  getAvailableStrategies() {\n    return Array.from(this.strategies.keys());\n  }\n\n  /**\n   * Get strategy information\n   * @param {string} strategyName - Name of the strategy\n   * @returns {Object} Strategy information\n   */\n  getStrategyInfo(strategyName) {\n    const strategy = this.strategies.get(strategyName);\n    if (!strategy) {\n      return null;\n    }\n\n    return {\n      name: strategy.name,\n      description: strategy.description,\n      requiredFields: strategy.requiredFields,\n      optionalFields: strategy.optionalFields,\n    };\n  }\n\n  /**\n   * Get prediction history for audit\n   * @returns {Array} Prediction history\n   */\n  getPredictionHistory() {\n    return [...this.predictionHistory];\n  }\n\n  /**\n   * Clear prediction history (privacy compliance)\n   */\n  clearHistory() {\n    this.predictionHistory = [];\n  }\n}\n\n// Export singleton instance\nexport const predictionContext = new PredictionContext();\n\n// Export strategy types for external reference\nexport const PREDICTION_STRATEGIES = {\n  COMA_ICH: \"COMA_ICH\",\n  LIMITED_DATA_ICH: \"LIMITED_DATA_ICH\",\n  FULL_STROKE: \"FULL_STROKE\",\n};\n","/**\n * Factory Pattern for Medical Validation Rules\n * iGFAP Stroke Triage Assistant - Enterprise Architecture\n *\n * Creates validation rules based on medical field types and requirements\n */\n\nimport { GFAP_RANGES } from \"../config.js\";\n\n/**\n * Abstract base class for validation rules\n */\nclass ValidationRule {\n  constructor(name, required = false) {\n    this.name = name;\n    this.required = required;\n    this.validators = [];\n    this.medicalChecks = [];\n  }\n\n  addValidator(validator) {\n    this.validators.push(validator);\n    return this;\n  }\n\n  addMedicalCheck(check) {\n    this.medicalChecks.push(check);\n    return this;\n  }\n\n  validate(value, formData = null) {\n    const errors = [];\n\n    // Check required field\n    if (this.required && !value && value !== 0) {\n      errors.push(\"This field is required\");\n    }\n\n    // Run basic validators\n    for (const validator of this.validators) {\n      const error = validator(value);\n      if (error) {\n        errors.push(error);\n      }\n    }\n\n    // Run medical checks\n    for (const check of this.medicalChecks) {\n      const medicalError = check(value, formData);\n      if (medicalError) {\n        errors.push(medicalError);\n      }\n    }\n\n    return errors;\n  }\n\n  toConfig() {\n    return {\n      required: this.required,\n      validate: (value, formData) => this.validate(value, formData),\n    };\n  }\n}\n\n/**\n * Specific validation rule types\n */\nclass NumericValidationRule extends ValidationRule {\n  constructor(name, required = false, min = null, max = null) {\n    super(name, required);\n    this.min = min;\n    this.max = max;\n    this.type = \"number\";\n\n    if (min !== null) {\n      this.addValidator((value) => {\n        if (value !== \"\" && !isNaN(value) && parseFloat(value) < min) {\n          return `Value must be at least ${min}`;\n        }\n        return null;\n      });\n    }\n\n    if (max !== null) {\n      this.addValidator((value) => {\n        if (value !== \"\" && !isNaN(value) && parseFloat(value) > max) {\n          return `Value must be at most ${max}`;\n        }\n        return null;\n      });\n    }\n  }\n\n  toConfig() {\n    return {\n      ...super.toConfig(),\n      min: this.min,\n      max: this.max,\n      type: this.type,\n    };\n  }\n}\n\nclass BiomarkerValidationRule extends NumericValidationRule {\n  constructor(name, biomarkerType, ranges) {\n    super(name, true, ranges.min, ranges.max);\n    this.biomarkerType = biomarkerType;\n    this.ranges = ranges;\n\n    // Add biomarker-specific medical checks\n    this.addMedicalCheck((value) => {\n      const numValue = parseFloat(value);\n      if (isNaN(numValue)) {\n        return null;\n      }\n\n      if (biomarkerType === \"GFAP\" && numValue > ranges.critical) {\n        return \"Extremely high GFAP value - please verify lab result\";\n      }\n\n      return null;\n    });\n  }\n}\n\nclass VitalSignValidationRule extends NumericValidationRule {\n  constructor(name, vitalType, min, max) {\n    super(name, true, min, max);\n    this.vitalType = vitalType;\n\n    // Add vital sign medical checks\n    this.addMedicalCheck((value, formData) => {\n      const numValue = parseFloat(value);\n      if (isNaN(numValue)) {\n        return null;\n      }\n\n      switch (vitalType) {\n      case \"SYSTOLIC_BP\":\n        if (formData?.diastolic_bp) {\n          const diastolic = parseFloat(formData.diastolic_bp);\n          if (!isNaN(diastolic) && numValue <= diastolic) {\n            return \"Systolic BP must be higher than diastolic BP\";\n          }\n        }\n        break;\n      case \"DIASTOLIC_BP\":\n        if (formData?.systolic_bp) {\n          const systolic = parseFloat(formData.systolic_bp);\n          if (!isNaN(systolic) && numValue >= systolic) {\n            return \"Diastolic BP must be lower than systolic BP\";\n          }\n        }\n        break;\n      }\n\n      return null;\n    });\n  }\n}\n\nclass AgeValidationRule extends NumericValidationRule {\n  constructor(name) {\n    super(name, true, 0, 120);\n\n    this.addMedicalCheck((value) => {\n      const numValue = parseFloat(value);\n      if (isNaN(numValue)) {\n        return null;\n      }\n\n      if (numValue < 18) {\n        return \"Emergency stroke assessment typically for adults (≥18 years)\";\n      }\n\n      return null;\n    });\n  }\n}\n\nclass ClinicalScaleValidationRule extends NumericValidationRule {\n  constructor(name, scaleType, min, max) {\n    super(name, true, min, max);\n    this.scaleType = scaleType;\n\n    this.addMedicalCheck((value) => {\n      const numValue = parseFloat(value);\n      if (isNaN(numValue)) {\n        return null;\n      }\n\n      switch (scaleType) {\n      case \"GCS\":\n        if (numValue < 8) {\n          return \"GCS < 8 indicates severe consciousness impairment - consider coma module\";\n        }\n        break;\n      case \"FAST_ED\":\n        if (numValue >= 4) {\n          return \"High FAST-ED score suggests LVO - consider urgent intervention\";\n        }\n        break;\n      }\n\n      return null;\n    });\n  }\n}\n\n/**\n * Factory for creating medical validation rules\n */\nexport class MedicalValidationFactory {\n  static createRule(type, name, options = {}) {\n    switch (type) {\n    case \"AGE\":\n      return new AgeValidationRule(name);\n\n    case \"BIOMARKER\":\n      if (options.biomarkerType === \"GFAP\") {\n        return new BiomarkerValidationRule(name, \"GFAP\", GFAP_RANGES);\n      }\n      throw new Error(`Unsupported biomarker type: ${options.biomarkerType}`);\n\n    case \"VITAL_SIGN\":\n      return new VitalSignValidationRule(\n        name,\n        options.vitalType,\n        options.min,\n        options.max,\n      );\n\n    case \"CLINICAL_SCALE\":\n      return new ClinicalScaleValidationRule(\n        name,\n        options.scaleType,\n        options.min,\n        options.max,\n      );\n\n    case \"NUMERIC\":\n      return new NumericValidationRule(\n        name,\n        options.required,\n        options.min,\n        options.max,\n      );\n\n    default:\n      throw new Error(`Unsupported validation rule type: ${type}`);\n    }\n  }\n\n  /**\n   * Create a complete validation rule set for a medical module\n   * @param {string} moduleType - Type of medical module\n   * @returns {Object} Complete validation rule configuration\n   */\n  static createModuleValidation(moduleType) {\n    const rules = {};\n\n    switch (moduleType) {\n    case \"LIMITED\":\n      rules.age_years = this.createRule(\"AGE\", \"age_years\").toConfig();\n      rules.systolic_bp = this.createRule(\"VITAL_SIGN\", \"systolic_bp\", {\n        vitalType: \"SYSTOLIC_BP\",\n        min: 60,\n        max: 300,\n      }).toConfig();\n      rules.diastolic_bp = this.createRule(\"VITAL_SIGN\", \"diastolic_bp\", {\n        vitalType: \"DIASTOLIC_BP\",\n        min: 30,\n        max: 200,\n      }).toConfig();\n      rules.gfap_value = this.createRule(\"BIOMARKER\", \"gfap_value\", {\n        biomarkerType: \"GFAP\",\n      }).toConfig();\n      break;\n\n    case \"FULL\":\n      // Include all limited module rules\n      Object.assign(rules, this.createModuleValidation(\"LIMITED\"));\n\n      // Add additional full module rules\n      rules.fast_ed_score = this.createRule(\"CLINICAL_SCALE\", \"fast_ed_score\", {\n        scaleType: \"FAST_ED\",\n        min: 0,\n        max: 9,\n      }).toConfig();\n      break;\n\n    case \"COMA\":\n      rules.gfap_value = this.createRule(\"BIOMARKER\", \"gfap_value\", {\n        biomarkerType: \"GFAP\",\n      }).toConfig();\n      rules.gcs = this.createRule(\"CLINICAL_SCALE\", \"gcs\", {\n        scaleType: \"GCS\",\n        min: 3,\n        max: 15,\n      }).toConfig();\n      break;\n\n    default:\n      throw new Error(`Unsupported module type: ${moduleType}`);\n    }\n\n    return rules;\n  }\n\n  /**\n   * Validate form data using factory-created rules\n   * @param {Object} formData - Form data to validate\n   * @param {string} moduleType - Type of medical module\n   * @returns {Object} Validation result\n   */\n  static validateModule(formData, moduleType) {\n    const rules = this.createModuleValidation(moduleType);\n    const validationErrors = {};\n    let isValid = true;\n\n    Object.entries(rules).forEach(([fieldName, rule]) => {\n      const value = formData[fieldName];\n      const errors = rule.validate(value, formData);\n\n      if (errors.length > 0) {\n        validationErrors[fieldName] = errors;\n        isValid = false;\n      }\n    });\n\n    return { isValid, validationErrors };\n  }\n}\n\n// Export validation rule types for external use\nexport const VALIDATION_RULE_TYPES = {\n  AGE: \"AGE\",\n  BIOMARKER: \"BIOMARKER\",\n  VITAL_SIGN: \"VITAL_SIGN\",\n  CLINICAL_SCALE: \"CLINICAL_SCALE\",\n  NUMERIC: \"NUMERIC\",\n};\n\nexport const BIOMARKER_TYPES = {\n  GFAP: \"GFAP\",\n};\n\nexport const VITAL_SIGN_TYPES = {\n  SYSTOLIC_BP: \"SYSTOLIC_BP\",\n  DIASTOLIC_BP: \"DIASTOLIC_BP\",\n};\n\nexport const CLINICAL_SCALE_TYPES = {\n  GCS: \"GCS\",\n  FAST_ED: \"FAST_ED\",\n};\n"],"file":"assets/index-bLHn9iqQ.js"}